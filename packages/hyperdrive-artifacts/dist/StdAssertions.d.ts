export declare const StdAssertions: {
    readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "IS_TEST()": "fa7626d4";
        readonly "failed()": "ba414fa6";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdAssertions.sol\":\"StdAssertions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256";
                    readonly name: "";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address";
                    readonly name: "val";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "val";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "val";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "string";
                    readonly name: "val";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "logs";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "IS_TEST";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "failed";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {};
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {};
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "lib/forge-std/src/StdAssertions.sol": "StdAssertions";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "lib/forge-std/lib/ds-test/src/test.sol": {
                readonly keccak256: "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b";
                readonly urls: readonly ["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240", "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"];
                readonly license: "GPL-3.0-or-later";
            };
            readonly "lib/forge-std/src/StdAssertions.sol": {
                readonly keccak256: "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60";
                readonly urls: readonly ["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b", "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdMath.sol": {
                readonly keccak256: "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2";
                readonly urls: readonly ["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92", "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "lib/forge-std/src/StdAssertions.sol";
        readonly id: 26820;
        readonly exportedSymbols: {
            readonly DSTest: readonly [25326];
            readonly StdAssertions: readonly [26819];
            readonly stdMath: readonly [31365];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "32:13639:96";
        readonly nodes: readonly [{
            readonly id: 25403;
            readonly nodeType: "PragmaDirective";
            readonly src: "32:31:96";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", ">=", "0.6", ".2", "<", "0.9", ".0"];
        }, {
            readonly id: 25405;
            readonly nodeType: "ImportDirective";
            readonly src: "65:40:96";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/lib/ds-test/src/test.sol";
            readonly file: "ds-test/test.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 26820;
            readonly sourceUnit: 25327;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 25404;
                    readonly name: "DSTest";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 25326;
                    readonly src: "73:6:96";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 25407;
            readonly nodeType: "ImportDirective";
            readonly src: "106:38:96";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/src/StdMath.sol";
            readonly file: "./StdMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 26820;
            readonly sourceUnit: 31366;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 25406;
                    readonly name: "stdMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 31365;
                    readonly src: "114:7:96";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 26819;
            readonly nodeType: "ContractDefinition";
            readonly src: "146:13524:96";
            readonly nodes: readonly [{
                readonly id: 25414;
                readonly nodeType: "EventDefinition";
                readonly src: "194:31:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "fb102865d50addddf69da9b5aa1bced66c80cf869a5c8d0471a467e18ce9cab1";
                readonly name: "log_array";
                readonly nameLocation: "200:9:96";
                readonly parameters: {
                    readonly id: 25413;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25412;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "220:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25414;
                        readonly src: "210:13:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25410;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "210:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25411;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "210:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "209:15:96";
                };
            }, {
                readonly id: 25419;
                readonly nodeType: "EventDefinition";
                readonly src: "230:30:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "890a82679b470f2bd82816ed9b161f97d8b967f37fa3647c21d5bf39749e2dd5";
                readonly name: "log_array";
                readonly nameLocation: "236:9:96";
                readonly parameters: {
                    readonly id: 25418;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25417;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "255:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25419;
                        readonly src: "246:12:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25415;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "246:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25416;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "246:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "245:14:96";
                };
            }, {
                readonly id: 25424;
                readonly nodeType: "EventDefinition";
                readonly src: "265:31:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "40e1840f5769073d61bd01372d9b75baa9842d5629a0c99ff103be1178a8e9e2";
                readonly name: "log_array";
                readonly nameLocation: "271:9:96";
                readonly parameters: {
                    readonly id: 25423;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25422;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "291:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25424;
                        readonly src: "281:13:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25420;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "281:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25421;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "281:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "280:15:96";
                };
            }, {
                readonly id: 25431;
                readonly nodeType: "EventDefinition";
                readonly src: "301:49:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "00aaa39c9ffb5f567a4534380c737075702e1f7f14107fc95328e3b56c0325fb";
                readonly name: "log_named_array";
                readonly nameLocation: "307:15:96";
                readonly parameters: {
                    readonly id: 25430;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25426;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "330:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25431;
                        readonly src: "323:10:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25425;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "323:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25429;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "345:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25431;
                        readonly src: "335:13:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25427;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "335:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25428;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "335:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "322:27:96";
                };
            }, {
                readonly id: 25438;
                readonly nodeType: "EventDefinition";
                readonly src: "355:48:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "a73eda09662f46dde729be4611385ff34fe6c44fbbc6f7e17b042b59a3445b57";
                readonly name: "log_named_array";
                readonly nameLocation: "361:15:96";
                readonly parameters: {
                    readonly id: 25437;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25433;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "384:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25438;
                        readonly src: "377:10:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25432;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "377:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25436;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "398:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25438;
                        readonly src: "389:12:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25434;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "389:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25435;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "389:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "376:26:96";
                };
            }, {
                readonly id: 25445;
                readonly nodeType: "EventDefinition";
                readonly src: "408:49:96";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "3bcfb2ae2e8d132dd1fce7cf278a9a19756a9fceabe470df3bdabb4bc577d1bd";
                readonly name: "log_named_array";
                readonly nameLocation: "414:15:96";
                readonly parameters: {
                    readonly id: 25444;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25440;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "437:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25445;
                        readonly src: "430:10:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25439;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "430:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25443;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "452:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25445;
                        readonly src: "442:13:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25441;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "442:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25442;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "442:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "429:27:96";
                };
            }, {
                readonly id: 25459;
                readonly nodeType: "FunctionDefinition";
                readonly src: "463:118:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25458;
                    readonly nodeType: "Block";
                    readonly src: "513:68:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly hexValue: "4572726f72";
                                readonly id: 25451;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "string";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "545:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                };
                                readonly value: "Error";
                            }, {
                                readonly id: 25452;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25447;
                                readonly src: "554:3:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 25450;
                                readonly name: "log_named_string";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 23120;
                                readonly src: "528:16:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (string memory,string memory)";
                                };
                            };
                            readonly id: 25453;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "528:30:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25454;
                        readonly nodeType: "EmitStatement";
                        readonly src: "523:35:96";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly id: 25455;
                                readonly name: "fail";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [25459, 23251];
                                readonly referencedDeclaration: 23251;
                                readonly src: "568:4:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                    readonly typeString: "function ()";
                                };
                            };
                            readonly id: 25456;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "568:6:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25457;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "568:6:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "fail";
                readonly nameLocation: "472:4:96";
                readonly parameters: {
                    readonly id: 25448;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25447;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "491:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25459;
                        readonly src: "477:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25446;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "477:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "476:19:96";
                };
                readonly returnParameters: {
                    readonly id: 25449;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "513:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25470;
                readonly nodeType: "FunctionDefinition";
                readonly src: "587:83:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25469;
                    readonly nodeType: "Block";
                    readonly src: "636:34:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 25466;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "657:5:96";
                                readonly subExpression: {
                                    readonly id: 25465;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 25461;
                                    readonly src: "658:4:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 25464;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [23304, 23325];
                                readonly referencedDeclaration: 23304;
                                readonly src: "646:10:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$returns$__$";
                                    readonly typeString: "function (bool)";
                                };
                            };
                            readonly id: 25467;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "646:17:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25468;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "646:17:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "596:11:96";
                readonly parameters: {
                    readonly id: 25462;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25461;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "613:4:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25470;
                        readonly src: "608:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25460;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "608:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "607:11:96";
                };
                readonly returnParameters: {
                    readonly id: 25463;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "636:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25484;
                readonly nodeType: "FunctionDefinition";
                readonly src: "676:107:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25483;
                    readonly nodeType: "Block";
                    readonly src: "744:39:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 25479;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "765:5:96";
                                readonly subExpression: {
                                    readonly id: 25478;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 25472;
                                    readonly src: "766:4:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }, {
                                readonly id: 25480;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25474;
                                readonly src: "772:3:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 25477;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [23304, 23325];
                                readonly referencedDeclaration: 23325;
                                readonly src: "754:10:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bool,string memory)";
                                };
                            };
                            readonly id: 25481;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "754:22:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25482;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "754:22:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "685:11:96";
                readonly parameters: {
                    readonly id: 25475;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25472;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "702:4:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25484;
                        readonly src: "697:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25471;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "697:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25474;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "722:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25484;
                        readonly src: "708:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25473;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "708:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "696:30:96";
                };
                readonly returnParameters: {
                    readonly id: 25476;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "744:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25520;
                readonly nodeType: "FunctionDefinition";
                readonly src: "789:312:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25519;
                    readonly nodeType: "Block";
                    readonly src: "840:261:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 25493;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25491;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25486;
                                readonly src: "854:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 25492;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25488;
                                readonly src: "859:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "854:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25518;
                        readonly nodeType: "IfStatement";
                        readonly src: "850:245:96";
                        readonly trueBody: {
                            readonly id: 25517;
                            readonly nodeType: "Block";
                            readonly src: "862:233:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6c5d";
                                        readonly id: 25495;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "885:36:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [bool]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        }];
                                        readonly id: 25494;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "881:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25496;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "881:41:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25497;
                                readonly nodeType: "EmitStatement";
                                readonly src: "876:46:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25499;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "958:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly condition: {
                                            readonly id: 25500;
                                            readonly name: "a";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 25486;
                                            readonly src: "972:1:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 25502;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "985:7:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 25503;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "972:20:96";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 25501;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "976:6:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25498;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "941:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25504;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "941:52:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25505;
                                readonly nodeType: "EmitStatement";
                                readonly src: "936:57:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25507;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1029:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly condition: {
                                            readonly id: 25508;
                                            readonly name: "b";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 25488;
                                            readonly src: "1043:1:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 25510;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1056:7:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 25511;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "1043:20:96";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 25509;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1047:6:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25506;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "1012:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25512;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1012:52:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25513;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1007:57:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25514;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "1078:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25515;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1078:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25516;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1078:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "798:8:96";
                readonly parameters: {
                    readonly id: 25489;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25486;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "812:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25520;
                        readonly src: "807:6:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25485;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "807:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25488;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "820:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25520;
                        readonly src: "815:6:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25487;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "815:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "806:16:96";
                };
                readonly returnParameters: {
                    readonly id: 25490;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "840:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25545;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1107:186:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25544;
                    readonly nodeType: "Block";
                    readonly src: "1177:116:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 25531;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25529;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25522;
                                readonly src: "1191:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 25530;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25524;
                                readonly src: "1196:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "1191:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25543;
                        readonly nodeType: "IfStatement";
                        readonly src: "1187:100:96";
                        readonly trueBody: {
                            readonly id: 25542;
                            readonly nodeType: "Block";
                            readonly src: "1199:88:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25533;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1235:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25534;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25526;
                                        readonly src: "1244:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25532;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "1218:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25535;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1218:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25536;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1213:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 25538;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25522;
                                        readonly src: "1271:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }, {
                                        readonly id: 25539;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25524;
                                        readonly src: "1274:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }, {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }];
                                        readonly id: 25537;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25520;
                                        readonly src: "1262:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$";
                                            readonly typeString: "function (bool,bool)";
                                        };
                                    };
                                    readonly id: 25540;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1262:14:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25541;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1262:14:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1116:8:96";
                readonly parameters: {
                    readonly id: 25527;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25522;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1130:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25545;
                        readonly src: "1125:6:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25521;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1125:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25524;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1138:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25545;
                        readonly src: "1133:6:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 25523;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1133:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25526;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1155:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25545;
                        readonly src: "1141:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25525;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1141:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1124:35:96";
                };
                readonly returnParameters: {
                    readonly id: 25528;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1177:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25558;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1299:99:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25557;
                    readonly nodeType: "Block";
                    readonly src: "1366:32:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 25553;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25547;
                                readonly src: "1386:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 25554;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25549;
                                readonly src: "1389:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly id: 25552;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [25241, 25268];
                                readonly referencedDeclaration: 25241;
                                readonly src: "1376:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory)";
                                };
                            };
                            readonly id: 25555;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1376:15:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25556;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1376:15:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1308:8:96";
                readonly parameters: {
                    readonly id: 25550;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25547;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1330:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25558;
                        readonly src: "1317:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 25546;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1317:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25549;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1346:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25558;
                        readonly src: "1333:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 25548;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1333:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1316:32:96";
                };
                readonly returnParameters: {
                    readonly id: 25551;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1366:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25574;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1404:123:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25573;
                    readonly nodeType: "Block";
                    readonly src: "1490:37:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 25568;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25560;
                                readonly src: "1510:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 25569;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25562;
                                readonly src: "1513:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 25570;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25564;
                                readonly src: "1516:3:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 25567;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [25241, 25268];
                                readonly referencedDeclaration: 25268;
                                readonly src: "1500:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                };
                            };
                            readonly id: 25571;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1500:20:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25572;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1500:20:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1413:8:96";
                readonly parameters: {
                    readonly id: 25565;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25560;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1435:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25574;
                        readonly src: "1422:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 25559;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1422:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25562;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1451:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25574;
                        readonly src: "1438:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 25561;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1438:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25564;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1468:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25574;
                        readonly src: "1454:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25563;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1454:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1421:51:96";
                };
                readonly returnParameters: {
                    readonly id: 25566;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1490:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25616;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1533:344:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25615;
                    readonly nodeType: "Block";
                    readonly src: "1608:269:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25595;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25586;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25577;
                                        readonly src: "1643:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25584;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1632:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25585;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1636:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1632:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25587;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1632:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25583;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1622:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25588;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1622:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25592;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25580;
                                        readonly src: "1671:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25590;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1660:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25591;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1664:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1660:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25593;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1660:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25589;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1650:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25594;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1650:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1622:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25614;
                        readonly nodeType: "IfStatement";
                        readonly src: "1618:253:96";
                        readonly trueBody: {
                            readonly id: 25613;
                            readonly nodeType: "Block";
                            readonly src: "1676:195:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e745b5d5d";
                                        readonly id: 25597;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1699:38:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [uint[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        }];
                                        readonly id: 25596;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "1695:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25598;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1695:43:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25599;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1690:48:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25601;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1773:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 25602;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25577;
                                        readonly src: "1787:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 25600;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25431;
                                        readonly src: "1757:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 25603;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1757:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25604;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1752:37:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25606;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1824:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 25607;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25580;
                                        readonly src: "1838:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 25605;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25431;
                                        readonly src: "1808:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 25608;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1808:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25609;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1803:37:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25610;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "1854:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25611;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1854:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25612;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1854:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1542:8:96";
                readonly parameters: {
                    readonly id: 25581;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25577;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1568:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25616;
                        readonly src: "1551:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25575;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1551:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25576;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1551:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25580;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1588:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25616;
                        readonly src: "1571:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25578;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1571:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25579;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1571:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1550:40:96";
                };
                readonly returnParameters: {
                    readonly id: 25582;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1608:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25658;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1883:341:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25657;
                    readonly nodeType: "Block";
                    readonly src: "1956:268:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25637;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25628;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25619;
                                        readonly src: "1991:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25626;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1980:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25627;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1984:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1980:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25629;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1980:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25625;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1970:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25630;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1970:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25634;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25622;
                                        readonly src: "2019:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25632;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2008:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25633;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2012:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2008:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25635;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2008:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25631;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1998:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25636;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1998:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1970:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25656;
                        readonly nodeType: "IfStatement";
                        readonly src: "1966:252:96";
                        readonly trueBody: {
                            readonly id: 25655;
                            readonly nodeType: "Block";
                            readonly src: "2024:194:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e745b5d5d";
                                        readonly id: 25639;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2047:37:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [int[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        }];
                                        readonly id: 25638;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "2043:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25640;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2043:42:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25641;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2038:47:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25643;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2120:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 25644;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25619;
                                        readonly src: "2134:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 25642;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25438;
                                        readonly src: "2104:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 25645;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2104:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25646;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2099:37:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25648;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2171:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 25649;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25622;
                                        readonly src: "2185:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 25647;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25438;
                                        readonly src: "2155:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 25650;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2155:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25651;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2150:37:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25652;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "2201:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25653;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2201:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25654;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2201:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1892:8:96";
                readonly parameters: {
                    readonly id: 25623;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25619;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1917:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25658;
                        readonly src: "1901:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25617;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1901:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25618;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1901:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25622;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1936:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25658;
                        readonly src: "1920:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25620;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1920:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25621;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1920:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1900:38:96";
                };
                readonly returnParameters: {
                    readonly id: 25624;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1956:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25700;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2230:347:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25699;
                    readonly nodeType: "Block";
                    readonly src: "2305:272:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25679;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25670;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25661;
                                        readonly src: "2340:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25668;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2329:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25669;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2333:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2329:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25671;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2329:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25667;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2319:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25672;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2319:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25676;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25664;
                                        readonly src: "2368:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25674;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2357:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25675;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2361:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2357:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25677;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2357:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25673;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2347:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25678;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2347:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2319:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25698;
                        readonly nodeType: "IfStatement";
                        readonly src: "2315:256:96";
                        readonly trueBody: {
                            readonly id: 25697;
                            readonly nodeType: "Block";
                            readonly src: "2373:198:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464726573735b5d5d";
                                        readonly id: 25681;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2396:41:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [address[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        }];
                                        readonly id: 25680;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "2392:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25682;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2392:46:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25683;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2387:51:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25685;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2473:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 25686;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25661;
                                        readonly src: "2487:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 25684;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25445;
                                        readonly src: "2457:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 25687;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2457:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25688;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2452:37:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25690;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2524:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 25691;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25664;
                                        readonly src: "2538:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 25689;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25431, 25438, 25445];
                                        readonly referencedDeclaration: 25445;
                                        readonly src: "2508:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 25692;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2508:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25693;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2503:37:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25694;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "2554:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25695;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2554:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25696;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2554:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2239:8:96";
                readonly parameters: {
                    readonly id: 25665;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25661;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2265:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25700;
                        readonly src: "2248:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25659;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2248:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25660;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2248:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25664;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2285:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25700;
                        readonly src: "2268:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25662;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2268:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25663;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2268:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2247:40:96";
                };
                readonly returnParameters: {
                    readonly id: 25666;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2305:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25737;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2583:256:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25736;
                    readonly nodeType: "Block";
                    readonly src: "2677:162:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25723;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25714;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25703;
                                        readonly src: "2712:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25712;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2701:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25713;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2705:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2701:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25715;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2701:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25711;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2691:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25716;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2691:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25720;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25706;
                                        readonly src: "2740:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25718;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2729:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25719;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2733:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2729:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25721;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2729:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25717;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2719:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25722;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2719:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2691:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25735;
                        readonly nodeType: "IfStatement";
                        readonly src: "2687:146:96";
                        readonly trueBody: {
                            readonly id: 25734;
                            readonly nodeType: "Block";
                            readonly src: "2745:88:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25725;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2781:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25726;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25708;
                                        readonly src: "2790:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25724;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "2764:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25727;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2764:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25728;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2759:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 25730;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25703;
                                        readonly src: "2817:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }, {
                                        readonly id: 25731;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25706;
                                        readonly src: "2820:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 25729;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25616;
                                        readonly src: "2808:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (uint256[] memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 25732;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2808:14:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25733;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2808:14:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2592:8:96";
                readonly parameters: {
                    readonly id: 25709;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25703;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2618:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25737;
                        readonly src: "2601:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25701;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2601:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25702;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2601:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25706;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2638:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25737;
                        readonly src: "2621:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25704;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2621:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 25705;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2621:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25708;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2655:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25737;
                        readonly src: "2641:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25707;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2641:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2600:59:96";
                };
                readonly returnParameters: {
                    readonly id: 25710;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2677:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25774;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2845:254:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25773;
                    readonly nodeType: "Block";
                    readonly src: "2937:162:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25760;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25751;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25740;
                                        readonly src: "2972:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25749;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2961:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25750;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2965:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2961:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25752;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2961:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25748;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2951:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25753;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2951:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25757;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25743;
                                        readonly src: "3000:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25755;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2989:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25756;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2993:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2989:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25758;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2989:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25754;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2979:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25759;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2979:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2951:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25772;
                        readonly nodeType: "IfStatement";
                        readonly src: "2947:146:96";
                        readonly trueBody: {
                            readonly id: 25771;
                            readonly nodeType: "Block";
                            readonly src: "3005:88:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25762;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3041:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25763;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25745;
                                        readonly src: "3050:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25761;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "3024:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25764;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3024:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25765;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3019:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 25767;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25740;
                                        readonly src: "3077:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }, {
                                        readonly id: 25768;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25743;
                                        readonly src: "3080:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 25766;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25658;
                                        readonly src: "3068:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (int256[] memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 25769;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3068:14:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25770;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3068:14:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2854:8:96";
                readonly parameters: {
                    readonly id: 25746;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25740;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2879:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25774;
                        readonly src: "2863:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25738;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2863:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25739;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2863:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25743;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2898:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25774;
                        readonly src: "2882:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25741;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2882:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 25742;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2882:8:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25745;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2915:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25774;
                        readonly src: "2901:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25744;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2901:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2862:57:96";
                };
                readonly returnParameters: {
                    readonly id: 25747;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2937:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25811;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3105:256:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25810;
                    readonly nodeType: "Block";
                    readonly src: "3199:162:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 25797;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25788;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25777;
                                        readonly src: "3234:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25786;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3223:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25787;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3227:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3223:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25789;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3223:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25785;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3213:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25790;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3213:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 25794;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25780;
                                        readonly src: "3262:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 25792;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3251:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 25793;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3255:6:96";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3251:10:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 25795;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3251:13:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 25791;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3241:9:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 25796;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3241:24:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "3213:52:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25809;
                        readonly nodeType: "IfStatement";
                        readonly src: "3209:146:96";
                        readonly trueBody: {
                            readonly id: 25808;
                            readonly nodeType: "Block";
                            readonly src: "3267:88:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25799;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3303:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25800;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25782;
                                        readonly src: "3312:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25798;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "3286:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25801;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3286:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25802;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3281:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 25804;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25777;
                                        readonly src: "3339:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }, {
                                        readonly id: 25805;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25780;
                                        readonly src: "3342:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 25803;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25700;
                                        readonly src: "3330:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (address[] memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 25806;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3330:14:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25807;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3330:14:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "3114:8:96";
                readonly parameters: {
                    readonly id: 25783;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25777;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3140:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25811;
                        readonly src: "3123:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25775;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3123:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25776;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3123:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25780;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3160:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25811;
                        readonly src: "3143:18:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 25778;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3143:7:96";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 25779;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3143:9:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25782;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "3177:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25811;
                        readonly src: "3163:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25781;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3163:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3122:59:96";
                };
                readonly returnParameters: {
                    readonly id: 25784;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3199:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25830;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3388:110:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25829;
                    readonly nodeType: "Block";
                    readonly src: "3449:49:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 25821;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 25813;
                                    readonly src: "3476:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 25820;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3468:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 25819;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3468:7:96";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 25822;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3468:10:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 25825;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 25815;
                                    readonly src: "3488:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 25824;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3480:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 25823;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3480:7:96";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 25826;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3480:10:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 25818;
                                readonly name: "assertEq";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                readonly referencedDeclaration: 23549;
                                readonly src: "3459:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256,uint256)";
                                };
                            };
                            readonly id: 25827;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3459:32:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 25828;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3459:32:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqUint";
                readonly nameLocation: "3397:12:96";
                readonly parameters: {
                    readonly id: 25816;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25813;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3418:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25830;
                        readonly src: "3410:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25812;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3410:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25815;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3429:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25830;
                        readonly src: "3421:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25814;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3421:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3409:22:96";
                };
                readonly returnParameters: {
                    readonly id: 25817;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3449:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25880;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3504:470:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25879;
                    readonly nodeType: "Block";
                    readonly src: "3588:386:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [25840];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 25840;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "3606:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 25879;
                            readonly src: "3598:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 25839;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3598:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 25846;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 25843;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25832;
                                readonly src: "3628:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 25844;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25834;
                                readonly src: "3631:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 25841;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "3614:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 25842;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3622:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31276;
                                readonly src: "3614:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 25845;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3614:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "3598:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 25849;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25847;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25840;
                                readonly src: "3648:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 25848;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25836;
                                readonly src: "3656:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "3648:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25878;
                        readonly nodeType: "IfStatement";
                        readonly src: "3644:324:96";
                        readonly trueBody: {
                            readonly id: 25877;
                            readonly nodeType: "Block";
                            readonly src: "3666:302:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 25851;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3689:36:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 25850;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "3685:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25852;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3685:41:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25853;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3680:46:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25855;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3760:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 25856;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25832;
                                        readonly src: "3774:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25854;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "3745:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 25857;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3745:31:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25858;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3740:36:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25860;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3810:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 25861;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25834;
                                        readonly src: "3824:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25859;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "3795:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 25862;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3795:31:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25863;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3790:36:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 25865;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3860:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 25866;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25836;
                                        readonly src: "3874:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25864;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "3845:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 25867;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3845:38:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25868;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3840:43:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 25870;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3917:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 25871;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25840;
                                        readonly src: "3931:5:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25869;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "3902:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 25872;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3902:35:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25873;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3897:40:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25874;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "3951:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25875;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3951:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25876;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3951:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3513:17:96";
                readonly parameters: {
                    readonly id: 25837;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25832;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3539:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25880;
                        readonly src: "3531:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25831;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3531:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25834;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3550:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25880;
                        readonly src: "3542:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25833;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3542:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25836;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "3561:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25880;
                        readonly src: "3553:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25835;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3553:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3530:40:96";
                };
                readonly returnParameters: {
                    readonly id: 25838;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3588:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25916;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3980:294:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25915;
                    readonly nodeType: "Block";
                    readonly src: "4083:191:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [25892];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 25892;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4101:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 25915;
                            readonly src: "4093:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 25891;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4093:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 25898;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 25895;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25882;
                                readonly src: "4123:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 25896;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25884;
                                readonly src: "4126:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 25893;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "4109:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 25894;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4117:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31276;
                                readonly src: "4109:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 25897;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4109:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4093:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 25901;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25899;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25892;
                                readonly src: "4143:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 25900;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25886;
                                readonly src: "4151:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4143:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25914;
                        readonly nodeType: "IfStatement";
                        readonly src: "4139:129:96";
                        readonly trueBody: {
                            readonly id: 25913;
                            readonly nodeType: "Block";
                            readonly src: "4161:107:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25903;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4197:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25904;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25888;
                                        readonly src: "4206:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25902;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "4180:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25905;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4180:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25906;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4175:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 25908;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25882;
                                        readonly src: "4242:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25909;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25884;
                                        readonly src: "4245:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25910;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25886;
                                        readonly src: "4248:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25907;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25880, 25916, 26061, 26097];
                                        readonly referencedDeclaration: 25880;
                                        readonly src: "4224:17:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 25911;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4224:33:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25912;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4224:33:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3989:17:96";
                readonly parameters: {
                    readonly id: 25889;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25882;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4015:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25916;
                        readonly src: "4007:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25881;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4007:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25884;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4026:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25916;
                        readonly src: "4018:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25883;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4018:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25886;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4037:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25916;
                        readonly src: "4029:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25885;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4029:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25888;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4061:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25916;
                        readonly src: "4047:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25887;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4047:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4006:59:96";
                };
                readonly returnParameters: {
                    readonly id: 25890;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4083:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 25972;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4280:567:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 25971;
                    readonly nodeType: "Block";
                    readonly src: "4389:458:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [25928];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 25928;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4407:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 25971;
                            readonly src: "4399:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 25927;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4399:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 25934;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 25931;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25918;
                                readonly src: "4429:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 25932;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25920;
                                readonly src: "4432:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 25929;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "4415:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 25930;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4423:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31276;
                                readonly src: "4415:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 25933;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4415:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4399:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 25937;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25935;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25928;
                                readonly src: "4449:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 25936;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25922;
                                readonly src: "4457:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4449:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 25970;
                        readonly nodeType: "IfStatement";
                        readonly src: "4445:396:96";
                        readonly trueBody: {
                            readonly id: 25969;
                            readonly nodeType: "Block";
                            readonly src: "4467:374:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 25939;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4490:36:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 25938;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "4486:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 25940;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4486:41:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25941;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4481:46:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 25943;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4569:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 25944;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25918;
                                        readonly src: "4583:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25945;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25924;
                                        readonly src: "4586:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25942;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "4546:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 25946;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4546:49:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25947;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4541:54:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 25949;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4637:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 25950;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25920;
                                        readonly src: "4651:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25951;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25924;
                                        readonly src: "4654:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25948;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "4614:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 25952;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4614:49:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25953;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4609:54:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 25955;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4705:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 25956;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25922;
                                        readonly src: "4719:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25957;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25924;
                                        readonly src: "4729:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25954;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "4682:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 25958;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4682:56:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25959;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4677:61:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 25961;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4780:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 25962;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25928;
                                        readonly src: "4794:5:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 25963;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25924;
                                        readonly src: "4801:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 25960;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "4757:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 25964;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4757:53:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25965;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4752:58:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 25966;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "4824:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 25967;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4824:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 25968;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4824:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4289:24:96";
                readonly parameters: {
                    readonly id: 25925;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25918;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4322:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25972;
                        readonly src: "4314:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25917;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4314:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25920;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4333:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25972;
                        readonly src: "4325:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25919;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4325:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25922;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4344:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25972;
                        readonly src: "4336:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25921;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4336:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25924;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4362:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 25972;
                        readonly src: "4354:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25923;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4354:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4313:58:96";
                };
                readonly returnParameters: {
                    readonly id: 25926;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4389:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26011;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4853:356:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26010;
                    readonly nodeType: "Block";
                    readonly src: "5001:208:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [25986];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 25986;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5019:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26010;
                            readonly src: "5011:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 25985;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5011:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 25992;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 25989;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25974;
                                readonly src: "5041:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 25990;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25976;
                                readonly src: "5044:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 25987;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "5027:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 25988;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5035:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31276;
                                readonly src: "5027:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 25991;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5027:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5011:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 25995;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 25993;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25986;
                                readonly src: "5061:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 25994;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 25978;
                                readonly src: "5069:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5061:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26009;
                        readonly nodeType: "IfStatement";
                        readonly src: "5057:146:96";
                        readonly trueBody: {
                            readonly id: 26008;
                            readonly nodeType: "Block";
                            readonly src: "5079:124:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 25997;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5115:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 25998;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25982;
                                        readonly src: "5124:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 25996;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "5098:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 25999;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5098:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26000;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5093:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26002;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25974;
                                        readonly src: "5167:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26003;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25976;
                                        readonly src: "5170:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26004;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25978;
                                        readonly src: "5173:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26005;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 25980;
                                        readonly src: "5183:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26001;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25972, 26011, 26153, 26192];
                                        readonly referencedDeclaration: 25972;
                                        readonly src: "5142:24:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26006;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5142:50:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26007;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5142:50:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4862:24:96";
                readonly parameters: {
                    readonly id: 25983;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 25974;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4895:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26011;
                        readonly src: "4887:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25973;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4887:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25976;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4906:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26011;
                        readonly src: "4898:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25975;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4898:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25978;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4917:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26011;
                        readonly src: "4909:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25977;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4909:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25980;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4935:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26011;
                        readonly src: "4927:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 25979;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4927:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 25982;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4959:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26011;
                        readonly src: "4945:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 25981;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4945:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4886:77:96";
                };
                readonly returnParameters: {
                    readonly id: 25984;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5001:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26061;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5215:467:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26060;
                    readonly nodeType: "Block";
                    readonly src: "5297:385:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [26021];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26021;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5315:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26060;
                            readonly src: "5307:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26020;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5307:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26027;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26024;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26013;
                                readonly src: "5337:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26025;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26015;
                                readonly src: "5340:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26022;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "5323:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26023;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5331:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31312;
                                readonly src: "5323:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26026;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5323:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5307:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26030;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26028;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26021;
                                readonly src: "5357:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26029;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26017;
                                readonly src: "5365:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5357:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26059;
                        readonly nodeType: "IfStatement";
                        readonly src: "5353:323:96";
                        readonly trueBody: {
                            readonly id: 26058;
                            readonly nodeType: "Block";
                            readonly src: "5375:301:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 26032;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5398:35:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 26031;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "5394:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26033;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5394:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26034;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5389:45:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020204c656674";
                                        readonly id: 26036;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5467:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        };
                                        readonly value: "       Left";
                                    }, {
                                        readonly id: 26037;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26013;
                                        readonly src: "5482:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 26035;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23102;
                                        readonly src: "5453:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 26038;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5453:31:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26039;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5448:36:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020205269676874";
                                        readonly id: 26041;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5517:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        };
                                        readonly value: "      Right";
                                    }, {
                                        readonly id: 26042;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26015;
                                        readonly src: "5532:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 26040;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23102;
                                        readonly src: "5503:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 26043;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5503:31:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26044;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5498:36:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 26046;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5568:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 26047;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26017;
                                        readonly src: "5582:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26045;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "5553:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 26048;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5553:38:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26049;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5548:43:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 26051;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5625:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 26052;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26021;
                                        readonly src: "5639:5:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26050;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "5610:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 26053;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5610:35:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26054;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5605:40:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26055;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "5659:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26056;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5659:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26057;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5659:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5224:17:96";
                readonly parameters: {
                    readonly id: 26018;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26013;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5249:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26061;
                        readonly src: "5242:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26012;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5242:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26015;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5259:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26061;
                        readonly src: "5252:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26014;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5252:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26017;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5270:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26061;
                        readonly src: "5262:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26016;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5262:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5241:38:96";
                };
                readonly returnParameters: {
                    readonly id: 26019;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5297:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26097;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5688:292:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26096;
                    readonly nodeType: "Block";
                    readonly src: "5789:191:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [26073];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26073;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5807:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26096;
                            readonly src: "5799:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26072;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5799:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26079;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26076;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26063;
                                readonly src: "5829:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26077;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26065;
                                readonly src: "5832:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26074;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "5815:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26075;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5823:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31312;
                                readonly src: "5815:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26078;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5815:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5799:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26082;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26080;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26073;
                                readonly src: "5849:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26081;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26067;
                                readonly src: "5857:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5849:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26095;
                        readonly nodeType: "IfStatement";
                        readonly src: "5845:129:96";
                        readonly trueBody: {
                            readonly id: 26094;
                            readonly nodeType: "Block";
                            readonly src: "5867:107:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26084;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5903:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26085;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26069;
                                        readonly src: "5912:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26083;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "5886:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26086;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5886:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26087;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5881:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26089;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26063;
                                        readonly src: "5948:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26090;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26065;
                                        readonly src: "5951:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26091;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26067;
                                        readonly src: "5954:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26088;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25880, 25916, 26061, 26097];
                                        readonly referencedDeclaration: 26061;
                                        readonly src: "5930:17:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26092;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5930:33:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26093;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5930:33:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5697:17:96";
                readonly parameters: {
                    readonly id: 26070;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26063;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5722:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26097;
                        readonly src: "5715:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26062;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5715:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26065;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5732:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26097;
                        readonly src: "5725:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26064;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5725:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26067;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5743:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26097;
                        readonly src: "5735:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26066;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5735:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26069;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "5767:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26097;
                        readonly src: "5753:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26068;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5753:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5714:57:96";
                };
                readonly returnParameters: {
                    readonly id: 26071;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5789:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26153;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5986:562:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26152;
                    readonly nodeType: "Block";
                    readonly src: "6093:455:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [26109];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26109;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6111:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26152;
                            readonly src: "6103:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26108;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6103:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26115;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26112;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26099;
                                readonly src: "6133:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26113;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26101;
                                readonly src: "6136:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26110;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "6119:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26111;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6127:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31312;
                                readonly src: "6119:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26114;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6119:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6103:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26118;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26116;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26109;
                                readonly src: "6153:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26117;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26103;
                                readonly src: "6161:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6153:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26151;
                        readonly nodeType: "IfStatement";
                        readonly src: "6149:393:96";
                        readonly trueBody: {
                            readonly id: 26150;
                            readonly nodeType: "Block";
                            readonly src: "6171:371:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 26120;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6194:35:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 26119;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "6190:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26121;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6190:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26122;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6185:45:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 26124;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6271:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 26125;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26099;
                                        readonly src: "6285:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26126;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26105;
                                        readonly src: "6288:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26123;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23088;
                                        readonly src: "6249:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26127;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6249:48:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26128;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6244:53:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 26130;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6338:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 26131;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26101;
                                        readonly src: "6352:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26132;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26105;
                                        readonly src: "6355:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26129;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23088;
                                        readonly src: "6316:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26133;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6316:48:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26134;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6311:53:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 26136;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6406:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 26137;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26103;
                                        readonly src: "6420:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26138;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26105;
                                        readonly src: "6430:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26135;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "6383:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26139;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6383:56:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26140;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6378:61:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 26142;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6481:12:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 26143;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26109;
                                        readonly src: "6495:5:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26144;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26105;
                                        readonly src: "6502:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26141;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "6458:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26145;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6458:53:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26146;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6453:58:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26147;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "6525:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26148;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6525:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26149;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6525:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "5995:24:96";
                readonly parameters: {
                    readonly id: 26106;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26099;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6027:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26153;
                        readonly src: "6020:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26098;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6020:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26101;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6037:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26153;
                        readonly src: "6030:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26100;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6030:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26103;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6048:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26153;
                        readonly src: "6040:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26102;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6040:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26105;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6066:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26153;
                        readonly src: "6058:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26104;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6058:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6019:56:96";
                };
                readonly returnParameters: {
                    readonly id: 26107;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6093:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26192;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6554:354:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26191;
                    readonly nodeType: "Block";
                    readonly src: "6700:208:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [26167];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26167;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6718:5:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26191;
                            readonly src: "6710:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26166;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6710:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26173;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26170;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26155;
                                readonly src: "6740:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26171;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26157;
                                readonly src: "6743:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26168;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "6726:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26169;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6734:5:96";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31312;
                                readonly src: "6726:13:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26172;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6726:19:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6710:35:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26176;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26174;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26167;
                                readonly src: "6760:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26175;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26159;
                                readonly src: "6768:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6760:16:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26190;
                        readonly nodeType: "IfStatement";
                        readonly src: "6756:146:96";
                        readonly trueBody: {
                            readonly id: 26189;
                            readonly nodeType: "Block";
                            readonly src: "6778:124:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26178;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6814:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26179;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26163;
                                        readonly src: "6823:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26177;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "6797:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26180;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6797:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26181;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6792:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26183;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26155;
                                        readonly src: "6866:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26184;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26157;
                                        readonly src: "6869:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26185;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26159;
                                        readonly src: "6872:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26186;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26161;
                                        readonly src: "6882:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26182;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25972, 26011, 26153, 26192];
                                        readonly referencedDeclaration: 26153;
                                        readonly src: "6841:24:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26187;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6841:50:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26188;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6841:50:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "6563:24:96";
                readonly parameters: {
                    readonly id: 26164;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26155;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6595:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26192;
                        readonly src: "6588:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26154;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6588:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26157;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6605:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26192;
                        readonly src: "6598:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26156;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6598:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26159;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6616:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26192;
                        readonly src: "6608:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26158;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6608:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26161;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6634:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26192;
                        readonly src: "6626:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26160;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6626:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26163;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "6658:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26192;
                        readonly src: "6644:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26162;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6644:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6587:75:96";
                };
                readonly returnParameters: {
                    readonly id: 26165;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6700:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26257;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6914:733:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26256;
                    readonly nodeType: "Block";
                    readonly src: "7091:556:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26203;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26201;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26196;
                                readonly src: "7105:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26202;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7110:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7105:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26209;
                        readonly nodeType: "IfStatement";
                        readonly src: "7101:33:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26205;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26194;
                                    readonly src: "7129:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26206;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26196;
                                    readonly src: "7132:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 26204;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23549;
                                    readonly src: "7120:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 26207;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7120:14:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26200;
                            readonly id: 26208;
                            readonly nodeType: "Return";
                            readonly src: "7113:21:96";
                        };
                    }, {
                        readonly assignments: readonly [26211];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26211;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7193:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26256;
                            readonly src: "7185:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26210;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7185:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26217;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26214;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26194;
                                readonly src: "7229:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 26215;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26196;
                                readonly src: "7232:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 26212;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "7208:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26213;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7216:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31335;
                                readonly src: "7208:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26216;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7208:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7185:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26220;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26218;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26211;
                                readonly src: "7249:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26219;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26198;
                                readonly src: "7264:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7249:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26255;
                        readonly nodeType: "IfStatement";
                        readonly src: "7245:396:96";
                        readonly trueBody: {
                            readonly id: 26254;
                            readonly nodeType: "Block";
                            readonly src: "7281:360:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 26222;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7304:36:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 26221;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "7300:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26223;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7300:41:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26224;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7295:46:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 26226;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7375:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 26227;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26194;
                                        readonly src: "7391:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26225;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "7360:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 26228;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7360:33:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26229;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7355:38:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 26231;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7427:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 26232;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26196;
                                        readonly src: "7443:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26230;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23108;
                                        readonly src: "7412:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 26233;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7412:33:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26234;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7407:38:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 26236;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7487:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26239;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26237;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26198;
                                            readonly src: "7503:15:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26238;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7521:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7503:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26240;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7526:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26235;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "7464:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26241;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7464:65:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26242;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7459:70:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 26244;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7571:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26247;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26245;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26211;
                                            readonly src: "7587:12:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26246;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7602:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7587:18:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26248;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7607:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26243;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "7548:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26249;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7548:62:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26250;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7543:67:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26251;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "7624:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26252;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7624:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26253;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "7624:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "6923:17:96";
                readonly parameters: {
                    readonly id: 26199;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26194;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6958:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26257;
                        readonly src: "6950:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26193;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6950:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26196;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6977:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26257;
                        readonly src: "6969:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26195;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6969:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26198;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "6996:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26257;
                        readonly src: "6988:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26197;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6988:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6940:133:96";
                };
                readonly returnParameters: {
                    readonly id: 26200;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7091:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26303;
                readonly nodeType: "FunctionDefinition";
                readonly src: "7653:519:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26302;
                    readonly nodeType: "Block";
                    readonly src: "7857:315:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26270;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26268;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26261;
                                readonly src: "7871:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26269;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7876:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7871:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26277;
                        readonly nodeType: "IfStatement";
                        readonly src: "7867:38:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26272;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26259;
                                    readonly src: "7895:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26273;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26261;
                                    readonly src: "7898:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26274;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26265;
                                    readonly src: "7901:3:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 26271;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23574;
                                    readonly src: "7886:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 26275;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7886:19:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26267;
                            readonly id: 26276;
                            readonly nodeType: "Return";
                            readonly src: "7879:26:96";
                        };
                    }, {
                        readonly assignments: readonly [26279];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26279;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7964:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26302;
                            readonly src: "7956:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26278;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7956:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26285;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26282;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26259;
                                readonly src: "8000:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 26283;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26261;
                                readonly src: "8003:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 26280;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "7979:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26281;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7987:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31335;
                                readonly src: "7979:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26284;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7979:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7956:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26288;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26286;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26279;
                                readonly src: "8020:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26287;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26263;
                                readonly src: "8035:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8020:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26301;
                        readonly nodeType: "IfStatement";
                        readonly src: "8016:150:96";
                        readonly trueBody: {
                            readonly id: 26300;
                            readonly nodeType: "Block";
                            readonly src: "8052:114:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26290;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8088:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26291;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26265;
                                        readonly src: "8097:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26289;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "8071:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26292;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8071:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26293;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8066:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26295;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26259;
                                        readonly src: "8133:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26296;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26261;
                                        readonly src: "8136:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26297;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26263;
                                        readonly src: "8139:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26294;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [26257, 26303, 26486, 26532];
                                        readonly referencedDeclaration: 26257;
                                        readonly src: "8115:17:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26298;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8115:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26299;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8115:40:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "7662:17:96";
                readonly parameters: {
                    readonly id: 26266;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26259;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "7697:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26303;
                        readonly src: "7689:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26258;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7689:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26261;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "7716:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26303;
                        readonly src: "7708:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26260;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7708:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26263;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "7735:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26303;
                        readonly src: "7727:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26262;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7727:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26265;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "7830:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26303;
                        readonly src: "7816:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26264;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7816:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "7679:160:96";
                };
                readonly returnParameters: {
                    readonly id: 26267;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7857:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26372;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8178:802:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26371;
                    readonly nodeType: "Block";
                    readonly src: "8388:592:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26316;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26314;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26307;
                                readonly src: "8402:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26315;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "8407:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "8402:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26322;
                        readonly nodeType: "IfStatement";
                        readonly src: "8398:33:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26318;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26305;
                                    readonly src: "8426:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26319;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26307;
                                    readonly src: "8429:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 26317;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23549;
                                    readonly src: "8417:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 26320;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "8417:14:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26313;
                            readonly id: 26321;
                            readonly nodeType: "Return";
                            readonly src: "8410:21:96";
                        };
                    }, {
                        readonly assignments: readonly [26324];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26324;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "8490:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26371;
                            readonly src: "8482:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26323;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "8482:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26330;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26327;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26305;
                                readonly src: "8526:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 26328;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26307;
                                readonly src: "8529:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 26325;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "8505:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26326;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8513:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31335;
                                readonly src: "8505:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26329;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "8505:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "8482:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26333;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26331;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26324;
                                readonly src: "8546:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26332;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26309;
                                readonly src: "8561:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8546:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26370;
                        readonly nodeType: "IfStatement";
                        readonly src: "8542:432:96";
                        readonly trueBody: {
                            readonly id: 26369;
                            readonly nodeType: "Block";
                            readonly src: "8578:396:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 26335;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8601:36:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 26334;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "8597:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26336;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8597:41:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26337;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8592:46:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 26339;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8680:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 26340;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26305;
                                        readonly src: "8696:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26341;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26311;
                                        readonly src: "8699:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26338;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "8657:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26342;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8657:51:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26343;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8652:56:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 26345;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8750:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 26346;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26307;
                                        readonly src: "8766:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26347;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26311;
                                        readonly src: "8769:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26344;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "8727:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26348;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8727:51:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26349;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8722:56:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 26351;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8820:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26354;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26352;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26309;
                                            readonly src: "8836:15:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26353;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8854:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8836:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26355;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8859:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26350;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "8797:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26356;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8797:65:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26357;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8792:70:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 26359;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8904:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26362;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26360;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26324;
                                            readonly src: "8920:12:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26361;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8935:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8920:18:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26363;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8940:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26358;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "8881:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26364;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8881:62:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26365;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8876:67:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26366;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "8957:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26367;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8957:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26368;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8957:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8187:24:96";
                readonly parameters: {
                    readonly id: 26312;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26305;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "8229:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26372;
                        readonly src: "8221:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26304;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8221:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26307;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "8248:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26372;
                        readonly src: "8240:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26306;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8240:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26309;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "8267:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26372;
                        readonly src: "8259:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26308;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8259:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26311;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "8356:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26372;
                        readonly src: "8348:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26310;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8348:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "8211:159:96";
                };
                readonly returnParameters: {
                    readonly id: 26313;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "8388:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26421;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8986:569:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26420;
                    readonly nodeType: "Block";
                    readonly src: "9223:332:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26387;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26385;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26376;
                                readonly src: "9237:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26386;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9242:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9237:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26394;
                        readonly nodeType: "IfStatement";
                        readonly src: "9233:38:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26389;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26374;
                                    readonly src: "9261:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26390;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26376;
                                    readonly src: "9264:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 26391;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26382;
                                    readonly src: "9267:3:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 26388;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23574;
                                    readonly src: "9252:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 26392;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9252:19:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26384;
                            readonly id: 26393;
                            readonly nodeType: "Return";
                            readonly src: "9245:26:96";
                        };
                    }, {
                        readonly assignments: readonly [26396];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26396;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9330:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26420;
                            readonly src: "9322:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26395;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9322:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26402;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26399;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26374;
                                readonly src: "9366:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 26400;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26376;
                                readonly src: "9369:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 26397;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "9345:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26398;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9353:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31335;
                                readonly src: "9345:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26401;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9345:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9322:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26405;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26403;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26396;
                                readonly src: "9386:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26404;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26378;
                                readonly src: "9401:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9386:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26419;
                        readonly nodeType: "IfStatement";
                        readonly src: "9382:167:96";
                        readonly trueBody: {
                            readonly id: 26418;
                            readonly nodeType: "Block";
                            readonly src: "9418:131:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26407;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9454:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26408;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26382;
                                        readonly src: "9463:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26406;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "9437:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26409;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9437:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26410;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9432:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26412;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26374;
                                        readonly src: "9506:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26413;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26376;
                                        readonly src: "9509:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26414;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26378;
                                        readonly src: "9512:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26415;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26380;
                                        readonly src: "9529:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26411;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [26372, 26421, 26601, 26650];
                                        readonly referencedDeclaration: 26372;
                                        readonly src: "9481:24:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26416;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9481:57:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26417;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "9481:57:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8995:24:96";
                readonly parameters: {
                    readonly id: 26383;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26374;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9037:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26421;
                        readonly src: "9029:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26373;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9029:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26376;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9056:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26421;
                        readonly src: "9048:9:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26375;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9048:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26378;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9075:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26421;
                        readonly src: "9067:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26377;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9067:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26380;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "9164:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26421;
                        readonly src: "9156:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26379;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9156:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26382;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "9196:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26421;
                        readonly src: "9182:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26381;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9182:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9019:186:96";
                };
                readonly returnParameters: {
                    readonly id: 26384;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9223:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26486;
                readonly nodeType: "FunctionDefinition";
                readonly src: "9561:642:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26485;
                    readonly nodeType: "Block";
                    readonly src: "9650:553:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 26432;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26430;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26425;
                                readonly src: "9664:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26431;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9669:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9664:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26438;
                        readonly nodeType: "IfStatement";
                        readonly src: "9660:33:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26434;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26423;
                                    readonly src: "9688:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26435;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26425;
                                    readonly src: "9691:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 26433;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23494;
                                    readonly src: "9679:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 26436;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9679:14:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26429;
                            readonly id: 26437;
                            readonly nodeType: "Return";
                            readonly src: "9672:21:96";
                        };
                    }, {
                        readonly assignments: readonly [26440];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26440;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9752:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26485;
                            readonly src: "9744:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26439;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9744:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26446;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26443;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26423;
                                readonly src: "9788:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26444;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26425;
                                readonly src: "9791:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26441;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "9767:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26442;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9775:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31364;
                                readonly src: "9767:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26445;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9767:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9744:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26449;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26447;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26440;
                                readonly src: "9808:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26448;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26427;
                                readonly src: "9823:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9808:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26484;
                        readonly nodeType: "IfStatement";
                        readonly src: "9804:393:96";
                        readonly trueBody: {
                            readonly id: 26483;
                            readonly nodeType: "Block";
                            readonly src: "9840:357:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 26451;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9863:35:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 26450;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "9859:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26452;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9859:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26453;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9854:45:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 26455;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9932:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 26456;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26423;
                                        readonly src: "9948:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 26454;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23102;
                                        readonly src: "9918:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 26457;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9918:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26458;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9913:37:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 26460;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9983:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 26461;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26425;
                                        readonly src: "9999:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 26459;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23102;
                                        readonly src: "9969:13:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 26462;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9969:32:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26463;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9964:37:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 26465;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10043:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26468;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26466;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26427;
                                            readonly src: "10059:15:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26467;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10077:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10059:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26469;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10082:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26464;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "10020:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26470;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10020:65:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26471;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10015:70:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 26473;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10127:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26476;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26474;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26440;
                                            readonly src: "10143:12:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26475;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10158:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10143:18:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26477;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10163:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26472;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "10104:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26478;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10104:62:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26479;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10099:67:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26480;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "10180:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26481;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10180:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26482;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10180:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "9570:17:96";
                readonly parameters: {
                    readonly id: 26428;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26423;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9595:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26486;
                        readonly src: "9588:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26422;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9588:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26425;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9605:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26486;
                        readonly src: "9598:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26424;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9598:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26427;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9616:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26486;
                        readonly src: "9608:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26426;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9608:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9587:45:96";
                };
                readonly returnParameters: {
                    readonly id: 26429;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9650:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26532;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10209:423:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26531;
                    readonly nodeType: "Block";
                    readonly src: "10317:315:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 26499;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26497;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26490;
                                readonly src: "10331:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26498;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10336:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10331:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26506;
                        readonly nodeType: "IfStatement";
                        readonly src: "10327:38:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26501;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26488;
                                    readonly src: "10355:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26502;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26490;
                                    readonly src: "10358:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26503;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26494;
                                    readonly src: "10361:3:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 26500;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23519;
                                    readonly src: "10346:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 26504;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10346:19:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26496;
                            readonly id: 26505;
                            readonly nodeType: "Return";
                            readonly src: "10339:26:96";
                        };
                    }, {
                        readonly assignments: readonly [26508];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26508;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10424:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26531;
                            readonly src: "10416:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26507;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10416:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26514;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26511;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26488;
                                readonly src: "10460:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26512;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26490;
                                readonly src: "10463:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26509;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "10439:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26510;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10447:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31364;
                                readonly src: "10439:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26513;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10439:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10416:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26517;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26515;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26508;
                                readonly src: "10480:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26516;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26492;
                                readonly src: "10495:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10480:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26530;
                        readonly nodeType: "IfStatement";
                        readonly src: "10476:150:96";
                        readonly trueBody: {
                            readonly id: 26529;
                            readonly nodeType: "Block";
                            readonly src: "10512:114:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26519;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10548:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26520;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26494;
                                        readonly src: "10557:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26518;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "10531:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26521;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10531:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26522;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10526:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26524;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26488;
                                        readonly src: "10593:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26525;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26490;
                                        readonly src: "10596:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26526;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26492;
                                        readonly src: "10599:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26523;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [26257, 26303, 26486, 26532];
                                        readonly referencedDeclaration: 26486;
                                        readonly src: "10575:17:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26527;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10575:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26528;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10575:40:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "10218:17:96";
                readonly parameters: {
                    readonly id: 26495;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26488;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10243:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26532;
                        readonly src: "10236:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26487;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10236:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26490;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10253:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26532;
                        readonly src: "10246:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26489;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10246:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26492;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10264:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26532;
                        readonly src: "10256:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26491;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10256:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26494;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "10295:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26532;
                        readonly src: "10281:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26493;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10281:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10235:64:96";
                };
                readonly returnParameters: {
                    readonly id: 26496;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10317:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26601;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10638:703:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26600;
                    readonly nodeType: "Block";
                    readonly src: "10752:589:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 26545;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26543;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26536;
                                readonly src: "10766:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26544;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10771:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10766:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26551;
                        readonly nodeType: "IfStatement";
                        readonly src: "10762:33:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26547;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26534;
                                    readonly src: "10790:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26548;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26536;
                                    readonly src: "10793:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 26546;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23494;
                                    readonly src: "10781:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 26549;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10781:14:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26542;
                            readonly id: 26550;
                            readonly nodeType: "Return";
                            readonly src: "10774:21:96";
                        };
                    }, {
                        readonly assignments: readonly [26553];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26553;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10854:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26600;
                            readonly src: "10846:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26552;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10846:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26559;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26556;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26534;
                                readonly src: "10890:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26557;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26536;
                                readonly src: "10893:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26554;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "10869:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26555;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10877:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31364;
                                readonly src: "10869:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26558;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10869:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10846:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26562;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26560;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26553;
                                readonly src: "10910:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26561;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26538;
                                readonly src: "10925:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10910:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26599;
                        readonly nodeType: "IfStatement";
                        readonly src: "10906:429:96";
                        readonly trueBody: {
                            readonly id: 26598;
                            readonly nodeType: "Block";
                            readonly src: "10942:393:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 26564;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10965:35:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 26563;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "10961:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26565;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10961:40:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26566;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10956:45:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 26568;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11042:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 26569;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26534;
                                        readonly src: "11058:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26570;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26540;
                                        readonly src: "11061:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26567;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23088;
                                        readonly src: "11020:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26571;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11020:50:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26572;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11015:55:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 26574;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11111:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 26575;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26536;
                                        readonly src: "11127:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26576;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26540;
                                        readonly src: "11130:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26573;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23088;
                                        readonly src: "11089:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 26577;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11089:50:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26578;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11084:55:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 26580;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11181:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26583;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26581;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26538;
                                            readonly src: "11197:15:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26582;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11215:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11197:21:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26584;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11220:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26579;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "11158:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26585;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11158:65:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26586;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11153:70:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 26588;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11265:14:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 26591;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 26589;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 26553;
                                            readonly src: "11281:12:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 26590;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11296:3:96";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11281:18:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 26592;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11301:2:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 26587;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23096;
                                        readonly src: "11242:22:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26593;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11242:62:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26594;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11237:67:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26595;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "11318:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26596;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11318:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26597;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11318:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "10647:24:96";
                readonly parameters: {
                    readonly id: 26541;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26534;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10679:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26601;
                        readonly src: "10672:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26533;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10672:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26536;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10689:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26601;
                        readonly src: "10682:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26535;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10682:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26538;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10700:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26601;
                        readonly src: "10692:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26537;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10692:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26540;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "10725:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26601;
                        readonly src: "10717:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26539;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10717:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10671:63:96";
                };
                readonly returnParameters: {
                    readonly id: 26542;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10752:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26650;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11347:485:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26649;
                    readonly nodeType: "Block";
                    readonly src: "11500:332:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 26616;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26614;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26605;
                                readonly src: "11514:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 26615;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "11519:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "11514:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26623;
                        readonly nodeType: "IfStatement";
                        readonly src: "11510:38:96";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 26618;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26603;
                                    readonly src: "11538:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26619;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26605;
                                    readonly src: "11541:1:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 26620;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26611;
                                    readonly src: "11544:3:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 26617;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                    readonly referencedDeclaration: 23519;
                                    readonly src: "11529:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 26621;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "11529:19:96";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 26613;
                            readonly id: 26622;
                            readonly nodeType: "Return";
                            readonly src: "11522:26:96";
                        };
                    }, {
                        readonly assignments: readonly [26625];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26625;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "11607:12:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26649;
                            readonly src: "11599:20:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 26624;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "11599:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26631;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26628;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26603;
                                readonly src: "11643:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 26629;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26605;
                                readonly src: "11646:1:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 26626;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31365;
                                    readonly src: "11622:7:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$31365_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 26627;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11630:12:96";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 31364;
                                readonly src: "11622:20:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 26630;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11622:26:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "11599:49:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 26634;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26632;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26625;
                                readonly src: "11663:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 26633;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26607;
                                readonly src: "11678:15:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "11663:30:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26648;
                        readonly nodeType: "IfStatement";
                        readonly src: "11659:167:96";
                        readonly trueBody: {
                            readonly id: 26647;
                            readonly nodeType: "Block";
                            readonly src: "11695:131:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 26636;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11731:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 26637;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26611;
                                        readonly src: "11740:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 26635;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23120;
                                        readonly src: "11714:16:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 26638;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11714:30:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26639;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11709:35:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26641;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26603;
                                        readonly src: "11783:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26642;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26605;
                                        readonly src: "11786:1:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 26643;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26607;
                                        readonly src: "11789:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 26644;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26609;
                                        readonly src: "11806:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 26640;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [26372, 26421, 26601, 26650];
                                        readonly referencedDeclaration: 26601;
                                        readonly src: "11758:24:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 26645;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11758:57:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26646;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11758:57:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "11356:24:96";
                readonly parameters: {
                    readonly id: 26612;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26603;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "11388:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26650;
                        readonly src: "11381:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26602;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11381:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26605;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "11398:1:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26650;
                        readonly src: "11391:8:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 26604;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11391:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26607;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "11409:15:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26650;
                        readonly src: "11401:23:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26606;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11401:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26609;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "11434:8:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26650;
                        readonly src: "11426:16:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 26608;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11426:7:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26611;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "11458:3:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26650;
                        readonly src: "11444:17:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 26610;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11444:6:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11380:82:96";
                };
                readonly returnParameters: {
                    readonly id: 26613;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11500:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26668;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11838:176:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26667;
                    readonly nodeType: "Block";
                    readonly src: "11941:73:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 26660;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26652;
                                readonly src: "11964:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26661;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26654;
                                readonly src: "11972:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 26662;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26652;
                                readonly src: "11983:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26663;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26656;
                                readonly src: "11991:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 26664;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12002:4:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 26659;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [26668, 26688, 26708, 26818];
                                readonly referencedDeclaration: 26818;
                                readonly src: "11951:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 26665;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11951:56:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 26666;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11951:56:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "11847:12:96";
                readonly parameters: {
                    readonly id: 26657;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26652;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "11868:6:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26668;
                        readonly src: "11860:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26651;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11860:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26654;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "11889:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26668;
                        readonly src: "11876:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26653;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11876:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26656;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "11913:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26668;
                        readonly src: "11900:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26655;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11900:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11859:64:96";
                };
                readonly returnParameters: {
                    readonly id: 26658;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11941:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26688;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12020:216:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26687;
                    readonly nodeType: "Block";
                    readonly src: "12161:75:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 26680;
                                readonly name: "targetA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26670;
                                readonly src: "12184:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26681;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26672;
                                readonly src: "12193:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 26682;
                                readonly name: "targetB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26674;
                                readonly src: "12204:7:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26683;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26676;
                                readonly src: "12213:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 26684;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12224:4:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 26679;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [26668, 26688, 26708, 26818];
                                readonly referencedDeclaration: 26818;
                                readonly src: "12171:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 26685;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12171:58:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 26686;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12171:58:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12029:12:96";
                readonly parameters: {
                    readonly id: 26677;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26670;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12050:7:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26688;
                        readonly src: "12042:15:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26669;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12042:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26672;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12072:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26688;
                        readonly src: "12059:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26671;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12059:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26674;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12091:7:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26688;
                        readonly src: "12083:15:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26673;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12083:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26676;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12113:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26688;
                        readonly src: "12100:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26675;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12100:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12041:82:96";
                };
                readonly returnParameters: {
                    readonly id: 26678;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12161:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26708;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12242:231:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26707;
                    readonly nodeType: "Block";
                    readonly src: "12388:85:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 26700;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26690;
                                readonly src: "12411:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26701;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26692;
                                readonly src: "12419:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 26702;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26690;
                                readonly src: "12430:6:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 26703;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26694;
                                readonly src: "12438:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 26704;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26696;
                                readonly src: "12449:16:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 26699;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [26668, 26688, 26708, 26818];
                                readonly referencedDeclaration: 26818;
                                readonly src: "12398:12:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 26705;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12398:68:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 26706;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12398:68:96";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12251:12:96";
                readonly parameters: {
                    readonly id: 26697;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26690;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "12272:6:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26708;
                        readonly src: "12264:14:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26689;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12264:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26692;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12293:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26708;
                        readonly src: "12280:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26691;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12280:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26694;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12317:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26708;
                        readonly src: "12304:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26693;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12304:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26696;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12333:16:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26708;
                        readonly src: "12328:21:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 26695;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12328:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12263:87:96";
                };
                readonly returnParameters: {
                    readonly id: 26698;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12388:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 26818;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12479:1189:96";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 26817;
                    readonly nodeType: "Block";
                    readonly src: "12669:999:96";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [26722, 26724];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26722;
                            readonly mutability: "mutable";
                            readonly name: "successA";
                            readonly nameLocation: "12685:8:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26817;
                            readonly src: "12680:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 26721;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12680:4:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 26724;
                            readonly mutability: "mutable";
                            readonly name: "returnDataA";
                            readonly nameLocation: "12708:11:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26817;
                            readonly src: "12695:24:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 26723;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12695:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26732;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26730;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26712;
                                readonly src: "12745:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26727;
                                        readonly name: "targetA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26710;
                                        readonly src: "12731:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 26726;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12723:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 26725;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12723:7:96";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 26728;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12723:16:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 26729;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12740:4:96";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12723:21:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 26731;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12723:32:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12679:76:96";
                    }, {
                        readonly assignments: readonly [26734, 26736];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 26734;
                            readonly mutability: "mutable";
                            readonly name: "successB";
                            readonly nameLocation: "12771:8:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26817;
                            readonly src: "12766:13:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 26733;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12766:4:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 26736;
                            readonly mutability: "mutable";
                            readonly name: "returnDataB";
                            readonly nameLocation: "12794:11:96";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 26817;
                            readonly src: "12781:24:96";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 26735;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12781:5:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 26744;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 26742;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26716;
                                readonly src: "12831:9:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26739;
                                        readonly name: "targetB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26714;
                                        readonly src: "12817:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 26738;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12809:7:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 26737;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12809:7:96";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 26740;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12809:16:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 26741;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12826:4:96";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12809:21:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 26743;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12809:32:96";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12765:76:96";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 26747;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26745;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26722;
                                readonly src: "12856:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 26746;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26734;
                                readonly src: "12868:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12856:20:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26755;
                        readonly nodeType: "IfStatement";
                        readonly src: "12852:120:96";
                        readonly trueBody: {
                            readonly id: 26754;
                            readonly nodeType: "Block";
                            readonly src: "12878:94:96";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26749;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26724;
                                        readonly src: "12901:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 26750;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26736;
                                        readonly src: "12914:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c2072657475726e206461746120646f6573206e6f74206d61746368";
                                        readonly id: 26751;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "12927:33:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        };
                                        readonly value: "Call return data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        }];
                                        readonly id: 26748;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25574;
                                        readonly src: "12892:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 26752;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12892:69:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26753;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "12892:69:96";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 26762;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 26760;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 26757;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12986:9:96";
                                    readonly subExpression: {
                                        readonly id: 26756;
                                        readonly name: "successA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26722;
                                        readonly src: "12987:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "&&";
                                readonly rightExpression: {
                                    readonly id: 26759;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12999:9:96";
                                    readonly subExpression: {
                                        readonly id: 26758;
                                        readonly name: "successB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26734;
                                        readonly src: "13000:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "12986:22:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 26761;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26718;
                                readonly src: "13012:16:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12986:42:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26770;
                        readonly nodeType: "IfStatement";
                        readonly src: "12982:142:96";
                        readonly trueBody: {
                            readonly id: 26769;
                            readonly nodeType: "Block";
                            readonly src: "13030:94:96";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 26764;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26724;
                                        readonly src: "13053:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 26765;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26736;
                                        readonly src: "13066:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c20726576657274206461746120646f6573206e6f74206d61746368";
                                        readonly id: 26766;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13079:33:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        };
                                        readonly value: "Call revert data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        }];
                                        readonly id: 26763;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25520, 25545, 25558, 25574, 25616, 25658, 25700, 25737, 25774, 25811, 23355, 23380, 23410, 23435, 23494, 23519, 23549, 23574, 25047, 25082];
                                        readonly referencedDeclaration: 25574;
                                        readonly src: "13044:8:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 26767;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13044:69:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26768;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13044:69:96";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 26774;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26772;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13138:9:96";
                                readonly subExpression: {
                                    readonly id: 26771;
                                    readonly name: "successA";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26722;
                                    readonly src: "13139:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 26773;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26734;
                                readonly src: "13151:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13138:21:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26793;
                        readonly nodeType: "IfStatement";
                        readonly src: "13134:259:96";
                        readonly trueBody: {
                            readonly id: 26792;
                            readonly nodeType: "Block";
                            readonly src: "13161:232:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 26776;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13184:29:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 26775;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "13180:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26777;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13180:34:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26778;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13175:39:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c207265766572742064617461";
                                        readonly id: 26780;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13249:25:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        };
                                        readonly value: "  Left call revert data";
                                    }, {
                                        readonly id: 26781;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26724;
                                        readonly src: "13276:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 26779;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23114;
                                        readonly src: "13233:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 26782;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13233:55:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26783;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13228:60:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c2072657475726e2064617461";
                                        readonly id: 26785;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13323:25:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        };
                                        readonly value: " Right call return data";
                                    }, {
                                        readonly id: 26786;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26736;
                                        readonly src: "13350:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 26784;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23114;
                                        readonly src: "13307:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 26787;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13307:55:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26788;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13302:60:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26789;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "13376:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26790;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13376:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26791;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13376:6:96";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 26797;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 26794;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 26722;
                                readonly src: "13407:8:96";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 26796;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13419:9:96";
                                readonly subExpression: {
                                    readonly id: 26795;
                                    readonly name: "successB";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 26734;
                                    readonly src: "13420:8:96";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13407:21:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 26816;
                        readonly nodeType: "IfStatement";
                        readonly src: "13403:259:96";
                        readonly trueBody: {
                            readonly id: 26815;
                            readonly nodeType: "Block";
                            readonly src: "13430:232:96";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 26799;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13453:29:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 26798;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23040;
                                        readonly src: "13449:3:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 26800;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13449:34:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26801;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13444:39:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c2072657475726e2064617461";
                                        readonly id: 26803;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13518:25:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        };
                                        readonly value: "  Left call return data";
                                    }, {
                                        readonly id: 26804;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26724;
                                        readonly src: "13545:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 26802;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23114;
                                        readonly src: "13502:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 26805;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13502:55:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26806;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13497:60:96";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c207265766572742064617461";
                                        readonly id: 26808;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13592:25:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        };
                                        readonly value: " Right call revert data";
                                    }, {
                                        readonly id: 26809;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 26736;
                                        readonly src: "13619:11:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 26807;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 23114;
                                        readonly src: "13576:15:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 26810;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13576:55:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26811;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13571:60:96";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 26812;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [25459, 23251];
                                        readonly referencedDeclaration: 23251;
                                        readonly src: "13645:4:96";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 26813;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13645:6:96";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 26814;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13645:6:96";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12488:12:96";
                readonly parameters: {
                    readonly id: 26719;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 26710;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12518:7:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26818;
                        readonly src: "12510:15:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26709;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12510:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26712;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12548:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26818;
                        readonly src: "12535:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26711;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12535:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26714;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12575:7:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26818;
                        readonly src: "12567:15:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 26713;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12567:7:96";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26716;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12605:9:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26818;
                        readonly src: "12592:22:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 26715;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12592:5:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 26718;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12629:16:96";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 26818;
                        readonly src: "12624:21:96";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 26717;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12624:4:96";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12500:151:96";
                };
                readonly returnParameters: {
                    readonly id: 26720;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12669:0:96";
                };
                readonly scope: 26819;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }];
            readonly abstract: true;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 25408;
                    readonly name: "DSTest";
                    readonly nameLocations: readonly ["181:6:96"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 25326;
                    readonly src: "181:6:96";
                };
                readonly id: 25409;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "181:6:96";
            }];
            readonly canonicalName: "StdAssertions";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [26819, 25326];
            readonly name: "StdAssertions";
            readonly nameLocation: "164:13:96";
            readonly scope: 26820;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [23040, 23044, 23048, 23052, 23056, 23060, 23064, 23068, 23074, 23080, 23088, 23096, 23102, 23108, 23114, 23120, 25414, 25419, 25424, 25431, 25438, 25445];
        }];
        readonly license: "MIT";
    };
    readonly id: 96;
};
//# sourceMappingURL=StdAssertions.d.ts.map