export const IHyperdriveRead = { "abi": [{ "type": "function", "name": "balanceOf", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }, { "name": "owner", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "baseToken", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "decimals", "inputs": [], "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }], "stateMutability": "view" }, { "type": "function", "name": "getCheckpoint", "inputs": [{ "name": "_checkpointTime", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Checkpoint", "components": [{ "name": "vaultSharePrice", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "getCheckpointExposure", "inputs": [{ "name": "_checkpointTime", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "int256", "internalType": "int256" }], "stateMutability": "view" }, { "type": "function", "name": "getMarketState", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.MarketState", "components": [{ "name": "shareReserves", "type": "uint128", "internalType": "uint128" }, { "name": "bondReserves", "type": "uint128", "internalType": "uint128" }, { "name": "longExposure", "type": "uint128", "internalType": "uint128" }, { "name": "longsOutstanding", "type": "uint128", "internalType": "uint128" }, { "name": "shareAdjustment", "type": "int128", "internalType": "int128" }, { "name": "shortsOutstanding", "type": "uint128", "internalType": "uint128" }, { "name": "longAverageMaturityTime", "type": "uint128", "internalType": "uint128" }, { "name": "shortAverageMaturityTime", "type": "uint128", "internalType": "uint128" }, { "name": "isInitialized", "type": "bool", "internalType": "bool" }, { "name": "isPaused", "type": "bool", "internalType": "bool" }, { "name": "zombieBaseProceeds", "type": "uint112", "internalType": "uint112" }, { "name": "zombieShareReserves", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "getPoolConfig", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.PoolConfig", "components": [{ "name": "baseToken", "type": "address", "internalType": "contract IERC20" }, { "name": "linkerFactory", "type": "address", "internalType": "address" }, { "name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32" }, { "name": "initialVaultSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "minimumShareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256" }, { "name": "positionDuration", "type": "uint256", "internalType": "uint256" }, { "name": "checkpointDuration", "type": "uint256", "internalType": "uint256" }, { "name": "timeStretch", "type": "uint256", "internalType": "uint256" }, { "name": "governance", "type": "address", "internalType": "address" }, { "name": "feeCollector", "type": "address", "internalType": "address" }, { "name": "sweepCollector", "type": "address", "internalType": "address" }, { "name": "fees", "type": "tuple", "internalType": "struct IHyperdrive.Fees", "components": [{ "name": "curve", "type": "uint256", "internalType": "uint256" }, { "name": "flat", "type": "uint256", "internalType": "uint256" }, { "name": "governanceLP", "type": "uint256", "internalType": "uint256" }, { "name": "governanceZombie", "type": "uint256", "internalType": "uint256" }] }] }], "stateMutability": "view" }, { "type": "function", "name": "getPoolInfo", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.PoolInfo", "components": [{ "name": "shareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "shareAdjustment", "type": "int256", "internalType": "int256" }, { "name": "zombieBaseProceeds", "type": "uint256", "internalType": "uint256" }, { "name": "zombieShareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "bondReserves", "type": "uint256", "internalType": "uint256" }, { "name": "lpTotalSupply", "type": "uint256", "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "longsOutstanding", "type": "uint256", "internalType": "uint256" }, { "name": "longAverageMaturityTime", "type": "uint256", "internalType": "uint256" }, { "name": "shortsOutstanding", "type": "uint256", "internalType": "uint256" }, { "name": "shortAverageMaturityTime", "type": "uint256", "internalType": "uint256" }, { "name": "withdrawalSharesReadyToWithdraw", "type": "uint256", "internalType": "uint256" }, { "name": "withdrawalSharesProceeds", "type": "uint256", "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "longExposure", "type": "uint256", "internalType": "uint256" }] }], "stateMutability": "view" }, { "type": "function", "name": "getUncollectedGovernanceFees", "inputs": [], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "getWithdrawPool", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.WithdrawPool", "components": [{ "name": "readyToWithdraw", "type": "uint128", "internalType": "uint128" }, { "name": "proceeds", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "isApprovedForAll", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "isPauser", "inputs": [{ "name": "_account", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "load", "inputs": [{ "name": "_slots", "type": "uint256[]", "internalType": "uint256[]" }], "outputs": [{ "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }], "stateMutability": "view" }, { "type": "function", "name": "name", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "view" }, { "type": "function", "name": "nonces", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "perTokenApprovals", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }, { "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "symbol", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "view" }, { "type": "function", "name": "totalSupply", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "balanceOf(uint256,address)": "3656eec2", "baseToken()": "c55dae63", "decimals()": "313ce567", "getCheckpoint(uint256)": "20fc4881", "getCheckpointExposure(uint256)": "cf210e65", "getMarketState()": "d8165743", "getPoolConfig()": "b0d96580", "getPoolInfo()": "60246c88", "getUncollectedGovernanceFees()": "c69e16ad", "getWithdrawPool()": "fba56008", "isApprovedForAll(address,address)": "e985e9c5", "isPauser(address)": "46fbf68e", "load(uint256[])": "becee9c3", "name(uint256)": "00ad800c", "nonces(address)": "7ecebe00", "perTokenApprovals(uint256,address,address)": "21ff32a9", "symbol(uint256)": "4e41a1fb", "totalSupply(uint256)": "bd85b039" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"vaultSharePrice\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpointExposure\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint112\"},{\"internalType\":\"uint128\",\"name\":\"zombieShareReserves\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zombieShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The balance of the owner.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getCheckpointExposure(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint exposure.\"}},\"getMarketState()\":{\"returns\":{\"_0\":\"The market state.\"}},\"getPoolConfig()\":{\"returns\":{\"_0\":\"The pool configuration.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The pool info.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"The amount of uncollected governance fees.\"}},\"getWithdrawPool()\":{\"returns\":{\"_0\":\"The withdrawal pool information.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The approval-for-all status of the spender for the owner.\"}},\"isPauser(address)\":{\"params\":{\"_account\":\"The account to check.\"},\"returns\":{\"_0\":\"The account's pauser status.\"}},\"load(uint256[])\":{\"details\":\"This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.\",\"params\":{\"_slots\":\"The storage slots to load.\"},\"returns\":{\"_0\":\"The values at the specified slots.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The name of the MultiToken.\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The permit nonce of the owner.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The symbol of the MultiToken.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The total supply of the MultiToken.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets the balance of a spender for a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the Hyperdrive pool's base token.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets one of the pool's checkpoints.\"},\"getCheckpointExposure(uint256)\":{\"notice\":\"Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint.\"},\"getMarketState()\":{\"notice\":\"Gets the pool's state relating to the Hyperdrive market.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets the amount of governance fees that haven't been collected.\"},\"getWithdrawPool()\":{\"notice\":\"Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval-for-all status of a spender on behalf of an         owner.\"},\"isPauser(address)\":{\"notice\":\"Gets an account's pauser status within the Hyperdrive pool.\"},\"load(uint256[])\":{\"notice\":\"Gets the storage values at the specified slots.\"},\"name(uint256)\":{\"notice\":\"Gets the name of the MultiToken.\"},\"nonces(address)\":{\"notice\":\"Gets the permit nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the allowance of a spender for a sub-token.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of the MultiToken.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of the MultiToken.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHyperdriveRead.sol\":\"IHyperdriveRead\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }], "stateMutability": "view", "type": "function", "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "baseToken", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }] }, { "inputs": [{ "internalType": "uint256", "name": "_checkpointTime", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "getCheckpoint", "outputs": [{ "internalType": "struct IHyperdrive.Checkpoint", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "vaultSharePrice", "type": "uint128" }] }] }, { "inputs": [{ "internalType": "uint256", "name": "_checkpointTime", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "getCheckpointExposure", "outputs": [{ "internalType": "int256", "name": "", "type": "int256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getMarketState", "outputs": [{ "internalType": "struct IHyperdrive.MarketState", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "shareReserves", "type": "uint128" }, { "internalType": "uint128", "name": "bondReserves", "type": "uint128" }, { "internalType": "uint128", "name": "longExposure", "type": "uint128" }, { "internalType": "uint128", "name": "longsOutstanding", "type": "uint128" }, { "internalType": "int128", "name": "shareAdjustment", "type": "int128" }, { "internalType": "uint128", "name": "shortsOutstanding", "type": "uint128" }, { "internalType": "uint128", "name": "longAverageMaturityTime", "type": "uint128" }, { "internalType": "uint128", "name": "shortAverageMaturityTime", "type": "uint128" }, { "internalType": "bool", "name": "isInitialized", "type": "bool" }, { "internalType": "bool", "name": "isPaused", "type": "bool" }, { "internalType": "uint112", "name": "zombieBaseProceeds", "type": "uint112" }, { "internalType": "uint128", "name": "zombieShareReserves", "type": "uint128" }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getPoolConfig", "outputs": [{ "internalType": "struct IHyperdrive.PoolConfig", "name": "", "type": "tuple", "components": [{ "internalType": "contract IERC20", "name": "baseToken", "type": "address" }, { "internalType": "address", "name": "linkerFactory", "type": "address" }, { "internalType": "bytes32", "name": "linkerCodeHash", "type": "bytes32" }, { "internalType": "uint256", "name": "initialVaultSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "minimumShareReserves", "type": "uint256" }, { "internalType": "uint256", "name": "minimumTransactionAmount", "type": "uint256" }, { "internalType": "uint256", "name": "positionDuration", "type": "uint256" }, { "internalType": "uint256", "name": "checkpointDuration", "type": "uint256" }, { "internalType": "uint256", "name": "timeStretch", "type": "uint256" }, { "internalType": "address", "name": "governance", "type": "address" }, { "internalType": "address", "name": "feeCollector", "type": "address" }, { "internalType": "address", "name": "sweepCollector", "type": "address" }, { "internalType": "struct IHyperdrive.Fees", "name": "fees", "type": "tuple", "components": [{ "internalType": "uint256", "name": "curve", "type": "uint256" }, { "internalType": "uint256", "name": "flat", "type": "uint256" }, { "internalType": "uint256", "name": "governanceLP", "type": "uint256" }, { "internalType": "uint256", "name": "governanceZombie", "type": "uint256" }] }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getPoolInfo", "outputs": [{ "internalType": "struct IHyperdrive.PoolInfo", "name": "", "type": "tuple", "components": [{ "internalType": "uint256", "name": "shareReserves", "type": "uint256" }, { "internalType": "int256", "name": "shareAdjustment", "type": "int256" }, { "internalType": "uint256", "name": "zombieBaseProceeds", "type": "uint256" }, { "internalType": "uint256", "name": "zombieShareReserves", "type": "uint256" }, { "internalType": "uint256", "name": "bondReserves", "type": "uint256" }, { "internalType": "uint256", "name": "lpTotalSupply", "type": "uint256" }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "longsOutstanding", "type": "uint256" }, { "internalType": "uint256", "name": "longAverageMaturityTime", "type": "uint256" }, { "internalType": "uint256", "name": "shortsOutstanding", "type": "uint256" }, { "internalType": "uint256", "name": "shortAverageMaturityTime", "type": "uint256" }, { "internalType": "uint256", "name": "withdrawalSharesReadyToWithdraw", "type": "uint256" }, { "internalType": "uint256", "name": "withdrawalSharesProceeds", "type": "uint256" }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "longExposure", "type": "uint256" }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getUncollectedGovernanceFees", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getWithdrawPool", "outputs": [{ "internalType": "struct IHyperdrive.WithdrawPool", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "readyToWithdraw", "type": "uint128" }, { "internalType": "uint128", "name": "proceeds", "type": "uint128" }] }] }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "stateMutability": "view", "type": "function", "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "address", "name": "_account", "type": "address" }], "stateMutability": "view", "type": "function", "name": "isPauser", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "uint256[]", "name": "_slots", "type": "uint256[]" }], "stateMutability": "view", "type": "function", "name": "load", "outputs": [{ "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "stateMutability": "view", "type": "function", "name": "nonces", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "stateMutability": "view", "type": "function", "name": "perTokenApprovals", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }], "devdoc": { "kind": "dev", "methods": { "balanceOf(uint256,address)": { "params": { "owner": "The owner of the tokens.", "tokenId": "The sub-token ID." }, "returns": { "_0": "The balance of the owner." } }, "baseToken()": { "returns": { "_0": "The base token." } }, "decimals()": { "returns": { "_0": "The decimals of the MultiToken." } }, "getCheckpoint(uint256)": { "params": { "_checkpointTime": "The checkpoint time." }, "returns": { "_0": "The checkpoint." } }, "getCheckpointExposure(uint256)": { "params": { "_checkpointTime": "The checkpoint time." }, "returns": { "_0": "The checkpoint exposure." } }, "getMarketState()": { "returns": { "_0": "The market state." } }, "getPoolConfig()": { "returns": { "_0": "The pool configuration." } }, "getPoolInfo()": { "returns": { "_0": "The pool info." } }, "getUncollectedGovernanceFees()": { "returns": { "_0": "The amount of uncollected governance fees." } }, "getWithdrawPool()": { "returns": { "_0": "The withdrawal pool information." } }, "isApprovedForAll(address,address)": { "params": { "owner": "The owner of the tokens.", "spender": "The spender of the tokens." }, "returns": { "_0": "The approval-for-all status of the spender for the owner." } }, "isPauser(address)": { "params": { "_account": "The account to check." }, "returns": { "_0": "The account's pauser status." } }, "load(uint256[])": { "details": "This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.", "params": { "_slots": "The storage slots to load." }, "returns": { "_0": "The values at the specified slots." } }, "name(uint256)": { "params": { "tokenId": "The sub-token ID." }, "returns": { "_0": "The name of the MultiToken." } }, "nonces(address)": { "params": { "owner": "The owner of the tokens." }, "returns": { "_0": "The permit nonce of the owner." } }, "perTokenApprovals(uint256,address,address)": { "params": { "owner": "The owner of the tokens.", "spender": "The spender of the tokens.", "tokenId": "The sub-token ID." }, "returns": { "_0": "The allowance of the spender for the owner." } }, "symbol(uint256)": { "params": { "tokenId": "The sub-token ID." }, "returns": { "_0": "The symbol of the MultiToken." } }, "totalSupply(uint256)": { "params": { "tokenId": "The sub-token ID." }, "returns": { "_0": "The total supply of the MultiToken." } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "balanceOf(uint256,address)": { "notice": "Gets the balance of a spender for a sub-token." }, "baseToken()": { "notice": "Gets the Hyperdrive pool's base token." }, "decimals()": { "notice": "Gets the decimals of the MultiToken." }, "getCheckpoint(uint256)": { "notice": "Gets one of the pool's checkpoints." }, "getCheckpointExposure(uint256)": { "notice": "Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint." }, "getMarketState()": { "notice": "Gets the pool's state relating to the Hyperdrive market." }, "getPoolConfig()": { "notice": "Gets the pool's configuration parameters." }, "getPoolInfo()": { "notice": "Gets info about the pool's reserves and other state that is         important to evaluate potential trades." }, "getUncollectedGovernanceFees()": { "notice": "Gets the amount of governance fees that haven't been collected." }, "getWithdrawPool()": { "notice": "Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed." }, "isApprovedForAll(address,address)": { "notice": "Gets the approval-for-all status of a spender on behalf of an         owner." }, "isPauser(address)": { "notice": "Gets an account's pauser status within the Hyperdrive pool." }, "load(uint256[])": { "notice": "Gets the storage values at the specified slots." }, "name(uint256)": { "notice": "Gets the name of the MultiToken." }, "nonces(address)": { "notice": "Gets the permit nonce for an account." }, "perTokenApprovals(uint256,address,address)": { "notice": "Gets the allowance of a spender for a sub-token." }, "symbol(uint256)": { "notice": "Gets the symbol of the MultiToken." }, "totalSupply(uint256)": { "notice": "Gets the total supply of the MultiToken." } }, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/interfaces/IHyperdriveRead.sol": "IHyperdriveRead" }, "libraries": {} }, "sources": { "contracts/src/interfaces/IERC20.sol": { "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9", "urls": ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952", "urls": ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e", "urls": ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0", "urls": ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55", "urls": ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501", "urls": ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb", "urls": ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca", "urls": ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0", "urls": ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"], "license": "Apache-2.0" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/interfaces/IHyperdriveRead.sol", "id": 11914, "exportedSymbols": { "IHyperdrive": [11076], "IHyperdriveRead": [11913], "IMultiTokenRead": [12253] }, "nodeType": "SourceUnit", "src": "39:2830:94", "nodes": [{ "id": 11831, "nodeType": "PragmaDirective", "src": "39:23:94", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 11833, "nodeType": "ImportDirective", "src": "64:48:94", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "./IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 11914, "sourceUnit": 11077, "symbolAliases": [{ "foreign": { "id": 11832, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "73:11:94", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 11835, "nodeType": "ImportDirective", "src": "113:56:94", "nodes": [], "absolutePath": "contracts/src/interfaces/IMultiTokenRead.sol", "file": "./IMultiTokenRead.sol", "nameLocation": "-1:-1:-1", "scope": 11914, "sourceUnit": 12254, "symbolAliases": [{ "foreign": { "id": 11834, "name": "IMultiTokenRead", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12253, "src": "122:15:94", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 11913, "nodeType": "ContractDefinition", "src": "171:2697:94", "nodes": [{ "id": 11843, "nodeType": "FunctionDefinition", "src": "309:53:94", "nodes": [], "documentation": { "id": 11838, "nodeType": "StructuredDocumentation", "src": "222:82:94", "text": "@notice Gets the Hyperdrive pool's base token.\n @return The base token." }, "functionSelector": "c55dae63", "implemented": false, "kind": "function", "modifiers": [], "name": "baseToken", "nameLocation": "318:9:94", "parameters": { "id": 11839, "nodeType": "ParameterList", "parameters": [], "src": "327:2:94" }, "returnParameters": { "id": 11842, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11841, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11843, "src": "353:7:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 11840, "name": "address", "nodeType": "ElementaryTypeName", "src": "353:7:94", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "352:9:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11852, "nodeType": "FunctionDefinition", "src": "504:116:94", "nodes": [], "documentation": { "id": 11844, "nodeType": "StructuredDocumentation", "src": "368:131:94", "text": "@notice Gets one of the pool's checkpoints.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint." }, "functionSelector": "20fc4881", "implemented": false, "kind": "function", "modifiers": [], "name": "getCheckpoint", "nameLocation": "513:13:94", "parameters": { "id": 11847, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11846, "mutability": "mutable", "name": "_checkpointTime", "nameLocation": "544:15:94", "nodeType": "VariableDeclaration", "scope": 11852, "src": "536:23:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 11845, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "536:7:94", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "526:39:94" }, "returnParameters": { "id": 11851, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11850, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11852, "src": "589:29:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_Checkpoint_$10766_memory_ptr", "typeString": "struct IHyperdrive.Checkpoint" }, "typeName": { "id": 11849, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 11848, "name": "IHyperdrive.Checkpoint", "nameLocations": ["589:11:94", "601:10:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 10766, "src": "589:22:94" }, "referencedDeclaration": 10766, "src": "589:22:94", "typeDescriptions": { "typeIdentifier": "t_struct$_Checkpoint_$10766_storage_ptr", "typeString": "struct IHyperdrive.Checkpoint" } }, "visibility": "internal" }], "src": "588:31:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11860, "nodeType": "FunctionDefinition", "src": "853:101:94", "nodes": [], "documentation": { "id": 11853, "nodeType": "StructuredDocumentation", "src": "626:222:94", "text": "@notice Gets the pool's exposure from a checkpoint. This is the number\n         of non-netted longs in the checkpoint.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint exposure." }, "functionSelector": "cf210e65", "implemented": false, "kind": "function", "modifiers": [], "name": "getCheckpointExposure", "nameLocation": "862:21:94", "parameters": { "id": 11856, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11855, "mutability": "mutable", "name": "_checkpointTime", "nameLocation": "901:15:94", "nodeType": "VariableDeclaration", "scope": 11860, "src": "893:23:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 11854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "893:7:94", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "883:39:94" }, "returnParameters": { "id": 11859, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11858, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11860, "src": "946:6:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 11857, "name": "int256", "nodeType": "ElementaryTypeName", "src": "946:6:94", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "945:8:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11867, "nodeType": "FunctionDefinition", "src": "1067:105:94", "nodes": [], "documentation": { "id": 11861, "nodeType": "StructuredDocumentation", "src": "960:102:94", "text": "@notice Gets the pool's state relating to the Hyperdrive market.\n @return The market state." }, "functionSelector": "d8165743", "implemented": false, "kind": "function", "modifiers": [], "name": "getMarketState", "nameLocation": "1076:14:94", "parameters": { "id": 11862, "nodeType": "ParameterList", "parameters": [], "src": "1090:2:94" }, "returnParameters": { "id": 11866, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11865, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11867, "src": "1140:30:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_memory_ptr", "typeString": "struct IHyperdrive.MarketState" }, "typeName": { "id": 11864, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 11863, "name": "IHyperdrive.MarketState", "nameLocations": ["1140:11:94", "1152:11:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 10762, "src": "1140:23:94" }, "referencedDeclaration": 10762, "src": "1140:23:94", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage_ptr", "typeString": "struct IHyperdrive.MarketState" } }, "visibility": "internal" }], "src": "1139:32:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11874, "nodeType": "FunctionDefinition", "src": "1276:103:94", "nodes": [], "documentation": { "id": 11868, "nodeType": "StructuredDocumentation", "src": "1178:93:94", "text": "@notice Gets the pool's configuration parameters.\n @return The pool configuration." }, "functionSelector": "b0d96580", "implemented": false, "kind": "function", "modifiers": [], "name": "getPoolConfig", "nameLocation": "1285:13:94", "parameters": { "id": 11869, "nodeType": "ParameterList", "parameters": [], "src": "1298:2:94" }, "returnParameters": { "id": 11873, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11872, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11874, "src": "1348:29:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig" }, "typeName": { "id": 11871, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 11870, "name": "IHyperdrive.PoolConfig", "nameLocations": ["1348:11:94", "1360:10:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 10867, "src": "1348:22:94" }, "referencedDeclaration": 10867, "src": "1348:22:94", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_storage_ptr", "typeString": "struct IHyperdrive.PoolConfig" } }, "visibility": "internal" }], "src": "1347:31:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11881, "nodeType": "FunctionDefinition", "src": "1548:75:94", "nodes": [], "documentation": { "id": 11875, "nodeType": "StructuredDocumentation", "src": "1385:158:94", "text": "@notice Gets info about the pool's reserves and other state that is\n         important to evaluate potential trades.\n @return The pool info." }, "functionSelector": "60246c88", "implemented": false, "kind": "function", "modifiers": [], "name": "getPoolInfo", "nameLocation": "1557:11:94", "parameters": { "id": 11876, "nodeType": "ParameterList", "parameters": [], "src": "1568:2:94" }, "returnParameters": { "id": 11880, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11879, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11881, "src": "1594:27:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo" }, "typeName": { "id": 11878, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 11877, "name": "IHyperdrive.PoolInfo", "nameLocations": ["1594:11:94", "1606:8:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 10913, "src": "1594:20:94" }, "referencedDeclaration": 10913, "src": "1594:20:94", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_storage_ptr", "typeString": "struct IHyperdrive.PoolInfo" } }, "visibility": "internal" }], "src": "1593:29:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11887, "nodeType": "FunctionDefinition", "src": "1768:72:94", "nodes": [], "documentation": { "id": 11882, "nodeType": "StructuredDocumentation", "src": "1629:134:94", "text": "@notice Gets the amount of governance fees that haven't been collected.\n @return The amount of uncollected governance fees." }, "functionSelector": "c69e16ad", "implemented": false, "kind": "function", "modifiers": [], "name": "getUncollectedGovernanceFees", "nameLocation": "1777:28:94", "parameters": { "id": 11883, "nodeType": "ParameterList", "parameters": [], "src": "1805:2:94" }, "returnParameters": { "id": 11886, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11885, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11887, "src": "1831:7:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 11884, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1831:7:94", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1830:9:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11894, "nodeType": "FunctionDefinition", "src": "2122:107:94", "nodes": [], "documentation": { "id": 11888, "nodeType": "StructuredDocumentation", "src": "1846:271:94", "text": "@notice Gets information relating to the pool's withdrawal pool. This\n         includes the total proceeds underlying the withdrawal pool and\n         the number of withdrawal shares ready to be redeemed.\n @return The withdrawal pool information." }, "functionSelector": "fba56008", "implemented": false, "kind": "function", "modifiers": [], "name": "getWithdrawPool", "nameLocation": "2131:15:94", "parameters": { "id": 11889, "nodeType": "ParameterList", "parameters": [], "src": "2146:2:94" }, "returnParameters": { "id": 11893, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11892, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11894, "src": "2196:31:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_memory_ptr", "typeString": "struct IHyperdrive.WithdrawPool" }, "typeName": { "id": 11891, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 11890, "name": "IHyperdrive.WithdrawPool", "nameLocations": ["2196:11:94", "2208:12:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 10773, "src": "2196:24:94" }, "referencedDeclaration": 10773, "src": "2196:24:94", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage_ptr", "typeString": "struct IHyperdrive.WithdrawPool" } }, "visibility": "internal" }], "src": "2195:33:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11902, "nodeType": "FunctionDefinition", "src": "2402:65:94", "nodes": [], "documentation": { "id": 11895, "nodeType": "StructuredDocumentation", "src": "2235:162:94", "text": "@notice Gets an account's pauser status within the Hyperdrive pool.\n @param _account The account to check.\n @return The account's pauser status." }, "functionSelector": "46fbf68e", "implemented": false, "kind": "function", "modifiers": [], "name": "isPauser", "nameLocation": "2411:8:94", "parameters": { "id": 11898, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11897, "mutability": "mutable", "name": "_account", "nameLocation": "2428:8:94", "nodeType": "VariableDeclaration", "scope": 11902, "src": "2420:16:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 11896, "name": "address", "nodeType": "ElementaryTypeName", "src": "2420:7:94", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2419:18:94" }, "returnParameters": { "id": 11901, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11900, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11902, "src": "2461:4:94", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 11899, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2461:4:94", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "2460:6:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 11912, "nodeType": "FunctionDefinition", "src": "2770:96:94", "nodes": [], "documentation": { "id": 11903, "nodeType": "StructuredDocumentation", "src": "2473:292:94", "text": "@notice Gets the storage values at the specified slots.\n @dev This serves as a generalized getter that allows consumers to create\n      custom getters to suit their purposes.\n @param _slots The storage slots to load.\n @return The values at the specified slots." }, "functionSelector": "becee9c3", "implemented": false, "kind": "function", "modifiers": [], "name": "load", "nameLocation": "2779:4:94", "parameters": { "id": 11907, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11906, "mutability": "mutable", "name": "_slots", "nameLocation": "2812:6:94", "nodeType": "VariableDeclaration", "scope": 11912, "src": "2793:25:94", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 11904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2793:7:94", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 11905, "nodeType": "ArrayTypeName", "src": "2793:9:94", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }], "src": "2783:41:94" }, "returnParameters": { "id": 11911, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 11910, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11912, "src": "2848:16:94", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]" }, "typeName": { "baseType": { "id": 11908, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2848:7:94", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "id": 11909, "nodeType": "ArrayTypeName", "src": "2848:9:94", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]" } }, "visibility": "internal" }], "src": "2847:18:94" }, "scope": 11913, "stateMutability": "view", "virtual": false, "visibility": "external" }], "abstract": false, "baseContracts": [{ "baseName": { "id": 11836, "name": "IMultiTokenRead", "nameLocations": ["200:15:94"], "nodeType": "IdentifierPath", "referencedDeclaration": 12253, "src": "200:15:94" }, "id": 11837, "nodeType": "InheritanceSpecifier", "src": "200:15:94" }], "canonicalName": "IHyperdriveRead", "contractDependencies": [], "contractKind": "interface", "fullyImplemented": false, "linearizedBaseContracts": [11913, 12253], "name": "IHyperdriveRead", "nameLocation": "181:15:94", "scope": 11914, "usedErrors": [], "usedEvents": [] }], "license": "Apache-2.0" }, "id": 94 };
