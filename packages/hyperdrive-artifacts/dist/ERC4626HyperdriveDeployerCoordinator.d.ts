export declare const ERC4626HyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_coreDeployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_target0Deployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_target1Deployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_target2Deployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_target3Deployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_target4Deployer";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "coreDeployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "deploy";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployConfig";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "deployTarget";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployConfig";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_targetIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "target";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "deployments";
        readonly inputs: readonly [{
            readonly name: "_deployer";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly components: readonly [{
                readonly name: "configHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "extraDataHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "initialSharePrice";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "hyperdrive";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "target0";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "target1";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "target2";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "target3";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "target4";
                readonly type: "address";
                readonly internalType: "address";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "target0Deployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "target1Deployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "target2Deployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "target3Deployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "target4Deployer";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "error";
        readonly name: "DeploymentAlreadyExists";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "DeploymentDoesNotExist";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "HyperdriveAlreadyDeployed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "IncompleteDeployment";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidFeeAmounts";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinimumShareReserves";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinimumTransactionAmount";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidTargetIndex";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "MismatchedConfig";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "MismatchedExtraData";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "TargetAlreadyDeployed";
        readonly inputs: readonly [];
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "801:2795:2:-:0;;;1259:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3698:28:0;;;;;3736:34;;;;;3780;;;;;3824;;;;3868;;;;3912;;;801:2795:2;;14:177:184;93:13;;-1:-1:-1;;;;;135:31:184;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;:::-;801:2795:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "801:2795:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13837:189:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7714:5917;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5347:32:184;;;5329:51;;5317:2;5302:18;7714:5917:0;5183:203:184;2952:40:0;;;;;2571;;;;;2825;;;;;2444;;;;;2698;;;;;4391:2690;;;;;;:::i;:::-;;:::i;2320:37::-;;;;;13837:189;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13981:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;13974:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13837:189;;;;;:::o;7714:5917::-;7936:14;8207:12;8223:1;8207:17;8203:1789;;8417:10;8466:1;8404:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8383:196;;8508:56;;-1:-1:-1;;;8508:56:0;;;;;;;;;;;8383:196;8713:31;8730:13;8713:16;:31::i;:::-;8862:25;8890:38;8917:10;8890:26;:38::i;:::-;8862:66;;8942:18;8984:13;8973:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;8963:36;;;;;;8942:57;;9013:21;9047:10;9037:21;;;;;;9013:45;;9189:37;9229:60;9262:13;9229:15;:60::i;:::-;9303:30;;;:50;;;9421:139;;-1:-1:-1;;;9421:139:0;;9189:100;;-1:-1:-1;;;;;;9447:15:0;9421:49;;;;:139;;9189:100;;9513:10;;9541:5;;9421:139;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9625:10;9612:12;:24;;;;;;;;;;;:39;;;;;;;;:63;;;9689:70;;;:86;;;;-1:-1:-1;9789:74:0;;;:94;;;;9897:47;;:56;;-1:-1:-1;;;;;;9897:56:0;-1:-1:-1;;;;;9897:56:0;;;;;:39;-1:-1:-1;9968:13:0;;8203:1789;10154:10;10203:1;10141:24;;;;;;;;;;;:39;;;;;;;;:50;10137:157;;10228:55;;-1:-1:-1;;;10228:55:0;;;;;;;;;;;10137:157;10454:10;10441:12;:24;;;;;;;;;;;:39;;;;;;;;;:50;10399:25;;;;10410:13;;10399:25;;:::i;:::-;;;;;;;;;;;;;10389:36;;;;;;:102;10372:211;;10523:49;;-1:-1:-1;;;10523:49:0;;;;;;;;;;;10372:211;10736:10;10723:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;10686:21;;;;;;;;;:90;10669:202;;10808:52;;-1:-1:-1;;;10808:52:0;;;;;;;;;;;10669:202;11147:31;11164:13;11147:16;:31::i;:::-;11297:36;11336:30;11352:13;11336:15;:30::i;:::-;11421:10;11408:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11376:29;;;:102;11297:69;-1:-1:-1;11758:1:0;11742:17;;;11738:1863;;11792:10;11838:1;11779:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;11779:47:0;:61;11775:161;;11867:54;;-1:-1:-1;;;11867:54:0;;;;;;;;;;;11775:161;11958:138;;-1:-1:-1;;;11958:138:0;;-1:-1:-1;;;;;11984:15:0;11958:49;;;;:138;;12025:6;;12049:10;;12077:5;;11958:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12123:10;12110:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12110:56:0;-1:-1:-1;;;;;12110:56:0;;;;;;-1:-1:-1;11738:1863:0;;;12187:12;12203:1;12187:17;12183:1418;;12237:10;12283:1;12224:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12224:47:0;:61;12220:161;;12312:54;;-1:-1:-1;;;12312:54:0;;;;;;;;;;;12220:161;12403:138;;-1:-1:-1;;;12403:138:0;;-1:-1:-1;;;;;12429:15:0;12403:49;;;;:138;;12470:6;;12494:10;;12522:5;;12403:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12568:10;12555:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12555:56:0;-1:-1:-1;;;;;12555:56:0;;;;;;-1:-1:-1;12183:1418:0;;;12632:12;12648:1;12632:17;12628:973;;12682:10;12728:1;12669:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12669:47:0;:61;12665:161;;12757:54;;-1:-1:-1;;;12757:54:0;;;;;;;;;;;12665:161;12848:138;;-1:-1:-1;;;12848:138:0;;-1:-1:-1;;;;;12874:15:0;12848:49;;;;:138;;12915:6;;12939:10;;12967:5;;12848:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13013:10;13000:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13000:56:0;-1:-1:-1;;;;;13000:56:0;;;;;;-1:-1:-1;12628:973:0;;;13077:12;13093:1;13077:17;13073:528;;13127:10;13173:1;13114:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13114:47:0;:61;13110:161;;13202:54;;-1:-1:-1;;;13202:54:0;;;;;;;;;;;13110:161;13293:138;;-1:-1:-1;;;13293:138:0;;-1:-1:-1;;;;;13319:15:0;13293:49;;;;:138;;13360:6;;13384:10;;13412:5;;13293:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13458:10;13445:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13445:56:0;-1:-1:-1;;;;;13445:56:0;;;;;;-1:-1:-1;13073:528:0;;;13539:51;;-1:-1:-1;;;13539:51:0;;;;;;;;;;;13073:528;13611:13;7714:5917;;;;;;;;:::o;4391:2690::-;4720:10;4577:7;4707:24;;;;;;;;;;;:39;;;;;;;;4676:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4676:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4760:35;4756:131;;4818:58;;-1:-1:-1;;;4818:58:0;;;;;;;;;;;4756:131;5036:21;;5032:128;;5094:55;;-1:-1:-1;;;5094:55:0;;;;;;;;;;;5032:128;5249:18;;;;-1:-1:-1;;;;;5249:32:0;;;:80;;-1:-1:-1;5297:18:0;;;;-1:-1:-1;;;;;5297:32:0;;5249:80;:128;;;-1:-1:-1;5345:18:0;;;;-1:-1:-1;;;;;5345:32:0;;5249:128;:176;;;-1:-1:-1;5393:18:0;;;;-1:-1:-1;;;;;5393:32:0;;5249:176;:224;;;-1:-1:-1;5441:18:0;;;;-1:-1:-1;;;;;5441:32:0;;5249:224;5232:337;;;5505:53;;-1:-1:-1;;;5505:53:0;;;;;;;;;;;5232:337;5691:21;;5661:25;;;;5672:13;;5661:25;;;:::i;:::-;;;;;;;;;;;;;5651:36;;;;;;:61;5647:148;;5735:49;;-1:-1:-1;;;5735:49:0;;;;;;;;;;;5647:148;5910:10;:24;;;5895:10;5885:21;;;;;;:49;5881:139;;5957:52;;-1:-1:-1;;;5957:52:0;;;;;;;;;;;5881:139;6296:31;6313:13;6296:16;:31::i;:::-;6446:36;6485:30;6501:13;6485:15;:30::i;:::-;6557:28;;;;;6525:29;;;:60;6798:18;;;;6830;;;;6862;;;;6894;;;;6926;;;;6696:277;;-1:-1:-1;;;6696:277:0;;6446:69;;-1:-1:-1;6675:18:0;;-1:-1:-1;;;;;6720:12:0;6696:44;;;;:277;;6446:69;;6774:10;;6798:18;;6830;;6862;;6894;6958:5;;6696:277;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6996:10;6983:12;:24;;;;;;;;;;;:39;;;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;6983:63:0;-1:-1:-1;;;;;6983:63:0;;;;;-1:-1:-1;6983:63:0;;4391:2690;-1:-1:-1;;;;;;4391:2690:0:o;1867:1220:2:-;2030:37;2053:13;2030:22;:37::i;:::-;2455:1;2418:13;:23;;;-1:-1:-1;;;;;2418:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;2411:46;;:2;:46;:::i;:::-;2362:13;:34;;;:95;2345:215;;;2489:60;;-1:-1:-1;;;2489:60:2;;;;;;;;;;;2345:215;2955:1;2918:13;:23;;;-1:-1:-1;;;;;2918:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;2911:46;;:2;:46;:::i;:::-;2862:13;:34;;;:95;2845:236;;;2989:81;;-1:-1:-1;;;2989:81:2;;;;;;;;;;;2845:236;1867:1220;:::o;3307:287::-;3414:7;3484:14;3521:10;3510:33;;;;;;;;;;;;:::i;:::-;3561:26;;-1:-1:-1;;;3561:26:2;;150:4:73;3561:26:2;;;12898:25:184;3484:60:2;;-1:-1:-1;;;;;;3561:21:2;;;;;12871:18:184;;3561:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3554:33;3307:287;-1:-1:-1;;;3307:287:2:o;15927:926:0:-;16040:37;;:::i;:::-;16176:23;;-1:-1:-1;;;;;16156:43:0;;;;;16233:27;;;;;16209:51;;:21;;;:51;16295:28;;;;;16270:22;;;:53;16364:34;;;;16333:28;;;;:65;;;;16443:51;;;16408:32;;;;:86;;;;16531:30;;;16504:24;;;;:57;;;;16600:32;;;16571:26;;;;:61;;;;16664:25;;;16642:19;;;;:47;;;;16720:24;;;16699:45;;:18;;;;:45;;;;16777:26;;;16754:49;:20;;;;:49;;;;16828:18;;;;16813:12;;;:33;16156:7;15927:926::o;14181:1195::-;14482:3;14445:13;:34;;;:40;14441:138;;;14508:60;;-1:-1:-1;;;14508:60:0;;;;;;;;;;;14441:138;14593:13;:32;;;14629:1;14593:37;14589:133;;14653:58;;-1:-1:-1;;;14653:58:0;;;;;;;;;;;14589:133;14781:13;:32;;;14748:13;:30;;;:65;:163;;;;14862:13;:32;;;14829:13;:30;;;:65;;;;:::i;:::-;:82;;14748:163;14731:279;;;14943:56;;-1:-1:-1;;;14943:56:0;;;;;;;;;;;14731:279;15088:18;;;;:24;15115:4;-1:-1:-1;15088:31:0;:77;;;15161:4;15135:13;:18;;;:23;;;:30;15088:77;:131;;;;15215:4;15181:13;:18;;;:31;;;:38;15088:131;:189;;;;15273:4;15235:13;:18;;;:35;;;:42;15088:189;15071:299;;;15309:50;;-1:-1:-1;;;15309:50:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:184:-;-1:-1:-1;;;;;89:31:184;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:184:o;718:1087::-;935:13;;917:32;;1005:4;993:17;;;987:24;965:20;;;958:54;1068:4;1056:17;;;1050:24;1028:20;;;1021:54;1122:4;1110:17;;;1104:24;-1:-1:-1;;;;;1204:21:184;;;1182:20;;;1175:51;;;;1286:4;1274:17;;;1268:24;1264:33;;1242:20;;;1235:63;1155:3;1335:17;;;1329:24;675:31;;1397:20;;;663:44;1467:4;1455:17;;;1449:24;675:31;;1517:20;;;663:44;1587:4;1575:17;;;1569:24;675:31;;1637:20;;;663:44;1677:6;1720:15;;;1714:22;675:31;;;1780:18;;;663:44;904:3;889:19;;;1745:54;;;718:1087;;;;:::o;1810:127::-;1871:10;1866:3;1862:20;1859:1;1852:31;1902:4;1899:1;1892:15;1926:4;1923:1;1916:15;1942:250;2009:2;2003:9;2051:6;2039:19;;2088:18;2073:34;;2109:22;;;2070:62;2067:88;;;2135:18;;:::i;:::-;2171:2;2164:22;1942:250;:::o;2197:601::-;2248:5;2296:4;2284:9;2279:3;2275:19;2271:30;2268:50;;;2314:1;2311;2304:12;2268:50;2347:2;2341:9;2389:4;2381:6;2377:17;2460:6;2448:10;2445:22;2424:18;2412:10;2409:34;2406:62;2403:88;;;2471:18;;:::i;:::-;2511:10;2507:2;2500:22;;2540:6;2531:15;;2583:9;2570:23;2562:6;2555:39;2655:2;2644:9;2640:18;2627:32;2622:2;2614:6;2610:15;2603:57;2721:2;2710:9;2706:18;2693:32;2688:2;2680:6;2676:15;2669:57;2787:2;2776:9;2772:18;2759:32;2754:2;2746:6;2742:15;2735:57;;2197:601;;;;:::o;2803:986::-;2866:5;2914:6;2902:9;2897:3;2893:19;2889:32;2886:52;;;2934:1;2931;2924:12;2886:52;2956:17;;:::i;:::-;2947:26;;2996:29;3015:9;2996:29;:::i;:::-;2989:5;2982:44;3058:38;3092:2;3081:9;3077:18;3058:38;:::i;:::-;3053:2;3046:5;3042:14;3035:62;3157:2;3146:9;3142:18;3129:32;3124:2;3117:5;3113:14;3106:56;3222:2;3211:9;3207:18;3194:32;3189:2;3182:5;3178:14;3171:56;3288:3;3277:9;3273:19;3260:33;3254:3;3247:5;3243:15;3236:58;3355:3;3344:9;3340:19;3327:33;3321:3;3314:5;3310:15;3303:58;3422:3;3411:9;3407:19;3394:33;3388:3;3381:5;3377:15;3370:58;3489:3;3478:9;3474:19;3461:33;3455:3;3448:5;3444:15;3437:58;3514:3;3549:38;3583:2;3572:9;3568:18;3549:38;:::i;:::-;3533:14;;;3526:62;3607:3;3642:38;3661:18;;;3642:38;:::i;:::-;3626:14;;;3619:62;3700:3;3735:47;3778:3;3758:18;;;3735:47;:::i;:::-;3719:14;;;3712:71;3723:5;2803:986;-1:-1:-1;;2803:986:184:o;3794:718::-;3836:5;3889:3;3882:4;3874:6;3870:17;3866:27;3856:55;;3907:1;3904;3897:12;3856:55;3943:6;3930:20;3969:18;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:184;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4352:3;4345:4;4340:2;4332:6;4328:15;4324:26;4321:35;4318:55;;;4369:1;4366;4359:12;4318:55;4433:2;4426:4;4418:6;4414:17;4407:4;4399:6;4395:17;4382:54;4480:1;4473:4;4468:2;4460:6;4456:15;4452:26;4445:37;4500:6;4491:15;;;;;;3794:718;;;;:::o;4517:661::-;4655:6;4663;4671;4679;4687;4740:3;4728:9;4719:7;4715:23;4711:33;4708:53;;;4757:1;4754;4747:12;4708:53;4793:9;4780:23;4770:33;;4822:63;4877:7;4872:2;4861:9;4857:18;4822:63;:::i;:::-;4812:73;;4936:3;4925:9;4921:19;4908:33;4964:18;4956:6;4953:30;4950:50;;;4996:1;4993;4986:12;4950:50;5019:49;5060:7;5051:6;5040:9;5036:22;5019:49;:::i;:::-;4517:661;;;;-1:-1:-1;5009:59:184;;5115:3;5100:19;;5087:33;;-1:-1:-1;5167:3:184;5152:19;5139:33;;4517:661;-1:-1:-1;;;4517:661:184:o;5391:592::-;5520:6;5528;5536;5544;5597:3;5585:9;5576:7;5572:23;5568:33;5565:53;;;5614:1;5611;5604:12;5565:53;5650:9;5637:23;5627:33;;5679:63;5734:7;5729:2;5718:9;5714:18;5679:63;:::i;:::-;5669:73;;5793:3;5782:9;5778:19;5765:33;5821:18;5813:6;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:49;5917:7;5908:6;5897:9;5893:22;5876:49;:::i;:::-;5391:592;;;;-1:-1:-1;5866:59:184;;5972:3;5957:19;5944:33;;-1:-1:-1;;;5391:592:184:o;6250:1186::-;6484:13;;-1:-1:-1;;;;;675:31:184;663:44;;6452:3;6437:19;;6556:4;6548:6;6544:17;6538:24;6571:54;6619:4;6608:9;6604:20;6590:12;-1:-1:-1;;;;;675:31:184;663:44;;609:104;6571:54;;6681:4;6673:6;6669:17;6663:24;6656:4;6645:9;6641:20;6634:54;6744:4;6736:6;6732:17;6726:24;6719:4;6708:9;6704:20;6697:54;6807:4;6799:6;6795:17;6789:24;6782:4;6771:9;6767:20;6760:54;6870:4;6862:6;6858:17;6852:24;6845:4;6834:9;6830:20;6823:54;6933:4;6925:6;6921:17;6915:24;6908:4;6897:9;6893:20;6886:54;6996:4;6988:6;6984:17;6978:24;6971:4;6960:9;6956:20;6949:54;7022:6;7077:2;7069:6;7065:15;7059:22;7090:54;7140:2;7129:9;7125:18;7109:14;-1:-1:-1;;;;;675:31:184;663:44;;609:104;7090:54;-1:-1:-1;;7163:6:184;7206:15;;;7200:22;-1:-1:-1;;;;;675:31:184;7266:18;;;663:44;7304:6;7347:15;;;7341:22;6058:12;;7411:18;;;6046:25;6120:4;6109:16;;6103:23;6087:14;;;6080:47;6176:4;6165:16;;6159:23;6143:14;;;6136:47;6232:4;6221:16;;6215:23;6199:14;;;6192:47;7372:58;5988:257;7441:1035;7524:12;;-1:-1:-1;;;;;675:31:184;663:44;;7588:4;7581:5;7577:16;7571:23;7603:48;7645:4;7640:3;7636:14;7622:12;-1:-1:-1;;;;;675:31:184;663:44;;609:104;7603:48;;7700:4;7693:5;7689:16;7683:23;7676:4;7671:3;7667:14;7660:47;7756:4;7749:5;7745:16;7739:23;7732:4;7727:3;7723:14;7716:47;7812:4;7805:5;7801:16;7795:23;7788:4;7783:3;7779:14;7772:47;7868:4;7861:5;7857:16;7851:23;7844:4;7839:3;7835:14;7828:47;7924:4;7917:5;7913:16;7907:23;7900:4;7895:3;7891:14;7884:47;7980:4;7973:5;7969:16;7963:23;7956:4;7951:3;7947:14;7940:47;8006:6;8059:2;8052:5;8048:14;8042:21;8037:2;8032:3;8028:12;8021:43;;8083:6;8137:2;8130:5;8126:14;8120:21;8150:48;8194:2;8189:3;8185:12;8169:14;-1:-1:-1;;;;;675:31:184;663:44;;609:104;8150:48;-1:-1:-1;;8217:6:184;8260:14;;;8254:21;-1:-1:-1;;;;;675:31:184;8319:12;;;663:44;8351:6;8394:14;;;8388:21;6058:12;;8457;;;6046:25;;;;6120:4;6109:16;;6103:23;6087:14;;;6080:47;6176:4;6165:16;;6159:23;6143:14;;;6136:47;6232:4;6221:16;6215:23;6199:14;;;;6192:47;7441:1035::o;8481:422::-;8522:3;8560:5;8554:12;8587:6;8582:3;8575:19;8612:1;8622:162;8636:6;8633:1;8630:13;8622:162;;;8698:4;8754:13;;;8750:22;;8744:29;8726:11;;;8722:20;;8715:59;8651:12;8622:162;;;8626:3;8829:1;8822:4;8813:6;8808:3;8804:16;8800:27;8793:38;8892:4;8885:2;8881:7;8876:2;8868:6;8864:15;8860:29;8855:3;8851:39;8847:50;8840:57;;;8481:422;;;;:::o;8908:461::-;9130:4;9159:3;9171:47;9208:9;9200:6;9171:47;:::i;:::-;9255:2;9249:3;9238:9;9234:19;9227:31;9275:44;9315:2;9304:9;9300:18;9292:6;9275:44;:::i;:::-;9267:52;;;9356:6;9350:3;9339:9;9335:19;9328:35;8908:461;;;;;;:::o;9374:251::-;9444:6;9497:2;9485:9;9476:7;9472:23;9468:32;9465:52;;;9513:1;9510;9503:12;9465:52;9545:9;9539:16;9564:31;9589:5;9564:31;:::i;9630:904::-;9992:4;10021:3;10033:47;10070:9;10062:6;10033:47;:::i;:::-;10117:2;10111:3;10100:9;10096:19;10089:31;10137:44;10177:2;10166:9;10162:18;10154:6;10137:44;:::i;:::-;-1:-1:-1;;;;;10256:15:184;;;10250:3;10235:19;;10228:44;10309:15;;;10303:3;10288:19;;10281:44;-1:-1:-1;;10362:15:184;;;10356:3;10341:19;;10334:44;10415:15;;;10409:3;10394:19;;10387:44;10468:15;;;10462:3;10447:19;;10440:44;10515:3;10500:19;10493:35;;;;10129:52;9630:904;-1:-1:-1;;9630:904:184:o;10539:273::-;10607:6;10660:2;10648:9;10639:7;10635:23;10631:32;10628:52;;;10676:1;10673;10666:12;10628:52;10708:9;10702:16;10758:4;10751:5;10747:16;10740:5;10737:27;10727:55;;10778:1;10775;10768:12;10817:127;10878:10;10873:3;10869:20;10866:1;10859:31;10909:4;10906:1;10899:15;10933:4;10930:1;10923:15;10949:151;11039:4;11032:12;;;11018;;;11014:31;;11057:14;;11054:40;;;11074:18;;:::i;11105:422::-;11194:1;11237:5;11194:1;11251:270;11272:7;11262:8;11259:21;11251:270;;;11331:4;11327:1;11323:6;11319:17;11313:4;11310:27;11307:53;;;11340:18;;:::i;:::-;11390:7;11380:8;11376:22;11373:55;;;11410:16;;;;11373:55;11489:22;;;;11449:15;;;;11251:270;;;11255:3;11105:422;;;;;:::o;11532:806::-;11581:5;11611:8;11601:80;;-1:-1:-1;11652:1:184;11666:5;;11601:80;11700:4;11690:76;;-1:-1:-1;11737:1:184;11751:5;;11690:76;11782:4;11800:1;11795:59;;;;11868:1;11863:130;;;;11775:218;;11795:59;11825:1;11816:10;;11839:5;;;11863:130;11900:3;11890:8;11887:17;11884:43;;;11907:18;;:::i;:::-;-1:-1:-1;;11963:1:184;11949:16;;11978:5;;11775:218;;12077:2;12067:8;12064:16;12058:3;12052:4;12049:13;12045:36;12039:2;12029:8;12026:16;12021:2;12015:4;12012:12;12008:35;12005:77;12002:159;;;-1:-1:-1;12114:19:184;;;12146:5;;12002:159;12193:34;12218:8;12212:4;12193:34;:::i;:::-;12263:6;12259:1;12255:6;12251:19;12242:7;12239:32;12236:58;;;12274:18;;:::i;:::-;12312:20;;11532:806;-1:-1:-1;;;11532:806:184:o;12343:140::-;12401:5;12430:47;12471:4;12461:8;12457:19;12451:4;12430:47;:::i;12934:184::-;13004:6;13057:2;13045:9;13036:7;13032:23;13028:32;13025:52;;;13073:1;13070;13063:12;13025:52;-1:-1:-1;13096:16:184;;12934:184;-1:-1:-1;12934:184:184:o;13123:209::-;13155:1;13181;13171:132;;13225:10;13220:3;13216:20;13213:1;13206:31;13260:4;13257:1;13250:15;13288:4;13285:1;13278:15;13171:132;-1:-1:-1;13317:9:184;;13123:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "43": readonly [{
                readonly start: 455;
                readonly length: 32;
            }, {
                readonly start: 3070;
                readonly length: 32;
            }];
            readonly "46": readonly [{
                readonly start: 358;
                readonly length: 32;
            }, {
                readonly start: 903;
                readonly length: 32;
            }];
            readonly "49": readonly [{
                readonly start: 280;
                readonly length: 32;
            }, {
                readonly start: 1472;
                readonly length: 32;
            }];
            readonly "52": readonly [{
                readonly start: 397;
                readonly length: 32;
            }, {
                readonly start: 1752;
                readonly length: 32;
            }];
            readonly "55": readonly [{
                readonly start: 319;
                readonly length: 32;
            }, {
                readonly start: 2032;
                readonly length: 32;
            }];
            readonly "58": readonly [{
                readonly start: 241;
                readonly length: 32;
            }, {
                readonly start: 2312;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "c47e90c4";
        readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "7cc39092";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed ERC4626Hyperdrive Instance.\"}},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}}},\"title\":\"ERC4626HyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the ERC4626Hyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol\":\"ERC4626HyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xd66a53192300bd9ea8bec7161b75e261ec7602da46aa0335e58c73796ac9d8b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2f42ba33be4605580eaa2d1409b651751c898fe06d1ea256778e1c267d5f324e\",\"dweb:/ipfs/QmWL1Adbkk6xBzbGCdcJsLwR4e1AEMDKidzFKE6yo2AdSb\"]},\"contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xf20e89c4993eb416fb60fe01c1cb9e0b146cc127455d0ee53d3d18335d37c53d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a5ab887de0d4e2225be946beefba5e7633bc4775c1ecbcff6ec3c3ad4157e609\",\"dweb:/ipfs/QmSq5X3T3i62WLzzGyWzLN4Y9J68wTD2Jpt55xF7E2WCDH\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398\",\"dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD\"]},\"contracts/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3\",\"dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240\",\"dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1\",\"dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0xa2c8fb3fbe929450758642a88fe1076e64c480ca7583d5f10f9a916a4dfbb3fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://edd0a39abeedf46c20295fae53d7b41a21b6ca88dbf5a9ace0075cfb37ea2c1a\",\"dweb:/ipfs/QmedBMesHL8VfhThvdzCTMFwZA1TATz8K2R1VhHsM2CtfK\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x07b5c27304387f7fc0ca70e0e93dd233810b50536b902eade119d7166a90a13e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0ca7fb16084139214fc7ac866cc0222ef2958b895298a944c442bdb99fcb2f65\",\"dweb:/ipfs/QmX44bxd2c82k32Z4fgnv2kJHZBVqVqwuFhUvrUsgBZ8Vc\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f\",\"dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477\",\"dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0xd8d3188dd4ceaa7510a658880ac3e6b90d030b1611f87a3911e876d7638d9dc7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d2f1dca6f5ace4e89ce0e78fd26cdc0dd52ed1216a08e66cfc57e832571cfdb7\",\"dweb:/ipfs/QmeHqkzAnLZSCLtWY4rqdcJMrsraZ66kMBvygojsVQZe8U\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3\",\"dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3\",\"dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd\",\"dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb\",\"dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d\",\"dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed ERC4626Hyperdrive Instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol": "ERC4626HyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xd66a53192300bd9ea8bec7161b75e261ec7602da46aa0335e58c73796ac9d8b3";
                readonly urls: readonly ["bzz-raw://2f42ba33be4605580eaa2d1409b651751c898fe06d1ea256778e1c267d5f324e", "dweb:/ipfs/QmWL1Adbkk6xBzbGCdcJsLwR4e1AEMDKidzFKE6yo2AdSb"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xf20e89c4993eb416fb60fe01c1cb9e0b146cc127455d0ee53d3d18335d37c53d";
                readonly urls: readonly ["bzz-raw://a5ab887de0d4e2225be946beefba5e7633bc4775c1ecbcff6ec3c3ad4157e609", "dweb:/ipfs/QmSq5X3T3i62WLzzGyWzLN4Y9J68wTD2Jpt55xF7E2WCDH"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3";
                readonly urls: readonly ["bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398", "dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC4626.sol": {
                readonly keccak256: "0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e";
                readonly urls: readonly ["bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3", "dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP"];
                readonly license: "GPL-2.0-or-later";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16";
                readonly urls: readonly ["bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240", "dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97";
                readonly urls: readonly ["bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1", "dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0xa2c8fb3fbe929450758642a88fe1076e64c480ca7583d5f10f9a916a4dfbb3fb";
                readonly urls: readonly ["bzz-raw://edd0a39abeedf46c20295fae53d7b41a21b6ca88dbf5a9ace0075cfb37ea2c1a", "dweb:/ipfs/QmedBMesHL8VfhThvdzCTMFwZA1TATz8K2R1VhHsM2CtfK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x07b5c27304387f7fc0ca70e0e93dd233810b50536b902eade119d7166a90a13e";
                readonly urls: readonly ["bzz-raw://0ca7fb16084139214fc7ac866cc0222ef2958b895298a944c442bdb99fcb2f65", "dweb:/ipfs/QmX44bxd2c82k32Z4fgnv2kJHZBVqVqwuFhUvrUsgBZ8Vc"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd";
                readonly urls: readonly ["bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f", "dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597";
                readonly urls: readonly ["bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477", "dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0xd8d3188dd4ceaa7510a658880ac3e6b90d030b1611f87a3911e876d7638d9dc7";
                readonly urls: readonly ["bzz-raw://d2f1dca6f5ace4e89ce0e78fd26cdc0dd52ed1216a08e66cfc57e832571cfdb7", "dweb:/ipfs/QmeHqkzAnLZSCLtWY4rqdcJMrsraZ66kMBvygojsVQZe8U"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a";
                readonly urls: readonly ["bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3", "dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002";
                readonly urls: readonly ["bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3", "dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191";
                readonly urls: readonly ["bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd", "dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868";
                readonly urls: readonly ["bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb", "dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf";
                readonly urls: readonly ["bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d", "dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol";
        readonly id: 1081;
        readonly exportedSymbols: {
            readonly ERC4626HyperdriveDeployerCoordinator: readonly [1080];
            readonly HyperdriveDeployerCoordinator: readonly [890];
            readonly IERC4626: readonly [7013];
            readonly IHyperdrive: readonly [7411];
            readonly IHyperdriveDeployerCoordinator: readonly [7673];
            readonly ONE: readonly [13529];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:3558:2";
        readonly nodes: readonly [{
            readonly id: 960;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:2";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 962;
            readonly nodeType: "ImportDirective";
            readonly src: "64:57:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IERC4626.sol";
            readonly file: "../../interfaces/IERC4626.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1081;
            readonly sourceUnit: 7014;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 961;
                    readonly name: "IERC4626";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7013;
                    readonly src: "73:8:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 964;
            readonly nodeType: "ImportDirective";
            readonly src: "122:63:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1081;
            readonly sourceUnit: 7412;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 963;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7411;
                    readonly src: "131:11:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 966;
            readonly nodeType: "ImportDirective";
            readonly src: "186:101:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1081;
            readonly sourceUnit: 7674;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 965;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7673;
                    readonly src: "195:30:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 968;
            readonly nodeType: "ImportDirective";
            readonly src: "288:57:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1081;
            readonly sourceUnit: 14295;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 967;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 13529;
                    readonly src: "297:3:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 970;
            readonly nodeType: "ImportDirective";
            readonly src: "346:85:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1081;
            readonly sourceUnit: 891;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 969;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 890;
                    readonly src: "355:29:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1080;
            readonly nodeType: "ContractDefinition";
            readonly src: "801:2795:2";
            readonly nodes: readonly [{
                readonly id: 998;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1259:450:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 997;
                    readonly nodeType: "Block";
                    readonly src: "1707:2:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [];
                };
                readonly documentation: {
                    readonly id: 974;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "886:368:2";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 989;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 976;
                        readonly src: "1529:13:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 990;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 978;
                        readonly src: "1556:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 991;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 980;
                        readonly src: "1586:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 992;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 982;
                        readonly src: "1616:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 993;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 984;
                        readonly src: "1646:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 994;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 986;
                        readonly src: "1676:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 995;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 988;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1486:29:2"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 890;
                        readonly src: "1486:29:2";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1486:216:2";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 987;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 976;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1288:13:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1280:21:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 975;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1280:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 978;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1319:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1311:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 977;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1311:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 980;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1353:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1345:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 979;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1345:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 982;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1387:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1379:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 981;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1379:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 984;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1421:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1413:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 983;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1413:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 986;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1455:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 998;
                        readonly src: "1447:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 985;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1447:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1270:207:2";
                };
                readonly returnParameters: {
                    readonly id: 996;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1707:0:2";
                };
                readonly scope: 1080;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 1051;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1867:1220:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1050;
                    readonly nodeType: "Block";
                    readonly src: "1981:1106:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1009;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1002;
                                readonly src: "2053:13:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 1006;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "2030:5:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_ERC4626HyperdriveDeployerCoordinator_$1080_$";
                                        readonly typeString: "type(contract super ERC4626HyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 1008;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2036:16:2";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 793;
                                readonly src: "2030:22:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 1010;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2030:37:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 1011;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2030:37:2";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1023;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1012;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1002;
                                    readonly src: "2362:13:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1013;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2376:20:2";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7153;
                                readonly src: "2362:34:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 1022;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly hexValue: "3130";
                                    readonly id: 1014;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "2411:2:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_10_by_1";
                                        readonly typeString: "int_const 10";
                                    };
                                    readonly value: "10";
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "**";
                                readonly rightExpression: {
                                    readonly components: readonly [{
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                        readonly id: 1020;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 1015;
                                                        readonly name: "_deployConfig";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 1002;
                                                        readonly src: "2418:13:2";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 1016;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2432:9:2";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7144;
                                                    readonly src: "2418:23:2";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                };
                                                readonly id: 1017;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "2442:8:2";
                                                readonly memberName: "decimals";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 6689;
                                                readonly src: "2418:32:2";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_uint8_$";
                                                    readonly typeString: "function () view external returns (uint8)";
                                                };
                                            };
                                            readonly id: 1018;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "2418:34:2";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint8";
                                                readonly typeString: "uint8";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly hexValue: "34";
                                            readonly id: 1019;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "2455:1:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_4_by_1";
                                                readonly typeString: "int_const 4";
                                            };
                                            readonly value: "4";
                                        };
                                        readonly src: "2418:38:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                    }];
                                    readonly id: 1021;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "2417:40:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint8";
                                        readonly typeString: "uint8";
                                    };
                                };
                                readonly src: "2411:46:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "2362:95:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1030;
                        readonly nodeType: "IfStatement";
                        readonly src: "2345:215:2";
                        readonly trueBody: {
                            readonly id: 1029;
                            readonly nodeType: "Block";
                            readonly src: "2468:92:2";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1024;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7673;
                                            readonly src: "2489:30:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7673_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1026;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2520:27:2";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7623;
                                        readonly src: "2489:58:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1027;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2489:60:2";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1028;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2482:67:2";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1042;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1031;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1002;
                                    readonly src: "2862:13:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1032;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2876:20:2";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7153;
                                readonly src: "2862:34:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 1041;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly hexValue: "3130";
                                    readonly id: 1033;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "2911:2:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_10_by_1";
                                        readonly typeString: "int_const 10";
                                    };
                                    readonly value: "10";
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "**";
                                readonly rightExpression: {
                                    readonly components: readonly [{
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                        readonly id: 1039;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 1034;
                                                        readonly name: "_deployConfig";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 1002;
                                                        readonly src: "2918:13:2";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 1035;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2932:9:2";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7144;
                                                    readonly src: "2918:23:2";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                };
                                                readonly id: 1036;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "2942:8:2";
                                                readonly memberName: "decimals";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 6689;
                                                readonly src: "2918:32:2";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_uint8_$";
                                                    readonly typeString: "function () view external returns (uint8)";
                                                };
                                            };
                                            readonly id: 1037;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "2918:34:2";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint8";
                                                readonly typeString: "uint8";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly hexValue: "34";
                                            readonly id: 1038;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "2955:1:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_4_by_1";
                                                readonly typeString: "int_const 4";
                                            };
                                            readonly value: "4";
                                        };
                                        readonly src: "2918:38:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                    }];
                                    readonly id: 1040;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "2917:40:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint8";
                                        readonly typeString: "uint8";
                                    };
                                };
                                readonly src: "2911:46:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "2862:95:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1049;
                        readonly nodeType: "IfStatement";
                        readonly src: "2845:236:2";
                        readonly trueBody: {
                            readonly id: 1048;
                            readonly nodeType: "Block";
                            readonly src: "2968:113:2";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1043;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7673;
                                            readonly src: "2989:30:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7673_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1045;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3037:31:2";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7626;
                                        readonly src: "2989:79:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1046;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2989:81:2";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1047;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2982:88:2";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [793];
                readonly documentation: {
                    readonly id: 999;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1715:147:2";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "1876:16:2";
                readonly overrides: {
                    readonly id: 1004;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "1972:8:2";
                };
                readonly parameters: {
                    readonly id: 1003;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1002;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "1938:13:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1051;
                        readonly src: "1902:49:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 1001;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1000;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["1902:11:2", "1914:16:2"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7176;
                                readonly src: "1902:28:2";
                            };
                            readonly referencedDeclaration: 7176;
                            readonly src: "1902:28:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1892:65:2";
                };
                readonly returnParameters: {
                    readonly id: 1005;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1981:0:2";
                };
                readonly scope: 1080;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1079;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3307:287:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1078;
                    readonly nodeType: "Block";
                    readonly src: "3423:171:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [1062];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 1062;
                            readonly mutability: "mutable";
                            readonly name: "vault";
                            readonly nameLocation: "3493:5:2";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 1078;
                            readonly src: "3484:14:2";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC4626_$7013";
                                readonly typeString: "contract IERC4626";
                            };
                            readonly typeName: {
                                readonly id: 1061;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 1060;
                                    readonly name: "IERC4626";
                                    readonly nameLocations: readonly ["3484:8:2"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 7013;
                                    readonly src: "3484:8:2";
                                };
                                readonly referencedDeclaration: 7013;
                                readonly src: "3484:8:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IERC4626_$7013";
                                    readonly typeString: "contract IERC4626";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 1072;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 1066;
                                    readonly name: "_extraData";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1054;
                                    readonly src: "3521:10:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }, {
                                    readonly components: readonly [{
                                        readonly id: 1068;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "3534:7:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 1067;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "3534:7:2";
                                            readonly typeDescriptions: {};
                                        };
                                    }];
                                    readonly id: 1069;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "3533:9:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }, {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    }];
                                    readonly expression: {
                                        readonly id: 1064;
                                        readonly name: "abi";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: -1;
                                        readonly src: "3510:3:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_magic_abi";
                                            readonly typeString: "abi";
                                        };
                                    };
                                    readonly id: 1065;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "3514:6:2";
                                    readonly memberName: "decode";
                                    readonly nodeType: "MemberAccess";
                                    readonly src: "3510:10:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_abidecode_pure$__$returns$__$";
                                        readonly typeString: "function () pure";
                                    };
                                };
                                readonly id: 1070;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3510:33:2";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address_payable";
                                    readonly typeString: "address payable";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address_payable";
                                    readonly typeString: "address payable";
                                }];
                                readonly id: 1063;
                                readonly name: "IERC4626";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7013;
                                readonly src: "3501:8:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_type$_t_contract$_IERC4626_$7013_$";
                                    readonly typeString: "type(contract IERC4626)";
                                };
                            };
                            readonly id: 1071;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "typeConversion";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3501:43:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC4626_$7013";
                                readonly typeString: "contract IERC4626";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "3484:60:2";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1075;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 13529;
                                readonly src: "3583:3:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1073;
                                    readonly name: "vault";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1062;
                                    readonly src: "3561:5:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC4626_$7013";
                                        readonly typeString: "contract IERC4626";
                                    };
                                };
                                readonly id: 1074;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3567:15:2";
                                readonly memberName: "convertToAssets";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 6948;
                                readonly src: "3561:21:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 1076;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3561:26:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 1059;
                        readonly id: 1077;
                        readonly nodeType: "Return";
                        readonly src: "3554:33:2";
                    }];
                };
                readonly baseFunctions: readonly [801];
                readonly documentation: {
                    readonly id: 1052;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3093:209:2";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @param _extraData The extra data passed to the child deployers.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "3316:26:2";
                readonly overrides: {
                    readonly id: 1056;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3396:8:2";
                };
                readonly parameters: {
                    readonly id: 1055;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1054;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "3365:10:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1079;
                        readonly src: "3352:23:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 1053;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3352:5:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3342:39:2";
                };
                readonly returnParameters: {
                    readonly id: 1059;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1058;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1079;
                        readonly src: "3414:7:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1057;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3414:7:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3413:9:2";
                };
                readonly scope: 1080;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 972;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["850:29:2"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 890;
                    readonly src: "850:29:2";
                };
                readonly id: 973;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "850:29:2";
            }];
            readonly canonicalName: "ERC4626HyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 971;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "433:368:2";
                readonly text: "@author DELV\n @title ERC4626HyperdriveDeployerCoordinator\n @notice The deployer coordinator for the ERC4626Hyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [1080, 890, 7673];
            readonly name: "ERC4626HyperdriveDeployerCoordinator";
            readonly nameLocation: "810:36:2";
            readonly scope: 1081;
            readonly usedErrors: readonly [7605, 7608, 7611, 7614, 7617, 7620, 7623, 7626, 7629, 7632, 7635, 7638, 7641];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 2;
};
//# sourceMappingURL=ERC4626HyperdriveDeployerCoordinator.d.ts.map