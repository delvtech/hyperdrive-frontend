export declare const ERC4626HyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_deployer";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x6101406040523480156200001257600080fd5b5060405162001ac038038062001ac0833981016040819052620000359162000082565b6001600160a01b0395861660805293851660a05291841660c052831660e052821661010052166101205262000103565b80516001600160a01b03811681146200007d57600080fd5b919050565b60008060008060008060c087890312156200009c57600080fd5b620000a78762000065565b9550620000b76020880162000065565b9450620000c76040880162000065565b9350620000d76060880162000065565b9250620000e76080880162000065565b9150620000f760a0880162000065565b90509295509295509295565b60805160a05160c05160e05161010051610120516119446200017c6000396000818160f1015261092601526000818161013f015261080e01526000818161018d01526106f601526000818161011801526105de01526000818161016601526103910152600081816101c70152610bfa01526119446000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063aa8cd6c411610066578063aa8cd6c41461013a578063ab71905f14610161578063b6cb111814610188578063c47e90c4146101af578063c83e1f51146101c257600080fd5b806320503b3f146100985780637cc39092146100c1578063966ecd1c146100ec578063a085fa3014610113575b600080fd5b6100ab6100a6366004611190565b6101e9565b6040516100b891906111bc565b60405180910390f35b6100d46100cf36600461141e565b6102cd565b6040516001600160a01b0390911681526020016100b8565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6100d46101bd36600461148c565b610a02565b6100d47f000000000000000000000000000000000000000000000000000000000000000081565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810191909152506001600160a01b03808316600090815260208181526040808320858452825291829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154831660608201526004820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e08201526008909101549091166101008201525b92915050565b60008260000361048557336000908152602081815260408083208984529091529020541561030e57604051633be1b34d60e11b815260040160405180910390fd5b61031785610d34565b600061032285610e82565b905060008660405160200161033791906114ef565b604051602081830303815290604052805190602001209050600086805190602001209050600061036689610f13565b6060808201869052604080513360208201529081018d90529081018890529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322f84e0e9083908b90608001604051602081830303815290604052805190602001206040518463ffffffff1660e01b81526004016103f3939291906116d6565b6020604051808303816000875af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061170a565b336000908152602081815260408083208e84529091529020938455600184019290925550600282019290925560040180546001600160a01b0319166001600160a01b03831617905590506109f9565b33600090815260208181526040808320898452909152902054806104bc5760405163398b1c0960e21b815260040160405180910390fd5b80866040516020016104ce91906114ef565b60405160208183030381529060405280519060200120146105025760405163332ee11f60e01b815260040160405180910390fd5b336000908152602081815260408083208a84528252909120600101548651918701919091201461054557604051631a3272d160e31b815260040160405180910390fd5b61054e86610d34565b600061055987610f13565b336000908152602081815260408083208c845290915290206002015460608201529050600185900361069557336000908152602081815260408083208b84529091529020600501546001600160a01b0316156105c75760405162e896af60e31b815260040160405180910390fd5b60405163117c270760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322f84e0e906106179084908a9089906004016116d6565b6020604051808303816000875af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a919061170a565b336000908152602081815260408083208c8452909152902060050180546001600160a01b0319166001600160a01b03831617905592506109f6565b846002036107ad57336000908152602081815260408083208b84529091529020600601546001600160a01b0316156106df5760405162e896af60e31b815260040160405180910390fd5b60405163117c270760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322f84e0e9061072f9084908a9089906004016116d6565b6020604051808303816000875af115801561074e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610772919061170a565b336000908152602081815260408083208c8452909152902060060180546001600160a01b0319166001600160a01b03831617905592506109f6565b846003036108c557336000908152602081815260408083208b84529091529020600701546001600160a01b0316156107f75760405162e896af60e31b815260040160405180910390fd5b60405163117c270760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322f84e0e906108479084908a9089906004016116d6565b6020604051808303816000875af1158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a919061170a565b336000908152602081815260408083208c8452909152902060070180546001600160a01b0319166001600160a01b03831617905592506109f6565b846004036109dd57336000908152602081815260408083208b84529091529020600801546001600160a01b03161561090f5760405162e896af60e31b815260040160405180910390fd5b60405163117c270760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322f84e0e9061095f9084908a9089906004016116d6565b6020604051808303816000875af115801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a2919061170a565b336000908152602081815260408083208c8452909152902060080180546001600160a01b0319166001600160a01b03831617905592506109f6565b604051631d9f815960e11b815260040160405180910390fd5b50505b95945050505050565b3360009081526020818152604080832087845282528083208151610120810183528154815260018201549381019390935260028101549183019190915260038101546001600160a01b03908116606084018190526004830154821660808501526005830154821660a08501526006830154821660c08501526007830154821660e08501526008909201541661010083015215610ab157604051632c95caeb60e01b815260040160405180910390fd5b8051610ad05760405163398b1c0960e21b815260040160405180910390fd5b60808101516001600160a01b03161580610af5575060a08101516001600160a01b0316155b80610b0b575060c08101516001600160a01b0316155b80610b21575060e08101516001600160a01b0316155b80610b3857506101008101516001600160a01b0316155b15610b565760405163e97cc2bf60e01b815260040160405180910390fd5b8051604051610b699087906020016114ef565b6040516020818303038152906040528051906020012014610b9d5760405163332ee11f60e01b815260040160405180910390fd5b8060200151848051906020012014610bc857604051631a3272d160e31b815260040160405180910390fd5b610bd185610d34565b6000610bdc86610f13565b905081604001518160600181815250506000879050600085905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c65a1cb858a88608001518960a001518a60c001518b60e001518c6101000151338c8c604051602001610c74939291906001600160a01b039390931683526020830191909152604082015260600190565b604051602081830303815290604052805190602001206040518963ffffffff1660e01b8152600401610cad989796959493929190611727565b6020604051808303816000875af1158015610ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf0919061170a565b336000908152602081815260408083209d83529c90529a909a2060030180546001600160a01b0319166001600160a01b038c16179055509798975050505050505050565b610d3d81610fa9565b600481600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da5919061178e565b610daf91906117c7565b610dba90600a6118c4565b81606001511015610dde576040516349db44f560e01b815260040160405180910390fd5b600481600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e46919061178e565b610e5091906117c7565b610e5b90600a6118c4565b81608001511015610e7f576040516318c9522360e11b815260040160405180910390fd5b50565b60008082806020019051810190610e99919061170a565b6040516303d1689d60e11b8152670de0b6b3a764000060048201529091506001600160a01b038216906307a2d13a90602401602060405180830381865afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c91906118d3565b9392505050565b610f1b6110bb565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606083015160808084019190915283015160a08084019190915283015160c08084019190915283015160e0808401919091528301516101008084019190915283015181166101208084019190915283015116610140808301919091529091015161016082015290565b6103e881606001511015610fd0576040516349db44f560e01b815260040160405180910390fd5b8060c00151600003610ff557604051635428734d60e01b815260040160405180910390fd5b8060c001518160a00151108061101d57508060c001518160a0015161101a91906118ec565b15155b1561103b5760405163253fffcf60e11b815260040160405180910390fd5b61014081015151670de0b6b3a764000010806110675750670de0b6b3a764000081610140015160200151115b806110825750670de0b6b3a764000081610140015160400151115b8061109d5750670de0b6b3a764000081610140015160600151115b15610e7f576040516322f72cc360e11b815260040160405180910390fd5b60405180610180016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016111666040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b6001600160a01b0381168114610e7f57600080fd5b803561118b8161116b565b919050565b600080604083850312156111a357600080fd5b82356111ae8161116b565b946020939093013593505050565b8151815260208083015190820152604080830151908201526060808301516001600160a01b039081169183019190915260808084015182169083015260a08084015182169083015260c08084015182169083015260e08084015182169083015261010080840151918216818401526101208301915b505092915050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561127357611273611239565b60405290565b60006080828403121561128b57600080fd5b6040516080810181811067ffffffffffffffff821117156112ae576112ae611239565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006101c082840312156112f257600080fd5b6112fa61124f565b905061130582611180565b815261131360208301611180565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100611362818401611180565b90820152610120611374838201611180565b9082015261014061138784848301611279565b9082015292915050565b600082601f8301126113a257600080fd5b813567ffffffffffffffff808211156113bd576113bd611239565b604051601f8301601f19908116603f011681019082821181831017156113e5576113e5611239565b816040528381528660208588010111156113fe57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000610240868803121561143757600080fd5b8535945061144887602088016112df565b93506101e086013567ffffffffffffffff81111561146557600080fd5b61147188828901611391565b95989497509495610200810135955061022001359392505050565b60008060008061022085870312156114a357600080fd5b843593506114b486602087016112df565b92506101e085013567ffffffffffffffff8111156114d157600080fd5b6114dd87828801611391565b94979396509394610200013593505050565b81516001600160a01b031681526101c08101602083015161151b60208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151611573828501826001600160a01b03169052565b5050610120838101516001600160a01b031690830152610140808401518051828501526020810151610160850152604081015161018085015260608101516101a0850152611231565b80516001600160a01b0316825260208101516115e360208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151611647828501826001600160a01b03169052565b5050610140818101516001600160a01b03169083015261016090810151805191830191909152602081015161018083015260408101516101a0830152606001516101c090910152565b6000815180845260005b818110156116b65760208185018101518683018201520161169a565b506000602082860101526020601f19601f83011685010191505092915050565b60006102206116e583876115bc565b806101e08401526116f881840186611690565b91505082610200830152949350505050565b60006020828403121561171c57600080fd5b8151610f0c8161116b565b60006102c0611736838c6115bc565b806101e08401526117498184018b611690565b6001600160a01b03998a1661020085015297891661022084015250509386166102408501529185166102608401529093166102808201526102a0019190915292915050565b6000602082840312156117a057600080fd5b815160ff81168114610f0c57600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156102c7576102c76117b1565b600181815b8085111561181b578160001904821115611801576118016117b1565b8085161561180e57918102915b93841c93908002906117e5565b509250929050565b600082611832575060016102c7565b8161183f575060006102c7565b8160018114611855576002811461185f5761187b565b60019150506102c7565b60ff841115611870576118706117b1565b50506001821b6102c7565b5060208310610133831016604e8410600b841016171561189e575081810a6102c7565b6118a883836117e0565b80600019048211156118bc576118bc6117b1565b029392505050565b6000610f0c60ff841683611823565b6000602082840312156118e557600080fd5b5051919050565b60008261190957634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122086f2dedcab8dc01ee118c0e84e219a500cf2dc7dd7dcec57941da5c0361321d664736f6c63430008140033";
        readonly sourceMap: "801:2799:2:-:0;;;1259:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3753:28:0;;;;;3791:34;;;;;3835;;;;;3879;;;;3923;;;;3967;;;801:2799:2;;14:177:182;93:13;;-1:-1:-1;;;;;135:31:182;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;:::-;801:2799:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "801:2799:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:189:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8078:6076;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5347:32:182;;;5329:51;;5317:2;5302:18;8078:6076:0;5183:203:182;3007:40:0;;;;;2626;;;;;2880;;;;;2499;;;;;2753;;;;;4439:3006;;;;;;:::i;:::-;;:::i;2375:37::-;;;;;14360:189;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14504:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;14497:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:189;;;;;:::o;8078:6076::-;8300:14;8571:12;8587:1;8571:17;8567:1981;;8781:10;8830:1;8768:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8747:196;;8872:56;;-1:-1:-1;;;8872:56:0;;;;;;;;;;;8747:196;9077:31;9094:13;9077:16;:31::i;:::-;9226:25;9254:38;9281:10;9254:26;:38::i;:::-;9226:66;;9306:19;9349:13;9338:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9328:36;;;;;;9306:58;;9378:21;9412:10;9402:21;;;;;;9378:45;;9554:37;9594:60;9627:13;9594:15;:60::i;:::-;9668:30;;;;:50;;;10056:44;;;10067:10;10056:44;;;7643:51:182;7710:18;;;7703:34;;;7753:18;;;7746:34;;;9554:100:0;;-1:-1:-1;;;;;;9812:15:0;9786:49;;;;9554:100;;9878:10;;7616:18:182;;10056:44:0;;;;;;;;;;;;10046:55;;;;;;9786:329;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10180:10;10167:12;:24;;;;;;;;;;;:39;;;;;;;;:64;;;10245:70;;;:86;;;;-1:-1:-1;10345:74:0;;;:94;;;;10453:47;;:56;;-1:-1:-1;;;;;;10453:56:0;-1:-1:-1;;;;;10453:56:0;;;;;:39;-1:-1:-1;10524:13:0;;8567:1981;10727:10;10693:18;10714:24;;;;;;;;;;;:39;;;;;;;;:50;;10774:117;;10825:55;;-1:-1:-1;;;10825:55:0;;;;;;;;;;;10774:117;11013:10;10994:13;10983:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10973:36;;;;;;:50;10969:137;;11046:49;;-1:-1:-1;;;11046:49:0;;;;;;;;;;;10969:137;11259:10;11246:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;11209:21;;;;;;;;;:90;11192:202;;11331:52;;-1:-1:-1;;;11331:52:0;;;;;;;;;;;11192:202;11670:31;11687:13;11670:16;:31::i;:::-;11820:36;11859:30;11875:13;11859:15;:30::i;:::-;11944:10;11931:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11899:29;;;:102;11820:69;-1:-1:-1;12281:1:0;12265:17;;;12261:1863;;12315:10;12361:1;12302:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12302:47:0;:61;12298:161;;12390:54;;-1:-1:-1;;;12390:54:0;;;;;;;;;;;12298:161;12481:138;;-1:-1:-1;;;12481:138:0;;-1:-1:-1;;;;;12507:15:0;12481:49;;;;:138;;12548:6;;12572:10;;12600:5;;12481:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12646:10;12633:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12633:56:0;-1:-1:-1;;;;;12633:56:0;;;;;;-1:-1:-1;12261:1863:0;;;12710:12;12726:1;12710:17;12706:1418;;12760:10;12806:1;12747:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12747:47:0;:61;12743:161;;12835:54;;-1:-1:-1;;;12835:54:0;;;;;;;;;;;12743:161;12926:138;;-1:-1:-1;;;12926:138:0;;-1:-1:-1;;;;;12952:15:0;12926:49;;;;:138;;12993:6;;13017:10;;13045:5;;12926:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13091:10;13078:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13078:56:0;-1:-1:-1;;;;;13078:56:0;;;;;;-1:-1:-1;12706:1418:0;;;13155:12;13171:1;13155:17;13151:973;;13205:10;13251:1;13192:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13192:47:0;:61;13188:161;;13280:54;;-1:-1:-1;;;13280:54:0;;;;;;;;;;;13188:161;13371:138;;-1:-1:-1;;;13371:138:0;;-1:-1:-1;;;;;13397:15:0;13371:49;;;;:138;;13438:6;;13462:10;;13490:5;;13371:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13536:10;13523:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13523:56:0;-1:-1:-1;;;;;13523:56:0;;;;;;-1:-1:-1;13151:973:0;;;13600:12;13616:1;13600:17;13596:528;;13650:10;13696:1;13637:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13637:47:0;:61;13633:161;;13725:54;;-1:-1:-1;;;13725:54:0;;;;;;;;;;;13633:161;13816:138;;-1:-1:-1;;;13816:138:0;;-1:-1:-1;;;;;13842:15:0;13816:49;;;;:138;;13883:6;;13907:10;;13935:5;;13816:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13981:10;13968:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13968:56:0;-1:-1:-1;;;;;13968:56:0;;;;;;-1:-1:-1;13596:528:0;;;14062:51;;-1:-1:-1;;;14062:51:0;;;;;;;;;;;13596:528;14134:13;;8078:6076;;;;;;;;:::o;4439:3006::-;4768:10;4625:7;4755:24;;;;;;;;;;;:39;;;;;;;;4724:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4724:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4808:35;4804:131;;4866:58;;-1:-1:-1;;;4866:58:0;;;;;;;;;;;4804:131;5084:21;;5080:128;;5142:55;;-1:-1:-1;;;5142:55:0;;;;;;;;;;;5080:128;5297:18;;;;-1:-1:-1;;;;;5297:32:0;;;:80;;-1:-1:-1;5345:18:0;;;;-1:-1:-1;;;;;5345:32:0;;5297:80;:128;;;-1:-1:-1;5393:18:0;;;;-1:-1:-1;;;;;5393:32:0;;5297:128;:176;;;-1:-1:-1;5441:18:0;;;;-1:-1:-1;;;;;5441:32:0;;5297:176;:224;;;-1:-1:-1;5489:18:0;;;;-1:-1:-1;;;;;5489:32:0;;5297:224;5280:337;;;5553:53;;-1:-1:-1;;;5553:53:0;;;;;;;;;;;5280:337;5739:21;;5709:25;;;;5720:13;;5709:25;;;:::i;:::-;;;;;;;;;;;;;5699:36;;;;;;:61;5695:148;;5783:49;;-1:-1:-1;;;5783:49:0;;;;;;;;;;;5695:148;5958:10;:24;;;5943:10;5933:21;;;;;;:49;5929:139;;6005:52;;-1:-1:-1;;;6005:52:0;;;;;;;;;;;5929:139;6344:31;6361:13;6344:16;:31::i;:::-;6494:36;6533:30;6549:13;6533:15;:30::i;:::-;6494:69;;6605:10;:28;;;6573:6;:29;;:60;;;;;6723:20;6746:13;6723:36;;6799:12;6814:5;6799:20;;6859:18;6904:12;-1:-1:-1;;;;;6880:44:0;;6938:6;6958:10;6982;:18;;;7014:10;:18;;;7046:10;:18;;;7078:10;:18;;;7110:10;:18;;;7295:10;7307:12;7321:4;7284:42;;;;;;;;;-1:-1:-1;;;;;7661:32:182;;;;7643:51;;7725:2;7710:18;;7703:34;;;;7768:2;7753:18;;7746:34;7631:2;7616:18;;7441:345;7284:42:0;;;;;;;;;;;;;7274:53;;;;;;6880:457;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7360:10;7347:12;:24;;;;;;;;;;;:39;;;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;7347:63:0;-1:-1:-1;;;;;7347:63:0;;;;;-1:-1:-1;7347:63:0;;4439:3006;-1:-1:-1;;;;;;;;4439:3006:0:o;1867:1224:2:-;2030:37;2053:13;2030:22;:37::i;:::-;2455:1;2418:13;:23;;;-1:-1:-1;;;;;2418:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;2411:46;;:2;:46;:::i;:::-;2362:13;:34;;;:95;2345:215;;;2489:60;;-1:-1:-1;;;2489:60:2;;;;;;;;;;;2345:215;2959:1;2922:13;:23;;;-1:-1:-1;;;;;2922:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;2915:46;;:2;:46;:::i;:::-;2862:13;:38;;;:99;2845:240;;;2993:81;;-1:-1:-1;;;2993:81:2;;;;;;;;;;;2845:240;1867:1224;:::o;3311:287::-;3418:7;3488:14;3525:10;3514:33;;;;;;;;;;;;:::i;:::-;3565:26;;-1:-1:-1;;;3565:26:2;;193:4:74;3565:26:2;;;13248:25:182;3488:60:2;;-1:-1:-1;;;;;;3565:21:2;;;;;13221:18:182;;3565:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3558:33;3311:287;-1:-1:-1;;;3311:287:2:o;16446:926:0:-;16559:37;;:::i;:::-;16695:23;;-1:-1:-1;;;;;16675:43:0;;;;;16752:27;;;;;16728:51;;:21;;;:51;16814:28;;;;;16789:22;;;:53;16883:34;;;;16852:28;;;;:65;;;;16962:51;;;16927:32;;;;:86;;;;17050:30;;;17023:24;;;;:57;;;;17119:32;;;17090:26;;;;:61;;;;17183:25;;;17161:19;;;;:47;;;;17239:24;;;17218:45;;:18;;;;:45;;;;17296:26;;;17273:49;:20;;;;:49;;;;17347:18;;;;17332:12;;;:33;16675:7;16446:926::o;14704:1191::-;15005:3;14968:13;:34;;;:40;14964:138;;;15031:60;;-1:-1:-1;;;15031:60:0;;;;;;;;;;;14964:138;15116:13;:32;;;15152:1;15116:37;15112:133;;15176:58;;-1:-1:-1;;;15176:58:0;;;;;;;;;;;15112:133;15304:13;:32;;;15271:13;:30;;;:65;:163;;;;15385:13;:32;;;15352:13;:30;;;:65;;;;:::i;:::-;:82;;15271:163;15254:279;;;15466:56;;-1:-1:-1;;;15466:56:0;;;;;;;;;;;15254:279;15611:18;;;;:24;193:4:74;-1:-1:-1;15611:30:0;:75;;;193:4:74;15657:13:0;:18;;;:23;;;:29;15611:75;:128;;;;193:4:74;15702:13:0;:18;;;:31;;;:37;15611:128;:185;;;;193:4:74;15755:13:0;:18;;;:35;;;:41;15611:185;15594:295;;;15828:50;;-1:-1:-1;;;15828:50:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:182:-;-1:-1:-1;;;;;89:31:182;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:182:o;718:1087::-;935:13;;917:32;;1005:4;993:17;;;987:24;965:20;;;958:54;1068:4;1056:17;;;1050:24;1028:20;;;1021:54;1122:4;1110:17;;;1104:24;-1:-1:-1;;;;;1204:21:182;;;1182:20;;;1175:51;;;;1286:4;1274:17;;;1268:24;1264:33;;1242:20;;;1235:63;1155:3;1335:17;;;1329:24;675:31;;1397:20;;;663:44;1467:4;1455:17;;;1449:24;675:31;;1517:20;;;663:44;1587:4;1575:17;;;1569:24;675:31;;1637:20;;;663:44;1677:6;1720:15;;;1714:22;675:31;;;1780:18;;;663:44;904:3;889:19;;;1745:54;;;718:1087;;;;:::o;1810:127::-;1871:10;1866:3;1862:20;1859:1;1852:31;1902:4;1899:1;1892:15;1926:4;1923:1;1916:15;1942:250;2009:2;2003:9;2051:6;2039:19;;2088:18;2073:34;;2109:22;;;2070:62;2067:88;;;2135:18;;:::i;:::-;2171:2;2164:22;1942:250;:::o;2197:601::-;2248:5;2296:4;2284:9;2279:3;2275:19;2271:30;2268:50;;;2314:1;2311;2304:12;2268:50;2347:2;2341:9;2389:4;2381:6;2377:17;2460:6;2448:10;2445:22;2424:18;2412:10;2409:34;2406:62;2403:88;;;2471:18;;:::i;:::-;2511:10;2507:2;2500:22;;2540:6;2531:15;;2583:9;2570:23;2562:6;2555:39;2655:2;2644:9;2640:18;2627:32;2622:2;2614:6;2610:15;2603:57;2721:2;2710:9;2706:18;2693:32;2688:2;2680:6;2676:15;2669:57;2787:2;2776:9;2772:18;2759:32;2754:2;2746:6;2742:15;2735:57;;2197:601;;;;:::o;2803:986::-;2866:5;2914:6;2902:9;2897:3;2893:19;2889:32;2886:52;;;2934:1;2931;2924:12;2886:52;2956:17;;:::i;:::-;2947:26;;2996:29;3015:9;2996:29;:::i;:::-;2989:5;2982:44;3058:38;3092:2;3081:9;3077:18;3058:38;:::i;:::-;3053:2;3046:5;3042:14;3035:62;3157:2;3146:9;3142:18;3129:32;3124:2;3117:5;3113:14;3106:56;3222:2;3211:9;3207:18;3194:32;3189:2;3182:5;3178:14;3171:56;3288:3;3277:9;3273:19;3260:33;3254:3;3247:5;3243:15;3236:58;3355:3;3344:9;3340:19;3327:33;3321:3;3314:5;3310:15;3303:58;3422:3;3411:9;3407:19;3394:33;3388:3;3381:5;3377:15;3370:58;3489:3;3478:9;3474:19;3461:33;3455:3;3448:5;3444:15;3437:58;3514:3;3549:38;3583:2;3572:9;3568:18;3549:38;:::i;:::-;3533:14;;;3526:62;3607:3;3642:38;3661:18;;;3642:38;:::i;:::-;3626:14;;;3619:62;3700:3;3735:47;3778:3;3758:18;;;3735:47;:::i;:::-;3719:14;;;3712:71;3723:5;2803:986;-1:-1:-1;;2803:986:182:o;3794:718::-;3836:5;3889:3;3882:4;3874:6;3870:17;3866:27;3856:55;;3907:1;3904;3897:12;3856:55;3943:6;3930:20;3969:18;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:182;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4352:3;4345:4;4340:2;4332:6;4328:15;4324:26;4321:35;4318:55;;;4369:1;4366;4359:12;4318:55;4433:2;4426:4;4418:6;4414:17;4407:4;4399:6;4395:17;4382:54;4480:1;4473:4;4468:2;4460:6;4456:15;4452:26;4445:37;4500:6;4491:15;;;;;;3794:718;;;;:::o;4517:661::-;4655:6;4663;4671;4679;4687;4740:3;4728:9;4719:7;4715:23;4711:33;4708:53;;;4757:1;4754;4747:12;4708:53;4793:9;4780:23;4770:33;;4822:63;4877:7;4872:2;4861:9;4857:18;4822:63;:::i;:::-;4812:73;;4936:3;4925:9;4921:19;4908:33;4964:18;4956:6;4953:30;4950:50;;;4996:1;4993;4986:12;4950:50;5019:49;5060:7;5051:6;5040:9;5036:22;5019:49;:::i;:::-;4517:661;;;;-1:-1:-1;5009:59:182;;5115:3;5100:19;;5087:33;;-1:-1:-1;5167:3:182;5152:19;5139:33;;4517:661;-1:-1:-1;;;4517:661:182:o;5391:592::-;5520:6;5528;5536;5544;5597:3;5585:9;5576:7;5572:23;5568:33;5565:53;;;5614:1;5611;5604:12;5565:53;5650:9;5637:23;5627:33;;5679:63;5734:7;5729:2;5718:9;5714:18;5679:63;:::i;:::-;5669:73;;5793:3;5782:9;5778:19;5765:33;5821:18;5813:6;5810:30;5807:50;;;5853:1;5850;5843:12;5807:50;5876:49;5917:7;5908:6;5897:9;5893:22;5876:49;:::i;:::-;5391:592;;;;-1:-1:-1;5866:59:182;;5972:3;5957:19;5944:33;;-1:-1:-1;;;5391:592:182:o;6250:1186::-;6484:13;;-1:-1:-1;;;;;675:31:182;663:44;;6452:3;6437:19;;6556:4;6548:6;6544:17;6538:24;6571:54;6619:4;6608:9;6604:20;6590:12;-1:-1:-1;;;;;675:31:182;663:44;;609:104;6571:54;;6681:4;6673:6;6669:17;6663:24;6656:4;6645:9;6641:20;6634:54;6744:4;6736:6;6732:17;6726:24;6719:4;6708:9;6704:20;6697:54;6807:4;6799:6;6795:17;6789:24;6782:4;6771:9;6767:20;6760:54;6870:4;6862:6;6858:17;6852:24;6845:4;6834:9;6830:20;6823:54;6933:4;6925:6;6921:17;6915:24;6908:4;6897:9;6893:20;6886:54;6996:4;6988:6;6984:17;6978:24;6971:4;6960:9;6956:20;6949:54;7022:6;7077:2;7069:6;7065:15;7059:22;7090:54;7140:2;7129:9;7125:18;7109:14;-1:-1:-1;;;;;675:31:182;663:44;;609:104;7090:54;-1:-1:-1;;7163:6:182;7206:15;;;7200:22;-1:-1:-1;;;;;675:31:182;7266:18;;;663:44;7304:6;7347:15;;;7341:22;6058:12;;7411:18;;;6046:25;6120:4;6109:16;;6103:23;6087:14;;;6080:47;6176:4;6165:16;;6159:23;6143:14;;;6136:47;6232:4;6221:16;;6215:23;6199:14;;;6192:47;7372:58;5988:257;7791:1035;7874:12;;-1:-1:-1;;;;;675:31:182;663:44;;7938:4;7931:5;7927:16;7921:23;7953:48;7995:4;7990:3;7986:14;7972:12;-1:-1:-1;;;;;675:31:182;663:44;;609:104;7953:48;;8050:4;8043:5;8039:16;8033:23;8026:4;8021:3;8017:14;8010:47;8106:4;8099:5;8095:16;8089:23;8082:4;8077:3;8073:14;8066:47;8162:4;8155:5;8151:16;8145:23;8138:4;8133:3;8129:14;8122:47;8218:4;8211:5;8207:16;8201:23;8194:4;8189:3;8185:14;8178:47;8274:4;8267:5;8263:16;8257:23;8250:4;8245:3;8241:14;8234:47;8330:4;8323:5;8319:16;8313:23;8306:4;8301:3;8297:14;8290:47;8356:6;8409:2;8402:5;8398:14;8392:21;8387:2;8382:3;8378:12;8371:43;;8433:6;8487:2;8480:5;8476:14;8470:21;8500:48;8544:2;8539:3;8535:12;8519:14;-1:-1:-1;;;;;675:31:182;663:44;;609:104;8500:48;-1:-1:-1;;8567:6:182;8610:14;;;8604:21;-1:-1:-1;;;;;675:31:182;8669:12;;;663:44;8701:6;8744:14;;;8738:21;6058:12;;8807;;;6046:25;;;;6120:4;6109:16;;6103:23;6087:14;;;6080:47;6176:4;6165:16;;6159:23;6143:14;;;6136:47;6232:4;6221:16;6215:23;6199:14;;;;6192:47;7791:1035::o;8831:422::-;8872:3;8910:5;8904:12;8937:6;8932:3;8925:19;8962:1;8972:162;8986:6;8983:1;8980:13;8972:162;;;9048:4;9104:13;;;9100:22;;9094:29;9076:11;;;9072:20;;9065:59;9001:12;8972:162;;;8976:3;9179:1;9172:4;9163:6;9158:3;9154:16;9150:27;9143:38;9242:4;9235:2;9231:7;9226:2;9218:6;9214:15;9210:29;9205:3;9201:39;9197:50;9190:57;;;8831:422;;;;:::o;9258:461::-;9480:4;9509:3;9521:47;9558:9;9550:6;9521:47;:::i;:::-;9605:2;9599:3;9588:9;9584:19;9577:31;9625:44;9665:2;9654:9;9650:18;9642:6;9625:44;:::i;:::-;9617:52;;;9706:6;9700:3;9689:9;9685:19;9678:35;9258:461;;;;;;:::o;9724:251::-;9794:6;9847:2;9835:9;9826:7;9822:23;9818:32;9815:52;;;9863:1;9860;9853:12;9815:52;9895:9;9889:16;9914:31;9939:5;9914:31;:::i;9980:904::-;10342:4;10371:3;10383:47;10420:9;10412:6;10383:47;:::i;:::-;10467:2;10461:3;10450:9;10446:19;10439:31;10487:44;10527:2;10516:9;10512:18;10504:6;10487:44;:::i;:::-;-1:-1:-1;;;;;10606:15:182;;;10600:3;10585:19;;10578:44;10659:15;;;10653:3;10638:19;;10631:44;-1:-1:-1;;10712:15:182;;;10706:3;10691:19;;10684:44;10765:15;;;10759:3;10744:19;;10737:44;10818:15;;;10812:3;10797:19;;10790:44;10865:3;10850:19;10843:35;;;;10479:52;9980:904;-1:-1:-1;;9980:904:182:o;10889:273::-;10957:6;11010:2;10998:9;10989:7;10985:23;10981:32;10978:52;;;11026:1;11023;11016:12;10978:52;11058:9;11052:16;11108:4;11101:5;11097:16;11090:5;11087:27;11077:55;;11128:1;11125;11118:12;11167:127;11228:10;11223:3;11219:20;11216:1;11209:31;11259:4;11256:1;11249:15;11283:4;11280:1;11273:15;11299:151;11389:4;11382:12;;;11368;;;11364:31;;11407:14;;11404:40;;;11424:18;;:::i;11455:422::-;11544:1;11587:5;11544:1;11601:270;11622:7;11612:8;11609:21;11601:270;;;11681:4;11677:1;11673:6;11669:17;11663:4;11660:27;11657:53;;;11690:18;;:::i;:::-;11740:7;11730:8;11726:22;11723:55;;;11760:16;;;;11723:55;11839:22;;;;11799:15;;;;11601:270;;;11605:3;11455:422;;;;;:::o;11882:806::-;11931:5;11961:8;11951:80;;-1:-1:-1;12002:1:182;12016:5;;11951:80;12050:4;12040:76;;-1:-1:-1;12087:1:182;12101:5;;12040:76;12132:4;12150:1;12145:59;;;;12218:1;12213:130;;;;12125:218;;12145:59;12175:1;12166:10;;12189:5;;;12213:130;12250:3;12240:8;12237:17;12234:43;;;12257:18;;:::i;:::-;-1:-1:-1;;12313:1:182;12299:16;;12328:5;;12125:218;;12427:2;12417:8;12414:16;12408:3;12402:4;12399:13;12395:36;12389:2;12379:8;12376:16;12371:2;12365:4;12362:12;12358:35;12355:77;12352:159;;;-1:-1:-1;12464:19:182;;;12496:5;;12352:159;12543:34;12568:8;12562:4;12543:34;:::i;:::-;12613:6;12609:1;12605:6;12601:19;12592:7;12589:32;12586:58;;;12624:18;;:::i;:::-;12662:20;;11882:806;-1:-1:-1;;;11882:806:182:o;12693:140::-;12751:5;12780:47;12821:4;12811:8;12807:19;12801:4;12780:47;:::i;13284:184::-;13354:6;13407:2;13395:9;13386:7;13382:23;13378:32;13375:52;;;13423:1;13420;13413:12;13375:52;-1:-1:-1;13446:16:182;;13284:184;-1:-1:-1;13284:184:182:o;13473:209::-;13505:1;13531;13521:132;;13575:10;13570:3;13566:20;13563:1;13556:31;13610:4;13607:1;13600:15;13638:4;13635:1;13628:15;13521:132;-1:-1:-1;13667:9:182;;13473:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "45": readonly [{
                readonly start: 455;
                readonly length: 32;
            }, {
                readonly start: 3066;
                readonly length: 32;
            }];
            readonly "48": readonly [{
                readonly start: 358;
                readonly length: 32;
            }, {
                readonly start: 913;
                readonly length: 32;
            }];
            readonly "51": readonly [{
                readonly start: 280;
                readonly length: 32;
            }, {
                readonly start: 1502;
                readonly length: 32;
            }];
            readonly "54": readonly [{
                readonly start: 397;
                readonly length: 32;
            }, {
                readonly start: 1782;
                readonly length: 32;
            }];
            readonly "57": readonly [{
                readonly start: 319;
                readonly length: 32;
            }, {
                readonly start: 2062;
                readonly length: 32;
            }];
            readonly "60": readonly [{
                readonly start: 241;
                readonly length: 32;
            }, {
                readonly start: 2342;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "c47e90c4";
        readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "7cc39092";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}}},\"title\":\"ERC4626HyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the ERC4626Hyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol\":\"ERC4626HyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x43e1779b4fd0634f56574752b969b9aeadf9fe4b5633aa417654027928c3d88e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d758145e49d0a9fa61ac8d04263b093f0f95034c04eb08512092593b0775677e\",\"dweb:/ipfs/QmVfeof8yPxG7DoSJt7jGodQ7YALhQ2zuLabKuQLGCSBbj\"]},\"contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xff0a930182637da10cb8b296083361238443846f02caf1fad079006171d70b61\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60677b6e51018eb02a9b5e20cd36277307fd66428f50229fd291a963272df7e9\",\"dweb:/ipfs/Qma3FEHMFuTmcW4du8hC8tB1SPEeC4JLxn6aYEqtT7UAa6\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3\",\"dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213\",\"dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb\",\"dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x7d0e883b5d68892df654212a0f4448839358fe66d88728dc2535414edcfb4bdc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d0290659a7ef8ceb30f33617a696b1410d7fd110061eee77419ccce580f5a586\",\"dweb:/ipfs/QmXg2p6zmomxS2B3huDMtgUMSHpstWh3wMYdxt2czs45en\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8\",\"dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol": "ERC4626HyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x43e1779b4fd0634f56574752b969b9aeadf9fe4b5633aa417654027928c3d88e";
                readonly urls: readonly ["bzz-raw://d758145e49d0a9fa61ac8d04263b093f0f95034c04eb08512092593b0775677e", "dweb:/ipfs/QmVfeof8yPxG7DoSJt7jGodQ7YALhQ2zuLabKuQLGCSBbj"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xff0a930182637da10cb8b296083361238443846f02caf1fad079006171d70b61";
                readonly urls: readonly ["bzz-raw://60677b6e51018eb02a9b5e20cd36277307fd66428f50229fd291a963272df7e9", "dweb:/ipfs/Qma3FEHMFuTmcW4du8hC8tB1SPEeC4JLxn6aYEqtT7UAa6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC4626.sol": {
                readonly keccak256: "0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e";
                readonly urls: readonly ["bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3", "dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP"];
                readonly license: "GPL-2.0-or-later";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317";
                readonly urls: readonly ["bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213", "dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76";
                readonly urls: readonly ["bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb", "dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x7d0e883b5d68892df654212a0f4448839358fe66d88728dc2535414edcfb4bdc";
                readonly urls: readonly ["bzz-raw://d0290659a7ef8ceb30f33617a696b1410d7fd110061eee77419ccce580f5a586", "dweb:/ipfs/QmXg2p6zmomxS2B3huDMtgUMSHpstWh3wMYdxt2czs45en"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56";
                readonly urls: readonly ["bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8", "dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/erc4626/ERC4626HyperdriveDeployerCoordinator.sol";
        readonly id: 1112;
        readonly exportedSymbols: {
            readonly ERC4626HyperdriveDeployerCoordinator: readonly [1111];
            readonly HyperdriveDeployerCoordinator: readonly [914];
            readonly IERC4626: readonly [7203];
            readonly IHyperdrive: readonly [7616];
            readonly IHyperdriveDeployerCoordinator: readonly [7888];
            readonly ONE: readonly [14151];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:3562:2";
        readonly nodes: readonly [{
            readonly id: 991;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:2";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 993;
            readonly nodeType: "ImportDirective";
            readonly src: "64:57:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IERC4626.sol";
            readonly file: "../../interfaces/IERC4626.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1112;
            readonly sourceUnit: 7204;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 992;
                    readonly name: "IERC4626";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7203;
                    readonly src: "73:8:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 995;
            readonly nodeType: "ImportDirective";
            readonly src: "122:63:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1112;
            readonly sourceUnit: 7617;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 994;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7616;
                    readonly src: "131:11:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 997;
            readonly nodeType: "ImportDirective";
            readonly src: "186:101:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1112;
            readonly sourceUnit: 7889;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 996;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7888;
                    readonly src: "195:30:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 999;
            readonly nodeType: "ImportDirective";
            readonly src: "288:57:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1112;
            readonly sourceUnit: 14918;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 998;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 14151;
                    readonly src: "297:3:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1001;
            readonly nodeType: "ImportDirective";
            readonly src: "346:85:2";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1112;
            readonly sourceUnit: 915;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1000;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 914;
                    readonly src: "355:29:2";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1111;
            readonly nodeType: "ContractDefinition";
            readonly src: "801:2799:2";
            readonly nodes: readonly [{
                readonly id: 1029;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1259:450:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1028;
                    readonly nodeType: "Block";
                    readonly src: "1707:2:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [];
                };
                readonly documentation: {
                    readonly id: 1005;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "886:368:2";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 1020;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1007;
                        readonly src: "1529:13:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1021;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1009;
                        readonly src: "1556:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1022;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1011;
                        readonly src: "1586:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1023;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1013;
                        readonly src: "1616:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1024;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1015;
                        readonly src: "1646:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1025;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1017;
                        readonly src: "1676:16:2";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 1026;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 1019;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1486:29:2"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 914;
                        readonly src: "1486:29:2";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1486:216:2";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 1018;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1007;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1288:13:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1280:21:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1006;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1280:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1009;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1319:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1311:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1008;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1311:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1011;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1353:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1345:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1010;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1345:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1013;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1387:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1379:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1012;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1379:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1015;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1421:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1413:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1014;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1413:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1017;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1455:16:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1029;
                        readonly src: "1447:24:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1016;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1447:7:2";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1270:207:2";
                };
                readonly returnParameters: {
                    readonly id: 1027;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1707:0:2";
                };
                readonly scope: 1111;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 1082;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1867:1224:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1081;
                    readonly nodeType: "Block";
                    readonly src: "1981:1110:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1040;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1033;
                                readonly src: "2053:13:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 1037;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "2030:5:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_ERC4626HyperdriveDeployerCoordinator_$1111_$";
                                        readonly typeString: "type(contract super ERC4626HyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 1039;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2036:16:2";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 817;
                                readonly src: "2030:22:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$7368_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 1041;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2030:37:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 1042;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2030:37:2";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1054;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1043;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1033;
                                    readonly src: "2362:13:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1044;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2376:20:2";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7345;
                                readonly src: "2362:34:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 1053;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly hexValue: "3130";
                                    readonly id: 1045;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "2411:2:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_10_by_1";
                                        readonly typeString: "int_const 10";
                                    };
                                    readonly value: "10";
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "**";
                                readonly rightExpression: {
                                    readonly components: readonly [{
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                        readonly id: 1051;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 1046;
                                                        readonly name: "_deployConfig";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 1033;
                                                        readonly src: "2418:13:2";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 1047;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2432:9:2";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7336;
                                                    readonly src: "2418:23:2";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6920";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                };
                                                readonly id: 1048;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "2442:8:2";
                                                readonly memberName: "decimals";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 6895;
                                                readonly src: "2418:32:2";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_uint8_$";
                                                    readonly typeString: "function () view external returns (uint8)";
                                                };
                                            };
                                            readonly id: 1049;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "2418:34:2";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint8";
                                                readonly typeString: "uint8";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly hexValue: "34";
                                            readonly id: 1050;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "2455:1:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_4_by_1";
                                                readonly typeString: "int_const 4";
                                            };
                                            readonly value: "4";
                                        };
                                        readonly src: "2418:38:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                    }];
                                    readonly id: 1052;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "2417:40:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint8";
                                        readonly typeString: "uint8";
                                    };
                                };
                                readonly src: "2411:46:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "2362:95:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1061;
                        readonly nodeType: "IfStatement";
                        readonly src: "2345:215:2";
                        readonly trueBody: {
                            readonly id: 1060;
                            readonly nodeType: "Block";
                            readonly src: "2468:92:2";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1055;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7888;
                                            readonly src: "2489:30:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7888_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1057;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2520:27:2";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7837;
                                        readonly src: "2489:58:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1058;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2489:60:2";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1059;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2482:67:2";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1073;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1062;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1033;
                                    readonly src: "2862:13:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1063;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2876:24:2";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7348;
                                readonly src: "2862:38:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 1072;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly hexValue: "3130";
                                    readonly id: 1064;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "2915:2:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_10_by_1";
                                        readonly typeString: "int_const 10";
                                    };
                                    readonly value: "10";
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "**";
                                readonly rightExpression: {
                                    readonly components: readonly [{
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                        readonly id: 1070;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 1065;
                                                        readonly name: "_deployConfig";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 1033;
                                                        readonly src: "2922:13:2";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 1066;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2936:9:2";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7336;
                                                    readonly src: "2922:23:2";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6920";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                };
                                                readonly id: 1067;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "2946:8:2";
                                                readonly memberName: "decimals";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 6895;
                                                readonly src: "2922:32:2";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_uint8_$";
                                                    readonly typeString: "function () view external returns (uint8)";
                                                };
                                            };
                                            readonly id: 1068;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "2922:34:2";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint8";
                                                readonly typeString: "uint8";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly hexValue: "34";
                                            readonly id: 1069;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "2959:1:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_4_by_1";
                                                readonly typeString: "int_const 4";
                                            };
                                            readonly value: "4";
                                        };
                                        readonly src: "2922:38:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint8";
                                            readonly typeString: "uint8";
                                        };
                                    }];
                                    readonly id: 1071;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "2921:40:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint8";
                                        readonly typeString: "uint8";
                                    };
                                };
                                readonly src: "2915:46:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "2862:99:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1080;
                        readonly nodeType: "IfStatement";
                        readonly src: "2845:240:2";
                        readonly trueBody: {
                            readonly id: 1079;
                            readonly nodeType: "Block";
                            readonly src: "2972:113:2";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1074;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7888;
                                            readonly src: "2993:30:2";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7888_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1076;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3041:31:2";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7840;
                                        readonly src: "2993:79:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1077;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2993:81:2";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1078;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2986:88:2";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [817];
                readonly documentation: {
                    readonly id: 1030;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1715:147:2";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "1876:16:2";
                readonly overrides: {
                    readonly id: 1035;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "1972:8:2";
                };
                readonly parameters: {
                    readonly id: 1034;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1033;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "1938:13:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1082;
                        readonly src: "1902:49:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 1032;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1031;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["1902:11:2", "1914:16:2"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7368;
                                readonly src: "1902:28:2";
                            };
                            readonly referencedDeclaration: 7368;
                            readonly src: "1902:28:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7368_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1892:65:2";
                };
                readonly returnParameters: {
                    readonly id: 1036;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1981:0:2";
                };
                readonly scope: 1111;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1110;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3311:287:2";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1109;
                    readonly nodeType: "Block";
                    readonly src: "3427:171:2";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [1093];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 1093;
                            readonly mutability: "mutable";
                            readonly name: "vault";
                            readonly nameLocation: "3497:5:2";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 1109;
                            readonly src: "3488:14:2";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                readonly typeString: "contract IERC4626";
                            };
                            readonly typeName: {
                                readonly id: 1092;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 1091;
                                    readonly name: "IERC4626";
                                    readonly nameLocations: readonly ["3488:8:2"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 7203;
                                    readonly src: "3488:8:2";
                                };
                                readonly referencedDeclaration: 7203;
                                readonly src: "3488:8:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                    readonly typeString: "contract IERC4626";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 1103;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 1097;
                                    readonly name: "_extraData";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1085;
                                    readonly src: "3525:10:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }, {
                                    readonly components: readonly [{
                                        readonly id: 1099;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "3538:7:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 1098;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "3538:7:2";
                                            readonly typeDescriptions: {};
                                        };
                                    }];
                                    readonly id: 1100;
                                    readonly isConstant: false;
                                    readonly isInlineArray: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "TupleExpression";
                                    readonly src: "3537:9:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }, {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    }];
                                    readonly expression: {
                                        readonly id: 1095;
                                        readonly name: "abi";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: -1;
                                        readonly src: "3514:3:2";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_magic_abi";
                                            readonly typeString: "abi";
                                        };
                                    };
                                    readonly id: 1096;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "3518:6:2";
                                    readonly memberName: "decode";
                                    readonly nodeType: "MemberAccess";
                                    readonly src: "3514:10:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_abidecode_pure$__$returns$__$";
                                        readonly typeString: "function () pure";
                                    };
                                };
                                readonly id: 1101;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3514:33:2";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address_payable";
                                    readonly typeString: "address payable";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address_payable";
                                    readonly typeString: "address payable";
                                }];
                                readonly id: 1094;
                                readonly name: "IERC4626";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7203;
                                readonly src: "3505:8:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_type$_t_contract$_IERC4626_$7203_$";
                                    readonly typeString: "type(contract IERC4626)";
                                };
                            };
                            readonly id: 1102;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "typeConversion";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3505:43:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                readonly typeString: "contract IERC4626";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "3488:60:2";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1106;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 14151;
                                readonly src: "3587:3:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1104;
                                    readonly name: "vault";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1093;
                                    readonly src: "3565:5:2";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                        readonly typeString: "contract IERC4626";
                                    };
                                };
                                readonly id: 1105;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3571:15:2";
                                readonly memberName: "convertToAssets";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7138;
                                readonly src: "3565:21:2";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 1107;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3565:26:2";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 1090;
                        readonly id: 1108;
                        readonly nodeType: "Return";
                        readonly src: "3558:33:2";
                    }];
                };
                readonly baseFunctions: readonly [825];
                readonly documentation: {
                    readonly id: 1083;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3097:209:2";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @param _extraData The extra data passed to the child deployers.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "3320:26:2";
                readonly overrides: {
                    readonly id: 1087;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3400:8:2";
                };
                readonly parameters: {
                    readonly id: 1086;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1085;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "3369:10:2";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1110;
                        readonly src: "3356:23:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 1084;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3356:5:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3346:39:2";
                };
                readonly returnParameters: {
                    readonly id: 1090;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1089;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1110;
                        readonly src: "3418:7:2";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1088;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3418:7:2";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3417:9:2";
                };
                readonly scope: 1111;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 1003;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["850:29:2"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 914;
                    readonly src: "850:29:2";
                };
                readonly id: 1004;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "850:29:2";
            }];
            readonly canonicalName: "ERC4626HyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 1002;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "433:368:2";
                readonly text: "@author DELV\n @title ERC4626HyperdriveDeployerCoordinator\n @notice The deployer coordinator for the ERC4626Hyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [1111, 914, 7888];
            readonly name: "ERC4626HyperdriveDeployerCoordinator";
            readonly nameLocation: "810:36:2";
            readonly scope: 1112;
            readonly usedErrors: readonly [7819, 7822, 7825, 7828, 7831, 7834, 7837, 7840, 7843, 7846, 7849, 7852, 7855];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 2;
};
//# sourceMappingURL=ERC4626HyperdriveDeployerCoordinator.d.ts.map