export declare const ERC4626HyperdriveCoreDeployer: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialVaultSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "_target0";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x608060405234801561001057600080fd5b50611f59806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80630c65a1cb1462000033575b600080fd5b6200004a620000443660046200027f565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080888060200190518101906200007f9190620003f7565b60408051336020820152908101859052909150606001604051602081830303815290604052805190602001208a898989898987604051620000c09062000104565b620000d297969594939291906200041e565b8190604051809103906000f5905080158015620000f3573d6000803e3d6000fd5b509150505b98975050505050505050565b6119c4806200056083390190565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156200014f576200014f62000112565b60405290565b6001600160a01b03811681146200016b57600080fd5b50565b80356200017b8162000155565b919050565b6000608082840312156200019357600080fd5b6040516080810181811067ffffffffffffffff82111715620001b957620001b962000112565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001fc57600080fd5b813567ffffffffffffffff808211156200021a576200021a62000112565b604051601f8301601f19908116603f0116810190828211818310171562000245576200024562000112565b816040528381528660208588010111156200025f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080888a036102c08112156200029e57600080fd5b6101e080821215620002af57600080fd5b620002b962000128565b9150620002c68b6200016e565b8252620002d660208c016200016e565b602083015260408b0135604083015260608b0135606083015260808b0135608083015260a08b013560a083015260c08b013560c083015260e08b013560e0830152610100808c0135818401525061012062000333818d016200016e565b90830152610140620003478c82016200016e565b908301526101606200035c8d8d830162000180565b9083015290985089013567ffffffffffffffff8111156200037c57600080fd5b6200038a8b828c01620001ea565b9750506200039c6102008a016200016e565b9550620003ad6102208a016200016e565b9450620003be6102408a016200016e565b9350620003cf6102608a016200016e565b9250620003e06102808a016200016e565b91506102a089013590509295985092959890939650565b6000602082840312156200040a57600080fd5b8151620004178162000155565b9392505050565b87516001600160a01b031681526102a0810160208901516200044b60208401826001600160a01b03169052565b5060408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a01518184015250610120808a0151620004b0828501826001600160a01b03169052565b5050610140898101516001600160a01b03811684830152505061016089810151805184830152602081015161018085015260408101516101a085015260608101516101c085015250506001600160a01b0388166101e08301526001600160a01b0387166102008301526001600160a01b0386166102208301526001600160a01b0385166102408301526001600160a01b0384166102608301526001600160a01b038316610280830152620000f856fe6103006040523480156200001257600080fd5b50604051620019c4380380620019c48339810160408190526200003591620005e9565b600160005586516001600160a01b0390811660809081526060808a015161018052908901516101a05260a0808a01516101c05260e0808b015190915260c0808b01519052610100808b0151909152610160808b0180515190925281516020908101516101209081528351604090810151610140908152945190950151909252808c0151851661020052838c015161022052908b0151600880546001600160a01b031916918616919091179055908a015183166101e0528883166102405287831661026052868316610280528583166102a0528483166102c0529183166102e081905281516338d52e0f60e01b8152915190926338d52e0f92600480820193918290030181865afa1580156200014e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017491906200073f565b6001600160a01b031687600001516001600160a01b031614620001aa57604051630722152560e11b815260040160405180910390fd5b6102e0518751620001c9916001600160a01b03909116906001620001d6565b50505050505050620007b4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002309085908390620002a216565b6200029c57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002909186916200035316565b6200029c848262000353565b50505050565b6000806000846001600160a01b031684604051620002c191906200075f565b6000604051808303816000865af19150503d806000811462000300576040519150601f19603f3d011682016040523d82523d6000602084013e62000305565b606091505b5091509150818015620003335750805115806200033357508080602001905181019062000333919062000790565b80156200034a57506000856001600160a01b03163b115b95945050505050565b60006200036a6001600160a01b03841683620003c6565b905080516000141580156200039257508080602001905181019062000390919062000790565b155b15620003c157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6060620003d683836000620003dd565b9392505050565b606081471015620004045760405163cd78605960e01b8152306004820152602401620003b8565b600080856001600160a01b031684866040516200042291906200075f565b60006040518083038185875af1925050503d806000811462000461576040519150601f19603f3d011682016040523d82523d6000602084013e62000466565b606091505b5090925090506200047986838362000483565b9695505050505050565b6060826200049c576200049682620004e7565b620003d6565b8151158015620004b457506001600160a01b0384163b155b15620004df57604051639996b31560e01b81526001600160a01b0385166004820152602401620003b8565b5080620003d6565b805115620004f85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60405161018081016001600160401b03811182821017156200054657634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200051157600080fd5b80516200056f816200054c565b919050565b6000608082840312156200058757600080fd5b604051608081016001600160401b0381118282101715620005b857634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008060008060008789036102a08112156200060757600080fd5b6101e0808212156200061857600080fd5b6200062262000514565b91506200062f8a62000562565b82526200063f60208b0162000562565b602083015260408a0151604083015260608a0151606083015260808a0151608083015260a08a015160a083015260c08a015160c083015260e08a015160e0830152610100808b015181840152506101206200069c818c0162000562565b90830152610140620006b08b820162000562565b90830152610160620006c58c8c830162000574565b8184015250819850620006da818b0162000562565b97505050620006ed610200890162000562565b9450620006fe610220890162000562565b93506200070f610240890162000562565b925062000720610260890162000562565b915062000731610280890162000562565b905092959891949750929550565b6000602082840312156200075257600080fd5b8151620003d6816200054c565b6000825160005b8181101562000782576020818601810151858301520162000766565b506000920191825250919050565b600060208284031215620007a357600080fd5b81518015158114620003d657600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e0516110e3620008e16000396000505060008181610601015261099c015260008181610546015281816107cb01526109660152600081816104ff0152818161070301526109f60152600081816105ad0152818161066d01526107680152600081816101ce015281816103900152818161063d0152818161069f015281816106d1015281816107370152818161079b015281816107fc0152818161093401526109c5015260005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110e36000f3fe6080604052600436106101b75760003560e01c80639cd241af116100ec578063dbbe80701161008a578063eac3e79911610064578063eac3e7991461059b578063ed64bab2146105cf578063f3f70707146105ef578063f698da2514610623576101b7565b8063dbbe807014610568578063ded06231146103ca578063e44808bc1461057b576101b7565b8063ab033ea9116100c6578063ab033ea9146102c7578063cba2e58d14610521578063cbc1343414610304578063d899e11214610534576101b7565b80639cd241af146104cd578063a22cb4651461047a578063a6e8a859146104ed576101b7565b806330adf81f116101595780634ed2d6ac116101335780634ed2d6ac1461045f5780637180c8ca1461047a57806377d05ff41461049a5780639032c726146104ad576101b7565b806330adf81f146103f85780633e691db91461042c5780634c2ac1d91461044c576101b7565b806317fad7fc1161019557806317fad7fc1461033e5780631c0f12b61461035e57806321b57d531461037e57806329b23fc1146103ca576101b7565b806301681a62146102c757806302329a29146102e9578063074a6de914610304575b3480156101c357600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610206929190610ac4565b600060405180830381855af49150503d8060008114610241576040519150601f19603f3d011682016040523d82523d6000602084013e610246565b606091505b5091509150811561026a57604051638bb0a34b60e01b815260040160405180910390fd5b600061027582610ad4565b90506001600160e01b03198116636e64089360e11b1461029757815160208301fd5b8151600319810160048401908152926102b891810160200190602401610b45565b80519650602001945050505050f35b3480156102d357600080fd5b506102e76102e2366004610c0a565b610638565b005b3480156102f557600080fd5b506102e76102e2366004610c43565b34801561031057600080fd5b5061032461031f366004610c70565b610665565b604080519283526020830191909152015b60405180910390f35b34801561034a57600080fd5b506102e7610359366004610d0c565b61069a565b34801561036a57600080fd5b506102e7610379366004610da1565b6106cc565b34801561038a57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610335565b3480156103d657600080fd5b506103ea6103e5366004610de9565b6106fc565b604051908152602001610335565b34801561040457600080fd5b506103ea7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561043857600080fd5b506103ea610447366004610e43565b610730565b6103ea61045a366004610e80565b610761565b34801561046b57600080fd5b506102e7610379366004610ee4565b34801561048657600080fd5b506102e7610495366004610f2e565b610796565b6103ea6104a8366004610c70565b6107c4565b3480156104b957600080fd5b506102e76104c8366004610f63565b6107f7565b3480156104d957600080fd5b506102e76104e8366004610fe1565b61092f565b3480156104f957600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b61032461052f366004610de9565b61095e565b34801561054057600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b610324610576366004610de9565b610994565b34801561058757600080fd5b506102e7610596366004611019565b6109c0565b3480156105a757600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105db57600080fd5b506102e76105ea366004611078565b6109f1565b3480156105fb57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561062f57600080fd5b506103ea610a1a565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050565b6000806106917f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50935093915050565b6106c37f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050505050565b6106f57f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050505050565b60006107277f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50949350505050565b600061075b7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50919050565b600061078c7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5095945050505050565b6107bf7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050565b60006107ef7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661082c610a1a565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108d59190611091565b600060405180830381855af49150503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b50915091508161092757805160208201fd5b805160208201f35b6109587f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5094509492505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b6109e97f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050505050565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108d59291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b035780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b3c578181015183820152602001610b24565b50506000910152565b600060208284031215610b5757600080fd5b815167ffffffffffffffff80821115610b6f57600080fd5b818401915084601f830112610b8357600080fd5b815181811115610b9557610b95610b0b565b604051601f8201601f19908116603f01168101908382118183101715610bbd57610bbd610b0b565b81604052828152876020848701011115610bd657600080fd5b610be7836020830160208801610b21565b979650505050505050565b6001600160a01b0381168114610c0757600080fd5b50565b600060208284031215610c1c57600080fd5b8135610c2781610bf2565b9392505050565b80358015158114610c3e57600080fd5b919050565b600060208284031215610c5557600080fd5b610c2782610c2e565b60006060828403121561075b57600080fd5b600080600060608486031215610c8557600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610caa57600080fd5b610cb686828701610c5e565b9150509250925092565b60008083601f840112610cd257600080fd5b50813567ffffffffffffffff811115610cea57600080fd5b6020830191508360208260051b8501011115610d0557600080fd5b9250929050565b60008060008060008060808789031215610d2557600080fd5b8635610d3081610bf2565b95506020870135610d4081610bf2565b9450604087013567ffffffffffffffff80821115610d5d57600080fd5b610d698a838b01610cc0565b90965094506060890135915080821115610d8257600080fd5b50610d8f89828a01610cc0565b979a9699509497509295939492505050565b60008060008060808587031215610db757600080fd5b843593506020850135610dc981610bf2565b92506040850135610dd981610bf2565b9396929550929360600135925050565b60008060008060808587031215610dff57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e2b57600080fd5b610e3787828801610c5e565b91505092959194509250565b600060208284031215610e5557600080fd5b813567ffffffffffffffff811115610e6c57600080fd5b610e7884828501610c5e565b949350505050565b600080600080600060a08688031215610e9857600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610ecb57600080fd5b610ed788828901610c5e565b9150509295509295909350565b60008060008060808587031215610efa57600080fd5b843593506020850135610f0c81610bf2565b9250604085013591506060850135610f2381610bf2565b939692955090935050565b60008060408385031215610f4157600080fd5b8235610f4c81610bf2565b9150610f5a60208401610c2e565b90509250929050565b600080600080600080600060e0888a031215610f7e57600080fd5b8735610f8981610bf2565b96506020880135610f9981610bf2565b9550610fa760408901610c2e565b945060608801359350608088013560ff81168114610fc457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610ff657600080fd5b83359250602084013561100881610bf2565b929592945050506040919091013590565b600080600080600060a0868803121561103157600080fd5b85359450602086013561104381610bf2565b9350604086013561105381610bf2565b925060608601359150608086013561106a81610bf2565b809150509295509295909350565b60006020828403121561108a57600080fd5b5035919050565b600082516110a3818460208701610b21565b919091019291505056fea2646970667358221220529e00d0de540250fcd6bb1bc6c82445fd99d40d4cad89360e16c2f05de008a464736f6c63430008140033a2646970667358221220b5801e3fc5642600f26e8c20392754f68a726a73563450ad32ffdcb0258ca5fa64736f6c63430008140033";
        readonly sourceMap: "712:1542:1:-:0;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80630c65a1cb1462000033575b600080fd5b6200004a620000443660046200027f565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080888060200190518101906200007f9190620003f7565b60408051336020820152908101859052909150606001604051602081830303815290604052805190602001208a898989898987604051620000c09062000104565b620000d297969594939291906200041e565b8190604051809103906000f5905080158015620000f3573d6000803e3d6000fd5b509150505b98975050505050505050565b6119c4806200056083390190565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156200014f576200014f62000112565b60405290565b6001600160a01b03811681146200016b57600080fd5b50565b80356200017b8162000155565b919050565b6000608082840312156200019357600080fd5b6040516080810181811067ffffffffffffffff82111715620001b957620001b962000112565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001fc57600080fd5b813567ffffffffffffffff808211156200021a576200021a62000112565b604051601f8301601f19908116603f0116810190828211818310171562000245576200024562000112565b816040528381528660208588010111156200025f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080888a036102c08112156200029e57600080fd5b6101e080821215620002af57600080fd5b620002b962000128565b9150620002c68b6200016e565b8252620002d660208c016200016e565b602083015260408b0135604083015260608b0135606083015260808b0135608083015260a08b013560a083015260c08b013560c083015260e08b013560e0830152610100808c0135818401525061012062000333818d016200016e565b90830152610140620003478c82016200016e565b908301526101606200035c8d8d830162000180565b9083015290985089013567ffffffffffffffff8111156200037c57600080fd5b6200038a8b828c01620001ea565b9750506200039c6102008a016200016e565b9550620003ad6102208a016200016e565b9450620003be6102408a016200016e565b9350620003cf6102608a016200016e565b9250620003e06102808a016200016e565b91506102a089013590509295985092959890939650565b6000602082840312156200040a57600080fd5b8151620004178162000155565b9392505050565b87516001600160a01b031681526102a0810160208901516200044b60208401826001600160a01b03169052565b5060408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a01518184015250610120808a0151620004b0828501826001600160a01b03169052565b5050610140898101516001600160a01b03811684830152505061016089810151805184830152602081015161018085015260408101516101a085015260608101516101c085015250506001600160a01b0388166101e08301526001600160a01b0387166102008301526001600160a01b0386166102208301526001600160a01b0385166102408301526001600160a01b0384166102608301526001600160a01b038316610280830152620000f856fe6103006040523480156200001257600080fd5b50604051620019c4380380620019c48339810160408190526200003591620005e9565b600160005586516001600160a01b0390811660809081526060808a015161018052908901516101a05260a0808a01516101c05260e0808b015190915260c0808b01519052610100808b0151909152610160808b0180515190925281516020908101516101209081528351604090810151610140908152945190950151909252808c0151851661020052838c015161022052908b0151600880546001600160a01b031916918616919091179055908a015183166101e0528883166102405287831661026052868316610280528583166102a0528483166102c0529183166102e081905281516338d52e0f60e01b8152915190926338d52e0f92600480820193918290030181865afa1580156200014e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017491906200073f565b6001600160a01b031687600001516001600160a01b031614620001aa57604051630722152560e11b815260040160405180910390fd5b6102e0518751620001c9916001600160a01b03909116906001620001d6565b50505050505050620007b4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002309085908390620002a216565b6200029c57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002909186916200035316565b6200029c848262000353565b50505050565b6000806000846001600160a01b031684604051620002c191906200075f565b6000604051808303816000865af19150503d806000811462000300576040519150601f19603f3d011682016040523d82523d6000602084013e62000305565b606091505b5091509150818015620003335750805115806200033357508080602001905181019062000333919062000790565b80156200034a57506000856001600160a01b03163b115b95945050505050565b60006200036a6001600160a01b03841683620003c6565b905080516000141580156200039257508080602001905181019062000390919062000790565b155b15620003c157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6060620003d683836000620003dd565b9392505050565b606081471015620004045760405163cd78605960e01b8152306004820152602401620003b8565b600080856001600160a01b031684866040516200042291906200075f565b60006040518083038185875af1925050503d806000811462000461576040519150601f19603f3d011682016040523d82523d6000602084013e62000466565b606091505b5090925090506200047986838362000483565b9695505050505050565b6060826200049c576200049682620004e7565b620003d6565b8151158015620004b457506001600160a01b0384163b155b15620004df57604051639996b31560e01b81526001600160a01b0385166004820152602401620003b8565b5080620003d6565b805115620004f85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60405161018081016001600160401b03811182821017156200054657634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200051157600080fd5b80516200056f816200054c565b919050565b6000608082840312156200058757600080fd5b604051608081016001600160401b0381118282101715620005b857634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008060008060008789036102a08112156200060757600080fd5b6101e0808212156200061857600080fd5b6200062262000514565b91506200062f8a62000562565b82526200063f60208b0162000562565b602083015260408a0151604083015260608a0151606083015260808a0151608083015260a08a015160a083015260c08a015160c083015260e08a015160e0830152610100808b015181840152506101206200069c818c0162000562565b90830152610140620006b08b820162000562565b90830152610160620006c58c8c830162000574565b8184015250819850620006da818b0162000562565b97505050620006ed610200890162000562565b9450620006fe610220890162000562565b93506200070f610240890162000562565b925062000720610260890162000562565b915062000731610280890162000562565b905092959891949750929550565b6000602082840312156200075257600080fd5b8151620003d6816200054c565b6000825160005b8181101562000782576020818601810151858301520162000766565b506000920191825250919050565b600060208284031215620007a357600080fd5b81518015158114620003d657600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e0516110e3620008e16000396000505060008181610601015261099c015260008181610546015281816107cb01526109660152600081816104ff0152818161070301526109f60152600081816105ad0152818161066d01526107680152600081816101ce015281816103900152818161063d0152818161069f015281816106d1015281816107370152818161079b015281816107fc0152818161093401526109c5015260005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110e36000f3fe6080604052600436106101b75760003560e01c80639cd241af116100ec578063dbbe80701161008a578063eac3e79911610064578063eac3e7991461059b578063ed64bab2146105cf578063f3f70707146105ef578063f698da2514610623576101b7565b8063dbbe807014610568578063ded06231146103ca578063e44808bc1461057b576101b7565b8063ab033ea9116100c6578063ab033ea9146102c7578063cba2e58d14610521578063cbc1343414610304578063d899e11214610534576101b7565b80639cd241af146104cd578063a22cb4651461047a578063a6e8a859146104ed576101b7565b806330adf81f116101595780634ed2d6ac116101335780634ed2d6ac1461045f5780637180c8ca1461047a57806377d05ff41461049a5780639032c726146104ad576101b7565b806330adf81f146103f85780633e691db91461042c5780634c2ac1d91461044c576101b7565b806317fad7fc1161019557806317fad7fc1461033e5780631c0f12b61461035e57806321b57d531461037e57806329b23fc1146103ca576101b7565b806301681a62146102c757806302329a29146102e9578063074a6de914610304575b3480156101c357600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610206929190610ac4565b600060405180830381855af49150503d8060008114610241576040519150601f19603f3d011682016040523d82523d6000602084013e610246565b606091505b5091509150811561026a57604051638bb0a34b60e01b815260040160405180910390fd5b600061027582610ad4565b90506001600160e01b03198116636e64089360e11b1461029757815160208301fd5b8151600319810160048401908152926102b891810160200190602401610b45565b80519650602001945050505050f35b3480156102d357600080fd5b506102e76102e2366004610c0a565b610638565b005b3480156102f557600080fd5b506102e76102e2366004610c43565b34801561031057600080fd5b5061032461031f366004610c70565b610665565b604080519283526020830191909152015b60405180910390f35b34801561034a57600080fd5b506102e7610359366004610d0c565b61069a565b34801561036a57600080fd5b506102e7610379366004610da1565b6106cc565b34801561038a57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610335565b3480156103d657600080fd5b506103ea6103e5366004610de9565b6106fc565b604051908152602001610335565b34801561040457600080fd5b506103ea7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561043857600080fd5b506103ea610447366004610e43565b610730565b6103ea61045a366004610e80565b610761565b34801561046b57600080fd5b506102e7610379366004610ee4565b34801561048657600080fd5b506102e7610495366004610f2e565b610796565b6103ea6104a8366004610c70565b6107c4565b3480156104b957600080fd5b506102e76104c8366004610f63565b6107f7565b3480156104d957600080fd5b506102e76104e8366004610fe1565b61092f565b3480156104f957600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b61032461052f366004610de9565b61095e565b34801561054057600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b610324610576366004610de9565b610994565b34801561058757600080fd5b506102e7610596366004611019565b6109c0565b3480156105a757600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105db57600080fd5b506102e76105ea366004611078565b6109f1565b3480156105fb57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561062f57600080fd5b506103ea610a1a565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050565b6000806106917f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50935093915050565b6106c37f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050505050565b6106f57f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050505050565b60006107277f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50949350505050565b600061075b7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50919050565b600061078c7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5095945050505050565b6107bf7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050565b60006107ef7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661082c610a1a565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108d59190611091565b600060405180830381855af49150503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b50915091508161092757805160208201fd5b805160208201f35b6109587f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5094509492505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b6109e97f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050505050565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108d59291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b035780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b3c578181015183820152602001610b24565b50506000910152565b600060208284031215610b5757600080fd5b815167ffffffffffffffff80821115610b6f57600080fd5b818401915084601f830112610b8357600080fd5b815181811115610b9557610b95610b0b565b604051601f8201601f19908116603f01168101908382118183101715610bbd57610bbd610b0b565b81604052828152876020848701011115610bd657600080fd5b610be7836020830160208801610b21565b979650505050505050565b6001600160a01b0381168114610c0757600080fd5b50565b600060208284031215610c1c57600080fd5b8135610c2781610bf2565b9392505050565b80358015158114610c3e57600080fd5b919050565b600060208284031215610c5557600080fd5b610c2782610c2e565b60006060828403121561075b57600080fd5b600080600060608486031215610c8557600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610caa57600080fd5b610cb686828701610c5e565b9150509250925092565b60008083601f840112610cd257600080fd5b50813567ffffffffffffffff811115610cea57600080fd5b6020830191508360208260051b8501011115610d0557600080fd5b9250929050565b60008060008060008060808789031215610d2557600080fd5b8635610d3081610bf2565b95506020870135610d4081610bf2565b9450604087013567ffffffffffffffff80821115610d5d57600080fd5b610d698a838b01610cc0565b90965094506060890135915080821115610d8257600080fd5b50610d8f89828a01610cc0565b979a9699509497509295939492505050565b60008060008060808587031215610db757600080fd5b843593506020850135610dc981610bf2565b92506040850135610dd981610bf2565b9396929550929360600135925050565b60008060008060808587031215610dff57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e2b57600080fd5b610e3787828801610c5e565b91505092959194509250565b600060208284031215610e5557600080fd5b813567ffffffffffffffff811115610e6c57600080fd5b610e7884828501610c5e565b949350505050565b600080600080600060a08688031215610e9857600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610ecb57600080fd5b610ed788828901610c5e565b9150509295509295909350565b60008060008060808587031215610efa57600080fd5b843593506020850135610f0c81610bf2565b9250604085013591506060850135610f2381610bf2565b939692955090935050565b60008060408385031215610f4157600080fd5b8235610f4c81610bf2565b9150610f5a60208401610c2e565b90509250929050565b600080600080600080600060e0888a031215610f7e57600080fd5b8735610f8981610bf2565b96506020880135610f9981610bf2565b9550610fa760408901610c2e565b945060608801359350608088013560ff81168114610fc457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610ff657600080fd5b83359250602084013561100881610bf2565b929592945050506040919091013590565b600080600080600060a0868803121561103157600080fd5b85359450602086013561104381610bf2565b9350604086013561105381610bf2565b925060608601359150608086013561106a81610bf2565b809150509295509295909350565b60006020828403121561108a57600080fd5b5035919050565b600082516110a3818460208701610b21565b919091019291505056fea2646970667358221220529e00d0de540250fcd6bb1bc6c82445fd99d40d4cad89360e16c2f05de008a464736f6c63430008140033a2646970667358221220b5801e3fc5642600f26e8c20392754f68a726a73563450ad32ffdcb0258ca5fa64736f6c63430008140033";
        readonly sourceMap: "712:1542:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:891;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4248:32:182;;;4230:51;;4218:2;4203:18;1361:891:1;;;;;;;;1634:7;1653:13;1680:10;1669:33;;;;;;;;;;;;:::i;:::-;1939:29;;;1950:10;1939:29;;;4738:51:182;4805:18;;;4798:34;;;1653:49:1;;-1:-1:-1;4711:18:182;;1939:29:1;;;;;;;;;;;;1929:40;;;;;;2009:7;2038:8;2068;2098;2128;2158;2197:5;1880:341;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:533;;;1361:891;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:127:182:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;292:18;277:34;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:139::-;-1:-1:-1;;;;;484:31:182;;474:42;;464:70;;530:1;527;520:12;464:70;401:139;:::o;545:150::-;621:20;;650:39;621:20;650:39;:::i;:::-;545:150;;;:::o;700:601::-;751:5;799:4;787:9;782:3;778:19;774:30;771:50;;;817:1;814;807:12;771:50;850:2;844:9;892:4;884:6;880:17;963:6;951:10;948:22;927:18;915:10;912:34;909:62;906:88;;;974:18;;:::i;:::-;1014:10;1010:2;1003:22;;1043:6;1034:15;;1086:9;1073:23;1065:6;1058:39;1158:2;1147:9;1143:18;1130:32;1125:2;1117:6;1113:15;1106:57;1224:2;1213:9;1209:18;1196:32;1191:2;1183:6;1179:15;1172:57;1290:2;1279:9;1275:18;1262:32;1257:2;1249:6;1245:15;1238:57;;700:601;;;;:::o;1306:718::-;1348:5;1401:3;1394:4;1386:6;1382:17;1378:27;1368:55;;1419:1;1416;1409:12;1368:55;1455:6;1442:20;1481:18;1518:2;1514;1511:10;1508:36;;;1524:18;;:::i;:::-;1599:2;1593:9;1567:2;1653:13;;-1:-1:-1;;1649:22:182;;;1673:2;1645:31;1641:40;1629:53;;;1697:18;;;1717:22;;;1694:46;1691:72;;;1743:18;;:::i;:::-;1783:10;1779:2;1772:22;1818:2;1810:6;1803:18;1864:3;1857:4;1852:2;1844:6;1840:15;1836:26;1833:35;1830:55;;;1881:1;1878;1871:12;1830:55;1945:2;1938:4;1930:6;1926:17;1919:4;1911:6;1907:17;1894:54;1992:1;1985:4;1980:2;1972:6;1968:15;1964:26;1957:37;2012:6;2003:15;;;;;;1306:718;;;;:::o;2029:1941::-;2188:6;2196;2204;2212;2220;2228;2236;2244;2288:9;2279:7;2275:23;2318:3;2314:2;2310:12;2307:32;;;2335:1;2332;2325:12;2307:32;2358:6;2384:2;2380;2376:11;2373:31;;;2400:1;2397;2390:12;2373:31;2426:17;;:::i;:::-;2413:30;;2466:37;2493:9;2466:37;:::i;:::-;2459:5;2452:52;2536:46;2578:2;2567:9;2563:18;2536:46;:::i;:::-;2531:2;2524:5;2520:14;2513:70;2643:2;2632:9;2628:18;2615:32;2610:2;2603:5;2599:14;2592:56;2708:2;2697:9;2693:18;2680:32;2675:2;2668:5;2664:14;2657:56;2774:3;2763:9;2759:19;2746:33;2740:3;2733:5;2729:15;2722:58;2841:3;2830:9;2826:19;2813:33;2807:3;2800:5;2796:15;2789:58;2908:3;2897:9;2893:19;2880:33;2874:3;2867:5;2863:15;2856:58;2975:3;2964:9;2960:19;2947:33;2941:3;2934:5;2930:15;2923:58;3000:3;3063:2;3052:9;3048:18;3035:32;3030:2;3023:5;3019:14;3012:56;;3087:3;3122:46;3164:2;3153:9;3149:18;3122:46;:::i;:::-;3106:14;;;3099:70;3188:3;3223:46;3250:18;;;3223:46;:::i;:::-;3207:14;;;3200:70;3289:3;3324:51;3367:7;3347:18;;;3324:51;:::i;:::-;3308:14;;;3301:75;3312:5;;-1:-1:-1;3436:18:182;;3423:32;3478:18;3467:30;;3464:50;;;3510:1;3507;3500:12;3464:50;3533:49;3574:7;3565:6;3554:9;3550:22;3533:49;:::i;:::-;3523:59;;;3601:47;3643:3;3632:9;3628:19;3601:47;:::i;:::-;3591:57;;3667:47;3709:3;3698:9;3694:19;3667:47;:::i;:::-;3657:57;;3733:47;3775:3;3764:9;3760:19;3733:47;:::i;:::-;3723:57;;3799:47;3841:3;3830:9;3826:19;3799:47;:::i;:::-;3789:57;;3865:47;3907:3;3896:9;3892:19;3865:47;:::i;:::-;3855:57;;3959:3;3948:9;3944:19;3931:33;3921:43;;2029:1941;;;;;;;;;;;:::o;4292:267::-;4370:6;4423:2;4411:9;4402:7;4398:23;4394:32;4391:52;;;4439:1;4436;4429:12;4391:52;4471:9;4465:16;4490:39;4523:5;4490:39;:::i;:::-;4548:5;4292:267;-1:-1:-1;;;4292:267:182:o;5105:1779::-;5512:13;;-1:-1:-1;;;;;4041:31:182;4029:44;;5480:3;5465:19;;5584:4;5576:6;5572:17;5566:24;5599:54;5647:4;5636:9;5632:20;5618:12;-1:-1:-1;;;;;4041:31:182;4029:44;;3975:104;5599:54;;5709:4;5701:6;5697:17;5691:24;5684:4;5673:9;5669:20;5662:54;5772:4;5764:6;5760:17;5754:24;5747:4;5736:9;5732:20;5725:54;5835:4;5827:6;5823:17;5817:24;5810:4;5799:9;5795:20;5788:54;5898:4;5890:6;5886:17;5880:24;5873:4;5862:9;5858:20;5851:54;5961:4;5953:6;5949:17;5943:24;5936:4;5925:9;5921:20;5914:54;6024:4;6016:6;6012:17;6006:24;5999:4;5988:9;5984:20;5977:54;6050:6;6110:2;6102:6;6098:15;6092:22;6087:2;6076:9;6072:18;6065:50;;6134:6;6189:2;6181:6;6177:15;6171:22;6202:54;6252:2;6241:9;6237:18;6221:14;-1:-1:-1;;;;;4041:31:182;4029:44;;3975:104;6202:54;-1:-1:-1;;6275:6:182;6318:15;;;6312:22;-1:-1:-1;;;;;4041:31:182;;6378:18;;;4029:44;-1:-1:-1;;6416:6:182;6459:15;;;6453:22;4913:12;;6523:18;;;4901:25;4975:4;4964:16;;4958:23;4942:14;;;4935:47;5031:4;5020:16;;5014:23;4998:14;;;4991:47;5087:4;5076:16;;5070:23;5054:14;;;5047:47;-1:-1:-1;;;;;;;4041:31:182;;6593:3;6578:19;;4029:44;-1:-1:-1;;;;;4041:31:182;;6649:3;6634:19;;4029:44;-1:-1:-1;;;;;4041:31:182;;6705:3;6690:19;;4029:44;-1:-1:-1;;;;;4041:31:182;;6761:3;6746:19;;4029:44;-1:-1:-1;;;;;4041:31:182;;6817:3;6802:19;;4029:44;-1:-1:-1;;;;;4041:31:182;;6873:3;6858:19;;4029:44;6831:47;3975:104";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": "0c65a1cb";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_extraData\":\"The extra data that contains the ERC4626 vault.\",\"_salt\":\"The create2 salt used in the deployment.\",\"_target0\":\"The target0 address.\",\"_target1\":\"The target1 address.\",\"_target2\":\"The target2 address.\",\"_target3\":\"The target3 address.\",\"_target4\":\"The target4 address.\"},\"returns\":{\"_0\":\"The address of the newly deployed ERC4626Hyperdrive instance.\"}}},\"title\":\"ERC4626HyperdriveCoreDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"}},\"notice\":\"The core deployer for the ERC4626Hyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/erc4626/ERC4626HyperdriveCoreDeployer.sol\":\"ERC4626HyperdriveCoreDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/erc4626/ERC4626HyperdriveCoreDeployer.sol\":{\"keccak256\":\"0xb14018bcc3dd9f82d847e502108515ddcaa56830e2256d17b9210d8e41fcbe66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d48fa9838c195b8ae4577e30bdcc45a115095f82488e19fd5bdefcd3f1341664\",\"dweb:/ipfs/QmcxPLJNAPN7Gv6rqjsMoKCNSrFQKiSmwcePwrGEXxNo3k\"]},\"contracts/src/external/Hyperdrive.sol\":{\"keccak256\":\"0x1f3a60886fc6733bfb62ab8424aa8c37654278b7cc445d490f8af55a5001ab9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d1ce4a76f0078526f191f4f341ecf353c6322be0aaf68493d4a473e55ed1ed13\",\"dweb:/ipfs/QmfKhUhGH7P6CiUF58T8Yw17CfoHoUu5KNp2DPvbsyiRZJ\"]},\"contracts/src/external/HyperdriveTarget0.sol\":{\"keccak256\":\"0xea27bb5ed4b35c9f1a4d42102108f07289520ab27e8e33fcac6809f8123955d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://488203c6bcf5d3cbb092800a9457e77cde06a80f406794cea42ed86b839a824b\",\"dweb:/ipfs/QmRGZNWhrAhubpWvkQtCryUMWG4XKscSEYJ9uxePHzozDy\"]},\"contracts/src/instances/erc4626/ERC4626Base.sol\":{\"keccak256\":\"0xee1d1cbc761adf6eec60161512631235beb00d0655ef3dcd0ec7531c4048304f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://278e515459a4d84a0c44da78949247ece0be57fe16fa9afd1a1c39f14e6f79d7\",\"dweb:/ipfs/QmQhSrHbgLEHzM6sLFmAwgvDycGkYDVXhHrdFj2T3vgZuT\"]},\"contracts/src/instances/erc4626/ERC4626Hyperdrive.sol\":{\"keccak256\":\"0x1e8ed5e6af9e6ea940c6d5e9431b28c698b56207ca380f1ccc0a555132790278\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6aa6f3f295f7be833f832926512418a3c8f0628891b2af06d5e5f138d2de1b4d\",\"dweb:/ipfs/QmQvB7gGmTVVXgZQXjCYWgzCuwhLmtwWBVn72AifZn9zC9\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3\",\"dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP\"]},\"contracts/src/interfaces/IERC4626Hyperdrive.sol\":{\"keccak256\":\"0xc7f5a5cbfc5ba21f72fc7699d616e2483d4589514a14b6e39f624d0f4d9453e7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4d7b144f357e86bfd23c805bb670226aa0c87b078babcd4dd3ec8b8f0b3374f\",\"dweb:/ipfs/QmTYNfB4ABRtPjCVck2uq5wQA8PvxBS45mPkVevc82TTFa\"]},\"contracts/src/interfaces/IERC4626HyperdriveCore.sol\":{\"keccak256\":\"0x94cce9f221023ebf9d4ed4fbafac76d67aee4ee0aa7771c89fcd2d374dfb490a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ed09d2369f7e9c057d20b0c069f6b9e5242d4c9cd85b3bd49ace51ad16fdba0\",\"dweb:/ipfs/QmNzy2ewTJePinzG4L4SAfxxBySPFJW5Shxb5w4ocBgn5F\"]},\"contracts/src/interfaces/IERC4626HyperdriveRead.sol\":{\"keccak256\":\"0x2039eef677ba37898e8e42dcb321d11d3c87f739122fd03726241252326dea33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31eacdd274ac0d6ff2969cb465e0fddb262d223f78f9001d7252bd7370449c73\",\"dweb:/ipfs/QmVNRFMvXk1r8h9pCdSsRhQr5rkj8XgGpNoLwhb6Q6Hzbk\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213\",\"dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb\",\"dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8\",\"dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x8807f9479246301d783b015d6b7f2d7f7e03ab3685302848c57436ebb36a1ce5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28a4f5d567a5c086ac2ae7e346c207422844865aa5e416909c522556245f8fc9\",\"dweb:/ipfs/QmUXZ2aeMFh86LCxyB4xQTuU4fR5xTcN9VwVtKzZNkv1dX\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0xfc6947a6bfff9ca937fc2654ee56203dbc2ffc3c8bffe40c1334ebc9c81804bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29d5b70c6cb40ede4e496cbeee4937c5318b43536a450d7c246166d326c85fa\",\"dweb:/ipfs/QmcDD9Bs4Gueepjs92CYJC9UFBMFYSN1QfbfqBJMQECkWj\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7\",\"dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x800d540f89ed4f6f40376e0e586246ab48b79a78f1fb4b7ff979b350fafb8a12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4aa17285692fa2872fe544d4f4b8fa2b29d68be5380806c804465788e2bdb1ba\",\"dweb:/ipfs/Qmag8aW8ADj9grs9vSL33mpM2F3kbFjh6ePKGGv7pXAGdV\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0x20aad0da5f27cbdded488149694f0c126bfada17ebea0a690f5386a19b826ed0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de8345bda127a4c5c101fb2668ede0011dbd82ff1ca3dcabd37905d56485efba\",\"dweb:/ipfs/QmYc3Jkm8c5FB1oEZwgWTNGEa8q96WWEJNyjumD8nirBdk\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d\",\"dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0xa6a716eac09df69f29b4fd76314104895b18c350679132de2db805e673d3650c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d1e6f1092fa727453030eca383b77182755c972b83b74e6d3cf5937cc50caca\",\"dweb:/ipfs/QmNk5UeZ9ZzNLuivQQjkihaVrQ6y1pnFUn1PdWvpfDJnSU\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d\",\"dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xe86d38d659ce3191d0423a4ee9b6592218a0e59dd72f3e0ec60cfa83809b266e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91d15d179f83429f36db12d5eac3f575727e16f1505d4cb1b95a11d0876c7534\",\"dweb:/ipfs/QmQDHYp8pgd9maivqkaH2mZ8qtb5ZEmK34n4oDmvAo8nrh\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x8fde664589dfd8a26b6d39aed585388f7c179bf508ffe7688dc6c796a68dc785\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3406b91898282977f3630976461eb344764c0f321d35588b1e31408b64f64263\",\"dweb:/ipfs/QmVGGknjaaG9wnyPHUWAMpDJZ4tANu6hmEQcUU1HnUQ5U5\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.PoolConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialVaultSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _extraData: "The extra data that contains the ERC4626 vault.";
                            readonly _salt: "The create2 salt used in the deployment.";
                            readonly _target0: "The target0 address.";
                            readonly _target1: "The target1 address.";
                            readonly _target2: "The target2 address.";
                            readonly _target3: "The target3 address.";
                            readonly _target4: "The target4 address.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed ERC4626Hyperdrive instance.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveCoreDeployer.sol": "ERC4626HyperdriveCoreDeployer";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/erc4626/ERC4626HyperdriveCoreDeployer.sol": {
                readonly keccak256: "0xb14018bcc3dd9f82d847e502108515ddcaa56830e2256d17b9210d8e41fcbe66";
                readonly urls: readonly ["bzz-raw://d48fa9838c195b8ae4577e30bdcc45a115095f82488e19fd5bdefcd3f1341664", "dweb:/ipfs/QmcxPLJNAPN7Gv6rqjsMoKCNSrFQKiSmwcePwrGEXxNo3k"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/Hyperdrive.sol": {
                readonly keccak256: "0x1f3a60886fc6733bfb62ab8424aa8c37654278b7cc445d490f8af55a5001ab9b";
                readonly urls: readonly ["bzz-raw://d1ce4a76f0078526f191f4f341ecf353c6322be0aaf68493d4a473e55ed1ed13", "dweb:/ipfs/QmfKhUhGH7P6CiUF58T8Yw17CfoHoUu5KNp2DPvbsyiRZJ"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/HyperdriveTarget0.sol": {
                readonly keccak256: "0xea27bb5ed4b35c9f1a4d42102108f07289520ab27e8e33fcac6809f8123955d8";
                readonly urls: readonly ["bzz-raw://488203c6bcf5d3cbb092800a9457e77cde06a80f406794cea42ed86b839a824b", "dweb:/ipfs/QmRGZNWhrAhubpWvkQtCryUMWG4XKscSEYJ9uxePHzozDy"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/erc4626/ERC4626Base.sol": {
                readonly keccak256: "0xee1d1cbc761adf6eec60161512631235beb00d0655ef3dcd0ec7531c4048304f";
                readonly urls: readonly ["bzz-raw://278e515459a4d84a0c44da78949247ece0be57fe16fa9afd1a1c39f14e6f79d7", "dweb:/ipfs/QmQhSrHbgLEHzM6sLFmAwgvDycGkYDVXhHrdFj2T3vgZuT"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/erc4626/ERC4626Hyperdrive.sol": {
                readonly keccak256: "0x1e8ed5e6af9e6ea940c6d5e9431b28c698b56207ca380f1ccc0a555132790278";
                readonly urls: readonly ["bzz-raw://6aa6f3f295f7be833f832926512418a3c8f0628891b2af06d5e5f138d2de1b4d", "dweb:/ipfs/QmQvB7gGmTVVXgZQXjCYWgzCuwhLmtwWBVn72AifZn9zC9"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC4626.sol": {
                readonly keccak256: "0x7d99427dc97cc1b469d205de5ced0eb15c6e305d0a7ef73d45fe7ef47ce7231e";
                readonly urls: readonly ["bzz-raw://c7726091d2f569ff79057a693324886e2a5558c586684460b51cd20612be59d3", "dweb:/ipfs/QmZv6BBe22fZRaC5iYiTuZMD2ZgUXvMBHjwZLikVSoXjDP"];
                readonly license: "GPL-2.0-or-later";
            };
            readonly "contracts/src/interfaces/IERC4626Hyperdrive.sol": {
                readonly keccak256: "0xc7f5a5cbfc5ba21f72fc7699d616e2483d4589514a14b6e39f624d0f4d9453e7";
                readonly urls: readonly ["bzz-raw://a4d7b144f357e86bfd23c805bb670226aa0c87b078babcd4dd3ec8b8f0b3374f", "dweb:/ipfs/QmTYNfB4ABRtPjCVck2uq5wQA8PvxBS45mPkVevc82TTFa"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC4626HyperdriveCore.sol": {
                readonly keccak256: "0x94cce9f221023ebf9d4ed4fbafac76d67aee4ee0aa7771c89fcd2d374dfb490a";
                readonly urls: readonly ["bzz-raw://5ed09d2369f7e9c057d20b0c069f6b9e5242d4c9cd85b3bd49ace51ad16fdba0", "dweb:/ipfs/QmNzy2ewTJePinzG4L4SAfxxBySPFJW5Shxb5w4ocBgn5F"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC4626HyperdriveRead.sol": {
                readonly keccak256: "0x2039eef677ba37898e8e42dcb321d11d3c87f739122fd03726241252326dea33";
                readonly urls: readonly ["bzz-raw://31eacdd274ac0d6ff2969cb465e0fddb262d223f78f9001d7252bd7370449c73", "dweb:/ipfs/QmVNRFMvXk1r8h9pCdSsRhQr5rkj8XgGpNoLwhb6Q6Hzbk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317";
                readonly urls: readonly ["bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213", "dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76";
                readonly urls: readonly ["bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb", "dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56";
                readonly urls: readonly ["bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8", "dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveAdmin.sol": {
                readonly keccak256: "0x8807f9479246301d783b015d6b7f2d7f7e03ab3685302848c57436ebb36a1ce5";
                readonly urls: readonly ["bzz-raw://28a4f5d567a5c086ac2ae7e346c207422844865aa5e416909c522556245f8fc9", "dweb:/ipfs/QmUXZ2aeMFh86LCxyB4xQTuU4fR5xTcN9VwVtKzZNkv1dX"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveBase.sol": {
                readonly keccak256: "0xfc6947a6bfff9ca937fc2654ee56203dbc2ffc3c8bffe40c1334ebc9c81804bc";
                readonly urls: readonly ["bzz-raw://b29d5b70c6cb40ede4e496cbeee4937c5318b43536a450d7c246166d326c85fa", "dweb:/ipfs/QmcDD9Bs4Gueepjs92CYJC9UFBMFYSN1QfbfqBJMQECkWj"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveCheckpoint.sol": {
                readonly keccak256: "0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649";
                readonly urls: readonly ["bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7", "dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLP.sol": {
                readonly keccak256: "0x800d540f89ed4f6f40376e0e586246ab48b79a78f1fb4b7ff979b350fafb8a12";
                readonly urls: readonly ["bzz-raw://4aa17285692fa2872fe544d4f4b8fa2b29d68be5380806c804465788e2bdb1ba", "dweb:/ipfs/Qmag8aW8ADj9grs9vSL33mpM2F3kbFjh6ePKGGv7pXAGdV"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLong.sol": {
                readonly keccak256: "0x20aad0da5f27cbdded488149694f0c126bfada17ebea0a690f5386a19b826ed0";
                readonly urls: readonly ["bzz-raw://de8345bda127a4c5c101fb2668ede0011dbd82ff1ca3dcabd37905d56485efba", "dweb:/ipfs/QmYc3Jkm8c5FB1oEZwgWTNGEa8q96WWEJNyjumD8nirBdk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveMultiToken.sol": {
                readonly keccak256: "0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373";
                readonly urls: readonly ["bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d", "dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveShort.sol": {
                readonly keccak256: "0xa6a716eac09df69f29b4fd76314104895b18c350679132de2db805e673d3650c";
                readonly urls: readonly ["bzz-raw://5d1e6f1092fa727453030eca383b77182755c972b83b74e6d3cf5937cc50caca", "dweb:/ipfs/QmNk5UeZ9ZzNLuivQQjkihaVrQ6y1pnFUn1PdWvpfDJnSU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveStorage.sol": {
                readonly keccak256: "0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f";
                readonly urls: readonly ["bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d", "dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/AssetId.sol": {
                readonly keccak256: "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b";
                readonly urls: readonly ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Errors.sol": {
                readonly keccak256: "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0";
                readonly urls: readonly ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/HyperdriveMath.sol": {
                readonly keccak256: "0xe86d38d659ce3191d0423a4ee9b6592218a0e59dd72f3e0ec60cfa83809b266e";
                readonly urls: readonly ["bzz-raw://91d15d179f83429f36db12d5eac3f575727e16f1505d4cb1b95a11d0876c7534", "dweb:/ipfs/QmQDHYp8pgd9maivqkaH2mZ8qtb5ZEmK34n4oDmvAo8nrh"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/LPMath.sol": {
                readonly keccak256: "0x8fde664589dfd8a26b6d39aed585388f7c179bf508ffe7688dc6c796a68dc785";
                readonly urls: readonly ["bzz-raw://3406b91898282977f3630976461eb344764c0f321d35588b1e31408b64f64263", "dweb:/ipfs/QmVGGknjaaG9wnyPHUWAMpDJZ4tANu6hmEQcUU1HnUQ5U5"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/YieldSpaceMath.sol": {
                readonly keccak256: "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891";
                readonly urls: readonly ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                readonly keccak256: "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7";
                readonly urls: readonly ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                readonly keccak256: "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80";
                readonly urls: readonly ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                readonly keccak256: "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70";
                readonly urls: readonly ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                readonly keccak256: "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2";
                readonly urls: readonly ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                readonly keccak256: "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff";
                readonly urls: readonly ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                readonly keccak256: "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386";
                readonly urls: readonly ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                readonly keccak256: "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721";
                readonly urls: readonly ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                readonly keccak256: "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2";
                readonly urls: readonly ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                readonly keccak256: "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236";
                readonly urls: readonly ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/erc4626/ERC4626HyperdriveCoreDeployer.sol";
        readonly id: 990;
        readonly exportedSymbols: {
            readonly ERC4626Hyperdrive: readonly [5923];
            readonly ERC4626HyperdriveCoreDeployer: readonly [989];
            readonly IERC4626: readonly [7203];
            readonly IHyperdrive: readonly [7616];
            readonly IHyperdriveCoreDeployer: readonly [7812];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:2216:1";
        readonly nodes: readonly [{
            readonly id: 916;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:1";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 918;
            readonly nodeType: "ImportDirective";
            readonly src: "64:57:1";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IERC4626.sol";
            readonly file: "../../interfaces/IERC4626.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 990;
            readonly sourceUnit: 7204;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 917;
                    readonly name: "IERC4626";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7203;
                    readonly src: "73:8:1";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 920;
            readonly nodeType: "ImportDirective";
            readonly src: "122:63:1";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 990;
            readonly sourceUnit: 7617;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 919;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7616;
                    readonly src: "131:11:1";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 922;
            readonly nodeType: "ImportDirective";
            readonly src: "186:87:1";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol";
            readonly file: "../../interfaces/IHyperdriveCoreDeployer.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 990;
            readonly sourceUnit: 7813;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 921;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7812;
                    readonly src: "195:23:1";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 924;
            readonly nodeType: "ImportDirective";
            readonly src: "274:82:1";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/instances/erc4626/ERC4626Hyperdrive.sol";
            readonly file: "../../instances/erc4626/ERC4626Hyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 990;
            readonly sourceUnit: 5924;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 923;
                    readonly name: "ERC4626Hyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 5923;
                    readonly src: "283:17:1";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 989;
            readonly nodeType: "ContractDefinition";
            readonly src: "712:1542:1";
            readonly nodes: readonly [{
                readonly id: 988;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1361:891:1";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 987;
                    readonly nodeType: "Block";
                    readonly src: "1643:609:1";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [951];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 951;
                            readonly mutability: "mutable";
                            readonly name: "vault";
                            readonly nameLocation: "1661:5:1";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 987;
                            readonly src: "1653:13:1";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly typeName: {
                                readonly id: 950;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1653:7:1";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 959;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 954;
                                readonly name: "_extraData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 933;
                                readonly src: "1680:10:1";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly components: readonly [{
                                    readonly id: 956;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "1693:7:1";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 955;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "1693:7:1";
                                        readonly typeDescriptions: {};
                                    };
                                }];
                                readonly id: 957;
                                readonly isConstant: false;
                                readonly isInlineArray: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly lValueRequested: false;
                                readonly nodeType: "TupleExpression";
                                readonly src: "1692:9:1";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_type$_t_address_$";
                                    readonly typeString: "type(address)";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_type$_t_address_$";
                                    readonly typeString: "type(address)";
                                }];
                                readonly expression: {
                                    readonly id: 952;
                                    readonly name: "abi";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -1;
                                    readonly src: "1669:3:1";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_abi";
                                        readonly typeString: "abi";
                                    };
                                };
                                readonly id: 953;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1673:6:1";
                                readonly memberName: "decode";
                                readonly nodeType: "MemberAccess";
                                readonly src: "1669:10:1";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_abidecode_pure$__$returns$__$";
                                    readonly typeString: "function () pure";
                                };
                            };
                            readonly id: 958;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1669:33:1";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address_payable";
                                readonly typeString: "address payable";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "1653:49:1";
                    }, {
                        readonly expression: {
                            readonly components: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 974;
                                        readonly name: "_config";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 931;
                                        readonly src: "2009:7:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        };
                                    }, {
                                        readonly id: 975;
                                        readonly name: "_target0";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 935;
                                        readonly src: "2038:8:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 976;
                                        readonly name: "_target1";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 937;
                                        readonly src: "2068:8:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 977;
                                        readonly name: "_target2";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 939;
                                        readonly src: "2098:8:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 978;
                                        readonly name: "_target3";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 941;
                                        readonly src: "2128:8:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 979;
                                        readonly name: "_target4";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 943;
                                        readonly src: "2158:8:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly id: 981;
                                            readonly name: "vault";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 951;
                                            readonly src: "2197:5:1";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }];
                                            readonly id: 980;
                                            readonly name: "IERC4626";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7203;
                                            readonly src: "2188:8:1";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IERC4626_$7203_$";
                                                readonly typeString: "type(contract IERC4626)";
                                            };
                                        };
                                        readonly id: 982;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "2188:15:1";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                            readonly typeString: "contract IERC4626";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                            readonly typeString: "contract IERC4626";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_contract$_IERC4626_$7203";
                                                readonly typeString: "contract IERC4626";
                                            }];
                                            readonly id: 964;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "NewExpression";
                                            readonly src: "1880:21:1";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$7407_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_IERC4626_$7203_$returns$_t_contract$_ERC4626Hyperdrive_$5923_$";
                                                readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract IERC4626) returns (contract ERC4626Hyperdrive)";
                                            };
                                            readonly typeName: {
                                                readonly id: 963;
                                                readonly nodeType: "UserDefinedTypeName";
                                                readonly pathNode: {
                                                    readonly id: 962;
                                                    readonly name: "ERC4626Hyperdrive";
                                                    readonly nameLocations: readonly ["1884:17:1"];
                                                    readonly nodeType: "IdentifierPath";
                                                    readonly referencedDeclaration: 5923;
                                                    readonly src: "1884:17:1";
                                                };
                                                readonly referencedDeclaration: 5923;
                                                readonly src: "1884:17:1";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_contract$_ERC4626Hyperdrive_$5923";
                                                    readonly typeString: "contract ERC4626Hyperdrive";
                                                };
                                            };
                                        };
                                        readonly id: 973;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["salt"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 968;
                                                        readonly name: "msg";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -15;
                                                        readonly src: "1950:3:1";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_message";
                                                            readonly typeString: "msg";
                                                        };
                                                    };
                                                    readonly id: 969;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "1954:6:1";
                                                    readonly memberName: "sender";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "1950:10:1";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                }, {
                                                    readonly id: 970;
                                                    readonly name: "_salt";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 945;
                                                    readonly src: "1962:5:1";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    }, {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 966;
                                                        readonly name: "abi";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -1;
                                                        readonly src: "1939:3:1";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_abi";
                                                            readonly typeString: "abi";
                                                        };
                                                    };
                                                    readonly id: 967;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "1943:6:1";
                                                    readonly memberName: "encode";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "1939:10:1";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                        readonly typeString: "function () pure returns (bytes memory)";
                                                    };
                                                };
                                                readonly id: 971;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "1939:29:1";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                }];
                                                readonly id: 965;
                                                readonly name: "keccak256";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -8;
                                                readonly src: "1929:9:1";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                                    readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                                };
                                            };
                                            readonly id: 972;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "1929:40:1";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly src: "1880:107:1";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$7407_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_IERC4626_$7203_$returns$_t_contract$_ERC4626Hyperdrive_$5923_$salt";
                                            readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract IERC4626) returns (contract ERC4626Hyperdrive)";
                                        };
                                    };
                                    readonly id: 983;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1880:341:1";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ERC4626Hyperdrive_$5923";
                                        readonly typeString: "contract ERC4626Hyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_ERC4626Hyperdrive_$5923";
                                        readonly typeString: "contract ERC4626Hyperdrive";
                                    }];
                                    readonly id: 961;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "1733:7:1";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 960;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "1733:7:1";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 984;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1733:502:1";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly id: 985;
                            readonly isConstant: false;
                            readonly isInlineArray: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "TupleExpression";
                            readonly src: "1719:526:1";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 949;
                        readonly id: 986;
                        readonly nodeType: "Return";
                        readonly src: "1712:533:1";
                    }];
                };
                readonly baseFunctions: readonly [7811];
                readonly documentation: {
                    readonly id: 928;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "784:572:1";
                    readonly text: "@notice Deploys a Hyperdrive instance with the given parameters.\n @param _config The configuration of the Hyperdrive pool.\n @param _extraData The extra data that contains the ERC4626 vault.\n @param _target0 The target0 address.\n @param _target1 The target1 address.\n @param _target2 The target2 address.\n @param _target3 The target3 address.\n @param _target4 The target4 address.\n @param _salt The create2 salt used in the deployment.\n @return The address of the newly deployed ERC4626Hyperdrive instance.";
                };
                readonly functionSelector: "0c65a1cb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deploy";
                readonly nameLocation: "1370:6:1";
                readonly parameters: {
                    readonly id: 946;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 931;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "1416:7:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1386:37:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolConfig";
                        };
                        readonly typeName: {
                            readonly id: 930;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 929;
                                readonly name: "IHyperdrive.PoolConfig";
                                readonly nameLocations: readonly ["1386:11:1", "1398:10:1"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7407;
                                readonly src: "1386:22:1";
                            };
                            readonly referencedDeclaration: 7407;
                            readonly src: "1386:22:1";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolConfig_$7407_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 933;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "1446:10:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1433:23:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 932;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1433:5:1";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 935;
                        readonly mutability: "mutable";
                        readonly name: "_target0";
                        readonly nameLocation: "1474:8:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1466:16:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 934;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1466:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 937;
                        readonly mutability: "mutable";
                        readonly name: "_target1";
                        readonly nameLocation: "1500:8:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1492:16:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 936;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1492:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 939;
                        readonly mutability: "mutable";
                        readonly name: "_target2";
                        readonly nameLocation: "1526:8:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1518:16:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 938;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1518:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 941;
                        readonly mutability: "mutable";
                        readonly name: "_target3";
                        readonly nameLocation: "1552:8:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1544:16:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 940;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1544:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 943;
                        readonly mutability: "mutable";
                        readonly name: "_target4";
                        readonly nameLocation: "1578:8:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1570:16:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 942;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1570:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 945;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "1604:5:1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1596:13:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 944;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1596:7:1";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1376:239:1";
                };
                readonly returnParameters: {
                    readonly id: 949;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 948;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 988;
                        readonly src: "1634:7:1";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 947;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1634:7:1";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1633:9:1";
                };
                readonly scope: 989;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 926;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nameLocations: readonly ["754:23:1"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 7812;
                    readonly src: "754:23:1";
                };
                readonly id: 927;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "754:23:1";
            }];
            readonly canonicalName: "ERC4626HyperdriveCoreDeployer";
            readonly contractDependencies: readonly [5923];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 925;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "358:354:1";
                readonly text: "@author DELV\n @title ERC4626HyperdriveCoreDeployer\n @notice The core deployer for the ERC4626Hyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [989, 7812];
            readonly name: "ERC4626HyperdriveCoreDeployer";
            readonly nameLocation: "721:29:1";
            readonly scope: 990;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 1;
};
//# sourceMappingURL=ERC4626HyperdriveCoreDeployer.d.ts.map