export const SafeCastTest = {
  abi: [
    {
      inputs: [],
      name: "WhaleBalanceExceeded",
      type: "error",
    },
    {
      inputs: [],
      name: "WhaleIsContract",
      type: "error",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      name: "log",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      name: "log_address",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256[]",
          name: "val",
          type: "uint256[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "int256[]",
          name: "val",
          type: "int256[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address[]",
          name: "val",
          type: "address[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      name: "log_bytes",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes32",
          name: "",
          type: "bytes32",
        },
      ],
      name: "log_bytes32",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "int256",
          name: "",
          type: "int256",
        },
      ],
      name: "log_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "address",
          name: "val",
          type: "address",
        },
      ],
      name: "log_named_address",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256[]",
          name: "val",
          type: "uint256[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256[]",
          name: "val",
          type: "int256[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "address[]",
          name: "val",
          type: "address[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "bytes",
          name: "val",
          type: "bytes",
        },
      ],
      name: "log_named_bytes",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "bytes32",
          name: "val",
          type: "bytes32",
        },
      ],
      name: "log_named_bytes32",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256",
          name: "val",
          type: "int256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "decimals",
          type: "uint256",
        },
      ],
      name: "log_named_decimal_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "val",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "decimals",
          type: "uint256",
        },
      ],
      name: "log_named_decimal_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256",
          name: "val",
          type: "int256",
        },
      ],
      name: "log_named_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "string",
          name: "val",
          type: "string",
        },
      ],
      name: "log_named_string",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "val",
          type: "uint256",
        },
      ],
      name: "log_named_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      name: "log_string",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "log_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      name: "logs",
      type: "event",
    },
    {
      inputs: [],
      name: "IS_TEST",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_value",
          type: "uint256",
        },
        {
          internalType: "int256",
          name: "_delta",
          type: "int256",
        },
        {
          internalType: "uint256",
          name: "_targetValue",
          type: "uint256",
        },
      ],
      name: "assertWithDelta",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "name",
          type: "string",
        },
      ],
      name: "createUser",
      outputs: [
        {
          internalType: "address",
          name: "_user",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeArtifacts",
      outputs: [
        {
          internalType: "string[]",
          name: "excludedArtifacts_",
          type: "string[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeContracts",
      outputs: [
        {
          internalType: "address[]",
          name: "excludedContracts_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeSenders",
      outputs: [
        {
          internalType: "address[]",
          name: "excludedSenders_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "failed",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "setUp",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "targetArtifactSelectors",
      outputs: [
        {
          components: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes4[]",
              name: "selectors",
              type: "bytes4[]",
            },
          ],
          internalType: "struct StdInvariant.FuzzSelector[]",
          name: "targetedArtifactSelectors_",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetArtifacts",
      outputs: [
        {
          internalType: "string[]",
          name: "targetedArtifacts_",
          type: "string[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetContracts",
      outputs: [
        {
          internalType: "address[]",
          name: "targetedContracts_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetSelectors",
      outputs: [
        {
          components: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes4[]",
              name: "selectors",
              type: "bytes4[]",
            },
          ],
          internalType: "struct StdInvariant.FuzzSelector[]",
          name: "targetedSelectors_",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetSenders",
      outputs: [
        {
          internalType: "address[]",
          name: "targetedSenders_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "num",
          type: "uint256",
        },
      ],
      name: "testSafeCastToUint128",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "test_toUint128",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "whale",
          type: "address",
        },
        {
          internalType: "contract IERC20",
          name: "token",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
      ],
      name: "whaleTransfer",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "whale",
          type: "address",
        },
        {
          internalType: "contract IERC20",
          name: "token",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
      ],
      name: "whaleTransfer",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bytecode: {
    object:
      "0x6080604081905260078054600160ff199182168117909255600b8054909116909117905563f877cb1960e01b90526020608452600f60a4526e1350525393915517d49410d7d55493608a1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d63f877cb1960e4600060405180830381865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b1919081019062000194565b602990620000c09082620002f8565b5060405163f877cb1960e01b815260206004820152600e60248201526d11d3d154931257d49410d7d5549360921b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f877cb1990606401600060405180830381865afa15801562000130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200015a919081019062000194565b602a90620001699082620002f8565b503480156200017757600080fd5b50620003c4565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620001a857600080fd5b82516001600160401b0380821115620001c057600080fd5b818501915085601f830112620001d557600080fd5b815181811115620001ea57620001ea6200017e565b604051601f8201601f19908116603f011681019083821181831017156200021557620002156200017e565b8160405282815288868487010111156200022e57600080fd5b600093505b8284101562000252578484018601518185018701529285019262000233565b600086848301015280965050505050505092915050565b600181811c908216806200027e57607f821691505b6020821081036200029f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f357600081815260208120601f850160051c81016020861015620002ce5750805b601f850160051c820191505b81811015620002ef57828155600101620002da565b5050505b505050565b81516001600160401b038111156200031457620003146200017e565b6200032c8162000325845462000269565b84620002a5565b602080601f8311600181146200036457600084156200034b5750858301515b600019600386901b1c1916600185901b178555620002ef565b600085815260208120601f198616915b82811015620003955788860151825594840194600190910190840162000374565b5085821015620003b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61257180620003d46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806385226c81116100a2578063ab75e7c311610071578063ab75e7c3146101f0578063b5508aa914610203578063ba414fa61461020b578063e20c9f7114610223578063fa7626d41461022b57600080fd5b806385226c81146101b85780638558cbba146101cd57806387fd4875146101e0578063916a17c6146101e857600080fd5b80633e5e3c23116100de5780633e5e3c23146101685780633f7286f414610170578063507ffba51461017857806366d9a9a0146101a357600080fd5b80630a9254e414610110578063107167601461011a5780631ed7831c146101405780633e5e0d2614610155575b600080fd5b610118610238565b005b61012d610128366004611dd2565b610504565b6040519081526020015b60405180910390f35b610148610587565b6040516101379190611e1d565b61012d610163366004611e6a565b6105e9565b610148610845565b6101486108a5565b61018b610186366004611ed3565b610905565b6040516001600160a01b039091168152602001610137565b6101ab610a1d565b6040516101379190611f84565b6101c0610b0c565b6040516101379190612087565b6101186101db3660046120e9565b610bdc565b610118610d79565b6101ab611231565b6101186101fe366004612102565b611317565b6101c061161d565b6102136116ed565b6040519015158152602001610137565b61014861181a565b6007546102139060ff1681565b61025e60405180604001604052806005815260200164616c69636560d81b815250610905565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623137b160e91b60208201526102a190610905565b601d80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b60208201526102e790610905565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623230b760e91b602082015261032a90610905565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b602082015261036d90610905565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506103bc604051806040016040528060088152602001673232b83637bcb2b960c11b815250610905565b602280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b602082015261040290610905565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b602082015261044e90610905565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b602082015261049890610905565b602480546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b60208201526104de90610905565b602580546001600160a01b0319166001600160a01b039290921691909117905542602855565b6040516370a0823160e01b81526001600160a01b03808516600483015260009161057f91869186918216906370a0823190602401602060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610579919061212e565b856105e9565b949350505050565b606060148054806020026020016040519081016040528092919081815260200182805480156105df57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c1575b5050505050905090565b6040516370a0823160e01b81526001600160a01b03858116600483015260009182918616906370a0823190602401602060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610658919061212e565b90508084111561067b5760405163188c93a560e31b815260040160405180910390fd5b6000805160206124c683398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0389166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b0389166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890528816925063a9059cbb91506044016020604051808303816000875af1158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190612147565b509295945050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b6000816040516020016109189190612170565b60408051601f198184030181529082905280516020909101206318caf8e360e31b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906109699084908690600401612183565b600060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b038416600482015269021e19e0c9bab24000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b50505050919050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610b035760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610aeb57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610aad5790505b50505050508152505081526020019060010190610a41565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610b03578382906000526020600020018054610b4f906121a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b906121a7565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b6000604051610bea90611db0565b604051809103906000f080158015610c06573d6000803e3d6000fd5b5090506001600160801b03821115610ceb576000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c6457600080fd5b505af1158015610c78573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600481018590526001600160a01b038416925063809fdd3391506024015b602060405180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce691906121e1565b505050565b60405163809fdd3360e01b8152600481018390526000906001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5791906121e1565b9050610ce6816001600160801b0316846001600160801b031661187a565b5050565b6000604051610d8790611db0565b604051809103906000f080158015610da3573d6000803e3d6000fd5b5060405163809fdd3360e01b81526000600482018190529192506001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1291906121e1565b9050610e286001600160801b038216600061187a565b60405163809fdd3360e01b8152600160048201526001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9191906121e1565b9050610ea76001600160801b038216600161187a565b60405163809fdd3360e01b81526001600160801b0360048201526001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1691906121e1565b9050610f2c6001600160801b038083169061187a565b6000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f7857600080fd5b505af1158015610f8c573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160801b60048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561104957600080fd5b505af115801561105d573d6000803e3d6000fd5b505060405163809fdd3360e01b815260001960048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160881b60048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160ff1b60048201526001600160a01b038516925063809fdd339150602401610ca5565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610b035760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156112ff57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116112c15790505b50505050508152505081526020019060010190611255565b6000821280159061134c576113478483101560405180606001604052806036815260200161250660369139611970565b611370565b61137082851160405180606001604052806027815260200161244d60279139611970565b60008161137d5784611387565b6113878486612220565b90506000821561139757856113aa565b6113a085612239565b6113aa9087612255565b9050808410806113b957508184115b15611432576113f4848260405180604001604052806013815260200172195e18d959591cc81b1bddd95c88189bdd5b99606a1b8152506119a3565b61142a848360405180604001604052806013815260200172195e18d959591cc81d5c1c195c88189bdd5b99606a1b8152506119da565b505050505050565b82156115215760006114448786612255565b9050858110156114f85760408051808201909152601a81527f507265636973696f6e20696e637265617365642062793a2025730000000000006020820152611495906114908389612255565b611a11565b6114c46040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b81525087611a56565b6114f36040518060400160405280600d81526020016c4e65772044656c74613a20257360981b81525082611a11565b61151b565b61151b838660405180606001604052806029815260200161247460299139611a9b565b5061142a565b600061152d8588612255565b905061153886612239565b8110156115f15761158d6040518060400160405280601a81526020017f507265636973696f6e20696e637265617365642062793a202573000000000000815250828861158390612239565b6114909190612255565b6115bc6040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b81525087611a56565b6115ec6040518060400160405280600e81526020016d4e65772044656c74613a202d257360901b81525082611a11565b611614565b611614828660405180606001604052806029815260200161249d60299139611a9b565b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610b03578382906000526020600020018054611660906121a7565b80601f016020809104026020016040519081016040528092919081815260200182805461168c906121a7565b80156116d95780601f106116ae576101008083540402835291602001916116d9565b820191906000526020600020905b8154815290600101906020018083116116bc57829003601f168201915b505050505081526020019060010190611641565b600754600090610100900460ff161561170f5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156118155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161179d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001612268565b60408051601f19818403018152908290526117b791612299565b6000604051808303816000865af19150503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b50915050808060200190518101906118119190612147565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b808214610d755760008051602061240d8339815191526040516118d99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290516000805160206124e68339815191529181900360800190a160408051818152600a91810191909152690808080808149a59da1d60b21b6060820152602081018290526000805160206124e6833981519152906080015b60405180910390a1610d75611ad1565b81610d755760008051602061242d8339815191528160405161199291906122b5565b60405180910390a1610d7582611bdd565b81831015610ce65760008051602061242d833981519152816040516119c891906122b5565b60405180910390a1610ce68383611c42565b81831115610ce65760008051602061242d833981519152816040516119ff91906122b5565b60405180910390a1610ce68383611d2b565b610d758282604051602401611a279291906122e4565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611d8b565b610d758282604051602401611a6c9291906122e4565b60408051601f198184030181529190526020810180516001600160e01b0316631e53134760e11b179052611d8b565b818314610ce65760008051602061242d83398151915281604051611abf91906122b5565b60405180910390a1610ce6838361187a565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611bcc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611b6b9291602001612268565b60408051601f1981840301815290829052611b8591612299565b6000604051808303816000865af19150503d8060008114611bc2576040519150601f19603f3d011682016040523d82523d6000602084013e611bc7565b606091505b505050505b6007805461ff001916610100179055565b80611c3f5760008051602061240d833981519152604051611c2f9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1611c3f611ad1565b50565b80821015610d755760008051602061240d833981519152604051611ca29060208082526022908201527f4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206124e68339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b6060820152602081018290526000805160206124e683398151915290608001611960565b80821115610d755760008051602061240d833981519152604051611ca29060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b611c3f8180516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6101068061230783390190565b6001600160a01b0381168114611c3f57600080fd5b600080600060608486031215611de757600080fd5b8335611df281611dbd565b92506020840135611e0281611dbd565b91506040840135611e1281611dbd565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611e5e5783516001600160a01b031683529284019291840191600101611e39565b50909695505050505050565b60008060008060808587031215611e8057600080fd5b8435611e8b81611dbd565b93506020850135611e9b81611dbd565b9250604085013591506060850135611eb281611dbd565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611ee557600080fd5b813567ffffffffffffffff80821115611efd57600080fd5b818401915084601f830112611f1157600080fd5b813581811115611f2357611f23611ebd565b604051601f8201601f19908116603f01168101908382118183101715611f4b57611f4b611ebd565b81604052828152876020848701011115611f6457600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561202857898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156120135783516001600160e01b0319168252928b019260019290920191908b0190611fe9565b50978a01979550505091870191600101611fac565b50919998505050505050505050565b60005b8381101561205257818101518382015260200161203a565b50506000910152565b60008151808452612073816020860160208601612037565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156120dc57603f198886030184526120ca85835161205b565b945092850192908501906001016120ae565b5092979650505050505050565b6000602082840312156120fb57600080fd5b5035919050565b60008060006060848603121561211757600080fd5b505081359360208301359350604090920135919050565b60006020828403121561214057600080fd5b5051919050565b60006020828403121561215957600080fd5b8151801515811461216957600080fd5b9392505050565b602081526000612169602083018461205b565b6001600160a01b038316815260406020820181905260009061057f9083018461205b565b600181811c908216806121bb57607f821691505b6020821081036121db57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121f357600080fd5b81516001600160801b038116811461216957600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156122335761223361220a565b92915050565b6000600160ff1b820161224e5761224e61220a565b5060000390565b818103818111156122335761223361220a565b6001600160e01b031983168152815160009061228b816004850160208701612037565b919091016004019392505050565b600082516122ab818460208701612037565b9190910192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000612169608083018461205b565b6040815260006122f7604083018561205b565b9050826020830152939250505056fe608060405234801561001057600080fd5b5060e78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063809fdd3314602d575b600080fd5b603c60383660046099565b6061565b6040516fffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000606a826070565b92915050565b6000600160801b8210609557604051630f0af95160e11b815260040160405180910390fd5b5090565b60006020828403121560aa57600080fd5b503591905056fea264697066735822122007c3e2c1c1767d5b87df864aff46b29215b9bca96730a502c6bbf344fe08e2a664736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35835f74617267657456616c75652073686f756c64206265206c657373207468616e205f76616c75656578706563746564207570706572426f756e6420746f206d61746368205f74617267657456616c75656578706563746564206c6f776572426f756e6420746f206d61746368205f74617267657456616c7565885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12db2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a85f74617267657456616c75652073686f756c642062652067726561746572207468616e206f7220657175616c20746f205f76616c7565a2646970667358221220613b0b2bd909e0575fe5c6164491ab50820f58988536ddcfb4ebf8191305034a64736f6c63430008130033",
    sourceMap:
      "279:985:157:-:0;;;;;1572:26:50;;;1594:4;-1:-1:-1;;1572:26:50;;;;;;;;3126:44:54;;;;;;;;;;;-1:-1:-1;;;1262:31:159;;216:2:165;1262:31:159;198:21:165;255:2;235:18;228:30;-1:-1:-1;;;274:18:165;267:45;1262:12:159;;329:18:165;1262:31:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1262:31:159;;;;;;;;;;;;:::i;:::-;1237:56;;;;;;:::i;:::-;-1:-1:-1;1323:30:159;;-1:-1:-1;;;1323:30:159;;4328:2:165;1323:30:159;;;4310:21:165;4367:2;4347:18;;;4340:30;-1:-1:-1;;;4386:18:165;;;4379:44;1323:12:159;;;;4440:18:165;;1323:30:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:30:159;;;;;;;;;;;;:::i;:::-;1299:54;;;;;;:::i;:::-;;279:985:157;;;;;;;;;;;;358:127:165;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1042;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:165;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:165;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1499:1;1494:2;1489;1481:6;1477:15;1473:24;1466:35;1520:6;1510:16;;;;;;;;490:1042;;;;:::o;1537:380::-;1616:1;1612:12;;;;1659;;;1680:61;;1734:4;1726:6;1722:17;1712:27;;1680:61;1787:2;1779:6;1776:14;1756:18;1753:38;1750:161;;1833:10;1828:3;1824:20;1821:1;1814:31;1868:4;1865:1;1858:15;1896:4;1893:1;1886:15;1750:161;;1537:380;;;:::o;2048:545::-;2150:2;2145:3;2142:11;2139:448;;;2186:1;2211:5;2207:2;2200:17;2256:4;2252:2;2242:19;2326:2;2314:10;2310:19;2307:1;2303:27;2297:4;2293:38;2362:4;2350:10;2347:20;2344:47;;;-1:-1:-1;2385:4:165;2344:47;2440:2;2435:3;2431:12;2428:1;2424:20;2418:4;2414:31;2404:41;;2495:82;2513:2;2506:5;2503:13;2495:82;;;2558:17;;;2539:1;2528:13;2495:82;;;2499:3;;;2139:448;2048:545;;;:::o;2769:1352::-;2889:10;;-1:-1:-1;;;;;2911:30:165;;2908:56;;;2944:18;;:::i;:::-;2973:97;3063:6;3023:38;3055:4;3049:11;3023:38;:::i;:::-;3017:4;2973:97;:::i;:::-;3125:4;;3189:2;3178:14;;3206:1;3201:663;;;;3908:1;3925:6;3922:89;;;-1:-1:-1;3977:19:165;;;3971:26;3922:89;-1:-1:-1;;2726:1:165;2722:11;;;2718:24;2714:29;2704:40;2750:1;2746:11;;;2701:57;4024:81;;3171:944;;3201:663;1995:1;1988:14;;;2032:4;2019:18;;-1:-1:-1;;3237:20:165;;;3355:236;3369:7;3366:1;3363:14;3355:236;;;3458:19;;;3452:26;3437:42;;3550:27;;;;3518:1;3506:14;;;;3385:19;;3355:236;;;3359:3;3619:6;3610:7;3607:19;3604:201;;;3680:19;;;3674:26;-1:-1:-1;;3763:1:165;3759:14;;;3775:3;3755:24;3751:37;3747:42;3732:58;3717:74;;3604:201;-1:-1:-1;;;;;3851:1:165;3835:14;;;3831:22;3818:36;;-1:-1:-1;2769:1352:165:o;4126:338::-;279:985:157;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806385226c81116100a2578063ab75e7c311610071578063ab75e7c3146101f0578063b5508aa914610203578063ba414fa61461020b578063e20c9f7114610223578063fa7626d41461022b57600080fd5b806385226c81146101b85780638558cbba146101cd57806387fd4875146101e0578063916a17c6146101e857600080fd5b80633e5e3c23116100de5780633e5e3c23146101685780633f7286f414610170578063507ffba51461017857806366d9a9a0146101a357600080fd5b80630a9254e414610110578063107167601461011a5780631ed7831c146101405780633e5e0d2614610155575b600080fd5b610118610238565b005b61012d610128366004611dd2565b610504565b6040519081526020015b60405180910390f35b610148610587565b6040516101379190611e1d565b61012d610163366004611e6a565b6105e9565b610148610845565b6101486108a5565b61018b610186366004611ed3565b610905565b6040516001600160a01b039091168152602001610137565b6101ab610a1d565b6040516101379190611f84565b6101c0610b0c565b6040516101379190612087565b6101186101db3660046120e9565b610bdc565b610118610d79565b6101ab611231565b6101186101fe366004612102565b611317565b6101c061161d565b6102136116ed565b6040519015158152602001610137565b61014861181a565b6007546102139060ff1681565b61025e60405180604001604052806005815260200164616c69636560d81b815250610905565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623137b160e91b60208201526102a190610905565b601d80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b60208201526102e790610905565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623230b760e91b602082015261032a90610905565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b602082015261036d90610905565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506103bc604051806040016040528060088152602001673232b83637bcb2b960c11b815250610905565b602280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b602082015261040290610905565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b602082015261044e90610905565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b602082015261049890610905565b602480546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b60208201526104de90610905565b602580546001600160a01b0319166001600160a01b039290921691909117905542602855565b6040516370a0823160e01b81526001600160a01b03808516600483015260009161057f91869186918216906370a0823190602401602060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610579919061212e565b856105e9565b949350505050565b606060148054806020026020016040519081016040528092919081815260200182805480156105df57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c1575b5050505050905090565b6040516370a0823160e01b81526001600160a01b03858116600483015260009182918616906370a0823190602401602060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610658919061212e565b90508084111561067b5760405163188c93a560e31b815260040160405180910390fd5b6000805160206124c683398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0389166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b0389166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890528816925063a9059cbb91506044016020604051808303816000875af1158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190612147565b509295945050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b6000816040516020016109189190612170565b60408051601f198184030181529082905280516020909101206318caf8e360e31b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906109699084908690600401612183565b600060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b038416600482015269021e19e0c9bab24000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b50505050919050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610b035760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610aeb57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610aad5790505b50505050508152505081526020019060010190610a41565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610b03578382906000526020600020018054610b4f906121a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b906121a7565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b6000604051610bea90611db0565b604051809103906000f080158015610c06573d6000803e3d6000fd5b5090506001600160801b03821115610ceb576000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c6457600080fd5b505af1158015610c78573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600481018590526001600160a01b038416925063809fdd3391506024015b602060405180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce691906121e1565b505050565b60405163809fdd3360e01b8152600481018390526000906001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5791906121e1565b9050610ce6816001600160801b0316846001600160801b031661187a565b5050565b6000604051610d8790611db0565b604051809103906000f080158015610da3573d6000803e3d6000fd5b5060405163809fdd3360e01b81526000600482018190529192506001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1291906121e1565b9050610e286001600160801b038216600061187a565b60405163809fdd3360e01b8152600160048201526001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9191906121e1565b9050610ea76001600160801b038216600161187a565b60405163809fdd3360e01b81526001600160801b0360048201526001600160a01b0383169063809fdd3390602401602060405180830381865afa158015610ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1691906121e1565b9050610f2c6001600160801b038083169061187a565b6000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f7857600080fd5b505af1158015610f8c573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160801b60048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561104957600080fd5b505af115801561105d573d6000803e3d6000fd5b505060405163809fdd3360e01b815260001960048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561111857600080fd5b505af115801561112c573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160881b60048201526001600160a01b038516925063809fdd339150602401602060405180830381865afa158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c91906121e1565b506000805160206124c683398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b505060405163809fdd3360e01b8152600160ff1b60048201526001600160a01b038516925063809fdd339150602401610ca5565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610b035760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156112ff57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116112c15790505b50505050508152505081526020019060010190611255565b6000821280159061134c576113478483101560405180606001604052806036815260200161250660369139611970565b611370565b61137082851160405180606001604052806027815260200161244d60279139611970565b60008161137d5784611387565b6113878486612220565b90506000821561139757856113aa565b6113a085612239565b6113aa9087612255565b9050808410806113b957508184115b15611432576113f4848260405180604001604052806013815260200172195e18d959591cc81b1bddd95c88189bdd5b99606a1b8152506119a3565b61142a848360405180604001604052806013815260200172195e18d959591cc81d5c1c195c88189bdd5b99606a1b8152506119da565b505050505050565b82156115215760006114448786612255565b9050858110156114f85760408051808201909152601a81527f507265636973696f6e20696e637265617365642062793a2025730000000000006020820152611495906114908389612255565b611a11565b6114c46040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b81525087611a56565b6114f36040518060400160405280600d81526020016c4e65772044656c74613a20257360981b81525082611a11565b61151b565b61151b838660405180606001604052806029815260200161247460299139611a9b565b5061142a565b600061152d8588612255565b905061153886612239565b8110156115f15761158d6040518060400160405280601a81526020017f507265636973696f6e20696e637265617365642062793a202573000000000000815250828861158390612239565b6114909190612255565b6115bc6040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b81525087611a56565b6115ec6040518060400160405280600e81526020016d4e65772044656c74613a202d257360901b81525082611a11565b611614565b611614828660405180606001604052806029815260200161249d60299139611a9b565b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610b03578382906000526020600020018054611660906121a7565b80601f016020809104026020016040519081016040528092919081815260200182805461168c906121a7565b80156116d95780601f106116ae576101008083540402835291602001916116d9565b820191906000526020600020905b8154815290600101906020018083116116bc57829003601f168201915b505050505081526020019060010190611641565b600754600090610100900460ff161561170f5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156118155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161179d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001612268565b60408051601f19818403018152908290526117b791612299565b6000604051808303816000865af19150503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b50915050808060200190518101906118119190612147565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156105df576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c1575050505050905090565b808214610d755760008051602061240d8339815191526040516118d99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290516000805160206124e68339815191529181900360800190a160408051818152600a91810191909152690808080808149a59da1d60b21b6060820152602081018290526000805160206124e6833981519152906080015b60405180910390a1610d75611ad1565b81610d755760008051602061242d8339815191528160405161199291906122b5565b60405180910390a1610d7582611bdd565b81831015610ce65760008051602061242d833981519152816040516119c891906122b5565b60405180910390a1610ce68383611c42565b81831115610ce65760008051602061242d833981519152816040516119ff91906122b5565b60405180910390a1610ce68383611d2b565b610d758282604051602401611a279291906122e4565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611d8b565b610d758282604051602401611a6c9291906122e4565b60408051601f198184030181529190526020810180516001600160e01b0316631e53134760e11b179052611d8b565b818314610ce65760008051602061242d83398151915281604051611abf91906122b5565b60405180910390a1610ce6838361187a565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611bcc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611b6b9291602001612268565b60408051601f1981840301815290829052611b8591612299565b6000604051808303816000865af19150503d8060008114611bc2576040519150601f19603f3d011682016040523d82523d6000602084013e611bc7565b606091505b505050505b6007805461ff001916610100179055565b80611c3f5760008051602061240d833981519152604051611c2f9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1611c3f611ad1565b50565b80821015610d755760008051602061240d833981519152604051611ca29060208082526022908201527f4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206124e68339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b6060820152602081018290526000805160206124e683398151915290608001611960565b80821115610d755760008051602061240d833981519152604051611ca29060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b611c3f8180516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6101068061230783390190565b6001600160a01b0381168114611c3f57600080fd5b600080600060608486031215611de757600080fd5b8335611df281611dbd565b92506020840135611e0281611dbd565b91506040840135611e1281611dbd565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611e5e5783516001600160a01b031683529284019291840191600101611e39565b50909695505050505050565b60008060008060808587031215611e8057600080fd5b8435611e8b81611dbd565b93506020850135611e9b81611dbd565b9250604085013591506060850135611eb281611dbd565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611ee557600080fd5b813567ffffffffffffffff80821115611efd57600080fd5b818401915084601f830112611f1157600080fd5b813581811115611f2357611f23611ebd565b604051601f8201601f19908116603f01168101908382118183101715611f4b57611f4b611ebd565b81604052828152876020848701011115611f6457600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561202857898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156120135783516001600160e01b0319168252928b019260019290920191908b0190611fe9565b50978a01979550505091870191600101611fac565b50919998505050505050505050565b60005b8381101561205257818101518382015260200161203a565b50506000910152565b60008151808452612073816020860160208601612037565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156120dc57603f198886030184526120ca85835161205b565b945092850192908501906001016120ae565b5092979650505050505050565b6000602082840312156120fb57600080fd5b5035919050565b60008060006060848603121561211757600080fd5b505081359360208301359350604090920135919050565b60006020828403121561214057600080fd5b5051919050565b60006020828403121561215957600080fd5b8151801515811461216957600080fd5b9392505050565b602081526000612169602083018461205b565b6001600160a01b038316815260406020820181905260009061057f9083018461205b565b600181811c908216806121bb57607f821691505b6020821081036121db57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121f357600080fd5b81516001600160801b038116811461216957600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156122335761223361220a565b92915050565b6000600160ff1b820161224e5761224e61220a565b5060000390565b818103818111156122335761223361220a565b6001600160e01b031983168152815160009061228b816004850160208701612037565b919091016004019392505050565b600082516122ab818460208701612037565b9190910192915050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000612169608083018461205b565b6040815260006122f7604083018561205b565b9050826020830152939250505056fe608060405234801561001057600080fd5b5060e78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063809fdd3314602d575b600080fd5b603c60383660046099565b6061565b6040516fffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000606a826070565b92915050565b6000600160801b8210609557604051630f0af95160e11b815260040160405180910390fd5b5090565b60006020828403121560aa57600080fd5b503591905056fea264697066735822122007c3e2c1c1767d5b87df864aff46b29215b9bca96730a502c6bbf344fe08e2a664736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35835f74617267657456616c75652073686f756c64206265206c657373207468616e205f76616c75656578706563746564207570706572426f756e6420746f206d61746368205f74617267657456616c75656578706563746564206c6f776572426f756e6420746f206d61746368205f74617267657456616c7565885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12db2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a85f74617267657456616c75652073686f756c642062652067726561746572207468616e206f7220657175616c20746f205f76616c7565a2646970667358221220613b0b2bd909e0575fe5c6164491ab50820f58988536ddcfb4ebf8191305034a64736f6c63430008130033",
    sourceMap:
      "279:985:157:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:471:159;;;:::i;:::-;;2545:198;;;;;;:::i;:::-;;:::i;:::-;;;845:25:165;;;833:2;818:18;2545:198:159;;;;;;;;2170:134:57;;;:::i;:::-;;;;;;;:::i;2749:417:159:-;;;;;;:::i;:::-;;:::i;2939:133:57:-;;;:::i;2640:141::-;;;:::i;2321:218:159:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3385:32:165;;;3367:51;;3355:2;3340:18;2321:218:159;3221:203:165;2456:178:57;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;319:332:157:-;;;;;;:::i;:::-;;:::i;657:605::-;;;:::i;2787:146:57:-;;;:::i;3830:2306:159:-;;;;;;:::i;:::-;;:::i;1875:141:57:-;;;:::i;1819:584:50:-;;;:::i;:::-;;;7012:14:165;;7005:22;6987:41;;6975:2;6960:18;1819:584:50;6847:187:165;2022:142:57;;;:::i;1572:26:50:-;;;;;;;;;1380:471:159;1430:19;;;;;;;;;;;;;;-1:-1:-1;;;1430:19:159;;;:10;:19::i;:::-;1422:5;:27;;-1:-1:-1;;;;;;1422:27:159;-1:-1:-1;;;;;1422:27:159;;;;;;;;;;1465:17;;;;;;;;;;;;-1:-1:-1;;;1465:17:159;;;;;;:10;:17::i;:::-;1459:3;:23;;-1:-1:-1;;;;;;1459:23:159;-1:-1:-1;;;;;1459:23:159;;;;;;;;;;1501:20;;;;;;;;;;;;-1:-1:-1;;;1501:20:159;;;;;;:10;:20::i;:::-;1492:6;:29;;-1:-1:-1;;;;;;1492:29:159;-1:-1:-1;;;;;1492:29:159;;;;;;;;;;1537:17;;;;;;;;;;;;-1:-1:-1;;;1537:17:159;;;;;;:10;:17::i;:::-;1531:3;:23;;-1:-1:-1;;;;;;1531:23:159;-1:-1:-1;;;;;1531:23:159;;;;;;;;;;1570:17;;;;;;;;;;;;-1:-1:-1;;;1570:17:159;;;;;;:10;:17::i;:::-;1564:3;;:23;;;;;-1:-1:-1;;;;;1564:23:159;;;;;-1:-1:-1;;;;;1564:23:159;;;;;;1609:22;;;;;;;;;;;;;;-1:-1:-1;;;1609:22:159;;;:10;:22::i;:::-;1598:8;:33;;-1:-1:-1;;;;;;1598:33:159;-1:-1:-1;;;;;1598:33:159;;;;;;;;;;1650:20;;;;;;;;;;;;-1:-1:-1;;;1650:20:159;;;;;;:10;:20::i;:::-;1641:6;:29;;-1:-1:-1;;;;;;1641:29:159;-1:-1:-1;;;;;1641:29:159;;;;;;;;;;1695:26;;;;;;;;;;;;-1:-1:-1;;;1695:26:159;;;;;;:10;:26::i;:::-;1680:12;:41;;-1:-1:-1;;;;;;1680:41:159;-1:-1:-1;;;;;1680:41:159;;;;;;;;;;1744:24;;;;;;;;;;;;-1:-1:-1;;;1744:24:159;;;;;;:10;:24::i;:::-;1731:10;:37;;-1:-1:-1;;;;;;1731:37:159;-1:-1:-1;;;;;1731:37:159;;;;;;;;;;1787:20;;;;;;;;;;;;-1:-1:-1;;;1787:20:159;;;;;;:10;:20::i;:::-;1778:6;:29;;-1:-1:-1;;;;;;1778:29:159;-1:-1:-1;;;;;1778:29:159;;;;;;;;;;1829:15;1818:8;:26;1380:471::o;2545:198::-;2709:22;;-1:-1:-1;;;2709:22:159;;-1:-1:-1;;;;;3385:32:165;;;2709:22:159;;;3367:51:165;2655:7:159;;2681:55;;2695:5;;2702;;2709:15;;;;;3340:18:165;;2709:22:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:2;2681:13;:55::i;:::-;2674:62;2545:198;-1:-1:-1;;;;2545:198:159:o;2170:134:57:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:57;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2749:417:159:-;2925:22;;-1:-1:-1;;;2925:22:159;;-1:-1:-1;;;;;3385:32:165;;;2925:22:159;;;3367:51:165;2883:7:159;;;;2925:15;;;;;3340:18:165;;2925:22:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2902:45;;2970:12;2961:6;:21;2957:56;;;2991:22;;-1:-1:-1;;;2991:22:159;;;;;;;;;;;2957:56;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;3023:12:159;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3047:20:159;;-1:-1:-1;;;3047:20:159;;-1:-1:-1;;;;;3385:32:165;;3047:20:159;;;3367:51:165;3047:13:159;;-1:-1:-1;3047:13:159;;-1:-1:-1;3340:18:165;;3047:20:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3077:23:159;;-1:-1:-1;;;3077:23:159;;-1:-1:-1;;;;;7446:32:165;;3077:23:159;;;7428:51:165;3092:7:159;7495:18:165;;;7488:34;3077:7:159;;-1:-1:-1;3077:7:159;;-1:-1:-1;7401:18:165;;3077:23:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3110:26:159;;-1:-1:-1;;;3110:26:159;;-1:-1:-1;;;;;7446:32:165;;;3110:26:159;;;7428:51:165;7495:18;;;7488:34;;;3110:14:159;;;-1:-1:-1;3110:14:159;;-1:-1:-1;7401:18:165;;3110:26:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3153:6:159;;2749:417;-1:-1:-1;;;;;2749:417:159:o;2939:133:57:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:57;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:57;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2321:218:159:-;2377:13;2455:4;2444:16;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2444:16:159;;;;;;;;;;2434:27;;2444:16;2434:27;;;;-1:-1:-1;;;2474:21:159;;2434:27;-1:-1:-1;2474:8:159;;;;:21;;2434:27;;2490:4;;2474:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2505:27:159;;-1:-1:-1;;;2505:27:159;;-1:-1:-1;;;;;7446:32:165;;2505:27:159;;;7428:51:165;2520:11:159;7495:18:165;;;7488:34;2505:7:159;;-1:-1:-1;2505:7:159;;-1:-1:-1;7401:18:165;;2505:27:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:218;;;:::o;2456:178:57:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:332:157;380:17;400:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;380:38;;-1:-1:-1;;;;;433:3:157;:20;429:216;;;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;469:15:157;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;500:19:157;;-1:-1:-1;;;500:19:157;;;;;845:25:165;;;-1:-1:-1;;;;;500:14:157;;;-1:-1:-1;500:14:157;;-1:-1:-1;818:18:165;;500:19:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;370:281;319:332;:::o;429:216::-;569:19;;-1:-1:-1;;;569:19:157;;;;;845:25:165;;;550:16:157;;-1:-1:-1;;;;;569:14:157;;;;;818:18:165;;569:19:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:38;;602:32;611:8;-1:-1:-1;;;;;602:32:157;629:3;-1:-1:-1;;;;;602:32:157;:8;:32::i;429:216::-;370:281;319:332;:::o;657:605::-;700:17;720:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;768:17:157;;-1:-1:-1;;;768:17:157;;749:16;768:17;;;845:25:165;;;700:38:157;;-1:-1:-1;;;;;;768:14:157;;;;;818:18:165;;768:17:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:36;-1:-1:-1;795:30:157;-1:-1:-1;;;;;795:30:157;;822:1;795:8;:30::i;:::-;846:17;;-1:-1:-1;;;846:17:157;;861:1;846:17;;;845:25:165;-1:-1:-1;;;;;846:14:157;;;;;818:18:165;;846:17:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:28;-1:-1:-1;873:30:157;-1:-1:-1;;;;;873:30:157;;900:1;873:8;:30::i;:::-;924:28;;-1:-1:-1;;;924:28:157;;-1:-1:-1;;;;;924:28:157;;;845:25:165;-1:-1:-1;;;;;924:14:157;;;;;818:18:165;;924:28:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;913:39;-1:-1:-1;962:41:157;-1:-1:-1;;;;;962:41:157;;;;:8;:41::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;1014:15:157;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1041:24:157;;-1:-1:-1;;;1041:24:157;;-1:-1:-1;;;1041:24:157;;;845:25:165;-1:-1:-1;;;;;1041:14:157;;;-1:-1:-1;1041:14:157;;-1:-1:-1;818:18:165;;1041:24:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;1076:15:157;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1103:28:157;;-1:-1:-1;;;1103:28:157;;-1:-1:-1;;1103:28:157;;;845:25:165;-1:-1:-1;;;;;1103:14:157;;;-1:-1:-1;1103:14:157;;-1:-1:-1;818:18:165;;1103:28:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;1142:15:157;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1169:24:157;;-1:-1:-1;;;1169:24:157;;-1:-1:-1;;;1169:24:157;;;845:25:165;-1:-1:-1;;;;;1169:14:157;;;-1:-1:-1;1169:14:157;;-1:-1:-1;818:18:165;;1169:24:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:51;;-1:-1:-1;;;;;1204:15:157;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1231:24:157;;-1:-1:-1;;;1231:24:157;;-1:-1:-1;;;1231:24:157;;;845:25:165;-1:-1:-1;;;;;1231:14:157;;;-1:-1:-1;1231:14:157;;-1:-1:-1;818:18:165;;1231:24:157;699:177:165;2787:146:57;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:2306:159;3955:18;3976:11;;;;;3998:335;;4031:138;4075:6;4059:12;:22;;4031:138;;;;;;;;;;;;;;;;;:10;:138::i;:::-;3998:335;;;4200:122;4237:12;4228:6;:21;4200:122;;;;;;;;;;;;;;;;;:10;:122::i;:::-;4343:18;4364:13;:49;;4407:6;4364:49;;;4380:24;4397:6;4380;:24;:::i;:::-;4343:70;;4423:18;4445:13;4444:14;:75;;4513:6;4444:75;;;4490:7;4491:6;4490:7;:::i;:::-;4473:25;;:6;:25;:::i;:::-;4423:96;;4597:10;4582:12;:25;:54;;;;4626:10;4611:12;:25;4582:54;4578:233;;;4652:57;4661:12;4675:10;4652:57;;;;;;;;;;;;;-1:-1:-1;;;4652:57:159;;;:8;:57::i;:::-;4723;4732:12;4746:10;4723:57;;;;;;;;;;;;;-1:-1:-1;;;4723:57:159;;;:8;:57::i;:::-;4794:7;;;3830:2306;;;:::o;4578:233::-;4908:13;4904:1226;;;4937:21;4961;4976:6;4961:12;:21;:::i;:::-;4937:45;;5024:6;5000:13;:31;4996:516;;;5051:133;;;;;;;;;;;;;;;;;;;5135:31;5153:13;5143:6;5135:31;:::i;:::-;5051:12;:133::i;:::-;5202:37;;;;;;;;;;;;;;-1:-1:-1;;;5202:37:159;;;5232:6;5202:12;:37::i;:::-;5257:44;;;;;;;;;;;;;;-1:-1:-1;;;5257:44:159;;;5287:13;5257:12;:44::i;:::-;4996:516;;;5340:157;5370:10;5402:12;5340:157;;;;;;;;;;;;;;;;;:8;:157::i;:::-;4923:599;4904:1226;;;5542:21;5566;5575:12;5566:6;:21;:::i;:::-;5542:45;-1:-1:-1;5629:7:159;5630:6;5629:7;:::i;:::-;5605:13;:32;5601:519;;;5657:134;;;;;;;;;;;;;;;;;;5760:13;5750:6;5749:7;;;:::i;:::-;5741:32;;;;:::i;5657:134::-;5809:37;;;;;;;;;;;;;;-1:-1:-1;;;5809:37:159;;;5839:6;5809:12;:37::i;:::-;5864:45;;;;;;;;;;;;;;-1:-1:-1;;;5864:45:159;;;5895:13;5864:12;:45::i;:::-;5601:519;;;5948:157;5978:10;6010:12;5948:157;;;;;;;;;;;;;;;;;:8;:157::i;:::-;5528:602;3945:2191;;;3830:2306;;;:::o;1875:141:57:-;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:50;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:50;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7428:51:165;;;-1:-1:-1;;;7495:18:165;;;7488:34;2196:43:50;;;;;;;;;7401:18:165;;;2196:43:50;;;-1:-1:-1;;1671:64:50;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:50;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:50:o;2022:142:57:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:57;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;5209:262:50:-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:50;;;;12942:2:165;12924:21;;;12981:2;12961:18;;;12954:30;13020:34;13015:2;13000:18;;12993:62;-1:-1:-1;;;13086:2:165;13071:18;;13064:32;13128:3;13113:19;;12740:398;5293:41:50;;;;;;;;5353:31;;;13355:21:165;;;13412:2;13392:18;;;13385:30;-1:-1:-1;;;13446:2:165;13431:18;;13424:40;13531:4;13516:20;;13509:36;;;5353:31:50;;-1:-1:-1;;;;;;;;;;;5353:31:50;;;;13496:3:165;5353:31:50;;;5403;;;13768:21:165;;;13825:2;13805:18;;;13798:30;;;;-1:-1:-1;;;13859:2:165;13844:18;;13837:40;13944:4;13929:20;;13922:36;;;-1:-1:-1;;;;;;;;;;;5403:31:50;13909:3:165;13894:19;5403:31:50;;;;;;;;5448:6;:4;:6::i;3425:191::-;3504:9;3499:111;;-1:-1:-1;;;;;;;;;;;3560:3:50;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;12219:177::-;12299:1;12295;:5;12291:99;;;-1:-1:-1;;;;;;;;;;;12347:3:50;12321:30;;;;;;:::i;:::-;;;;;;;;12365:14;12374:1;12377;12365:8;:14::i;16185:177::-;16265:1;16261;:5;16257:99;;;-1:-1:-1;;;;;;;;;;;16313:3:50;16287:30;;;;;;:::i;:::-;;;;;;;;16331:14;16340:1;16343;16331:8;:14::i;7546:145:66:-;7613:71;7676:2;7680;7629:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7629:54:66;;;;;;;;;;;;;;-1:-1:-1;;;;;7629:54:66;-1:-1:-1;;;7629:54:66;;;7613:15;:71::i;7697:143::-;7763:70;7825:2;7829;7779:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7779:53:66;;;;;;;;;;;;;;-1:-1:-1;;;;;7779:53:66;-1:-1:-1;;;7779:53:66;;;7763:15;:70::i;5476:178:50:-;5557:1;5552;:6;5548:100;;-1:-1:-1;;;;;;;;;;;5605:3:50;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15212:51:165;;;-1:-1:-1;;;15279:18:165;;;15272:34;;;;2712:4:50;15322:18:165;;;15315:34;2489:11:50;;1671:64;2586:43;;15185:18:165;;2652:67:50;;;-1:-1:-1;;2652:67:50;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:50;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:50;2820:7;:14;;-1:-1:-1;;2820:14:50;;;;;2409:432::o;3262:157::-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:50;;;;15562:2:165;15544:21;;;15601:2;15581:18;;;15574:30;15640:25;15635:2;15620:18;;15613:53;15698:2;15683:18;;15360:347;3352:30:50;;;;;;;;3396:6;:4;:6::i;:::-;3262:157;:::o;11955:259::-;12016:1;12012;:5;12008:200;;;-1:-1:-1;;;;;;;;;;;12038:41:50;;;;15914:2:165;15896:21;;;15953:2;15933:18;;;15926:30;15992:34;15987:2;15972:18;;15965:62;-1:-1:-1;;;16058:2:165;16043:18;;16036:32;16100:3;16085:19;;15712:398;12038:41:50;;;;;;;;12098:30;;;16327:21:165;;;16384:1;16364:18;;;16357:29;-1:-1:-1;;;16417:2:165;16402:18;;16395:39;16501:4;16486:20;;16479:36;;;12098:30:50;;-1:-1:-1;;;;;;;;;;;12098:30:50;;;;16466:3:165;12098:30:50;;;12147;;;16738:21:165;;;16795:1;16775:18;;;16768:29;;;;-1:-1:-1;;;16828:2:165;16813:18;;16806:39;16912:4;16897:20;;16890:36;;;-1:-1:-1;;;;;;;;;;;12147:30:50;16877:3:165;16862:19;12147:30:50;16526:406:165;15921:259:50;15982:1;15978;:5;15974:200;;;-1:-1:-1;;;;;;;;;;;16004:41:50;;;;17139:2:165;17121:21;;;17178:2;17158:18;;;17151:30;17217:34;17212:2;17197:18;;17190:62;-1:-1:-1;;;17283:2:165;17268:18;;17261:32;17325:3;17310:19;;16937:398;868:133:66;939:55;986:7;1105:14;;591:42;1278:2;1265:16;;1081:21;;1105:14;1265:16;591:42;1314:5;1303:68;1294:77;;1231:150;;1007:380;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:165:-;-1:-1:-1;;;;;89:31:165;;79:42;;69:70;;135:1;132;125:12;150:544;242:6;250;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;366:9;353:23;385:31;410:5;385:31;:::i;:::-;435:5;-1:-1:-1;492:2:165;477:18;;464:32;505:33;464:32;505:33;:::i;:::-;557:7;-1:-1:-1;616:2:165;601:18;;588:32;629:33;588:32;629:33;:::i;:::-;681:7;671:17;;;150:544;;;;;:::o;881:658::-;1052:2;1104:21;;;1174:13;;1077:18;;;1196:22;;;1023:4;;1052:2;1275:15;;;;1249:2;1234:18;;;1023:4;1318:195;1332:6;1329:1;1326:13;1318:195;;;1397:13;;-1:-1:-1;;;;;1393:39:165;1381:52;;1488:15;;;;1453:12;;;;1429:1;1347:9;1318:195;;;-1:-1:-1;1530:3:165;;881:658;-1:-1:-1;;;;;;881:658:165:o;1544:613::-;1645:6;1653;1661;1669;1722:3;1710:9;1701:7;1697:23;1693:33;1690:53;;;1739:1;1736;1729:12;1690:53;1778:9;1765:23;1797:31;1822:5;1797:31;:::i;:::-;1847:5;-1:-1:-1;1904:2:165;1889:18;;1876:32;1917:33;1876:32;1917:33;:::i;:::-;1969:7;-1:-1:-1;2023:2:165;2008:18;;1995:32;;-1:-1:-1;2079:2:165;2064:18;;2051:32;2092:33;2051:32;2092:33;:::i;:::-;1544:613;;;;-1:-1:-1;1544:613:165;;-1:-1:-1;;1544:613:165:o;2162:127::-;2223:10;2218:3;2214:20;2211:1;2204:31;2254:4;2251:1;2244:15;2278:4;2275:1;2268:15;2294:922;2363:6;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2472:9;2459:23;2501:18;2542:2;2534:6;2531:14;2528:34;;;2558:1;2555;2548:12;2528:34;2596:6;2585:9;2581:22;2571:32;;2641:7;2634:4;2630:2;2626:13;2622:27;2612:55;;2663:1;2660;2653:12;2612:55;2699:2;2686:16;2721:2;2717;2714:10;2711:36;;;2727:18;;:::i;:::-;2802:2;2796:9;2770:2;2856:13;;-1:-1:-1;;2852:22:165;;;2876:2;2848:31;2844:40;2832:53;;;2900:18;;;2920:22;;;2897:46;2894:72;;;2946:18;;:::i;:::-;2986:10;2982:2;2975:22;3021:2;3013:6;3006:18;3061:7;3056:2;3051;3047;3043:11;3039:20;3036:33;3033:53;;;3082:1;3079;3072:12;3033:53;3138:2;3133;3129;3125:11;3120:2;3112:6;3108:15;3095:46;3183:1;3161:15;;;3178:2;3157:24;3150:35;;;;-1:-1:-1;3165:6:165;2294:922;-1:-1:-1;;;;;2294:922:165:o;3429:1569::-;3633:4;3662:2;3702;3691:9;3687:18;3732:2;3721:9;3714:21;3755:6;3790;3784:13;3821:6;3813;3806:22;3847:2;3837:12;;3880:2;3869:9;3865:18;3858:25;;3942:2;3932:6;3929:1;3925:14;3914:9;3910:30;3906:39;3980:2;3972:6;3968:15;4001:1;4022;4032:937;4048:6;4043:3;4040:15;4032:937;;;4117:22;;;-1:-1:-1;;4113:36:165;4101:49;;4173:13;;4260:9;;-1:-1:-1;;;;;4256:35:165;4241:51;;4331:11;;4325:18;4363:15;;;4356:27;;;4444:19;;4213:15;;;4476:24;;;4566:21;;;;4611:1;;4534:2;4522:15;;;4625:236;4641:8;4636:3;4633:17;4625:236;;;4722:15;;-1:-1:-1;;;;;;4718:42:165;4704:57;;4830:17;;;;4669:1;4660:11;;;;;4787:14;;;;4625:236;;;-1:-1:-1;4947:12:165;;;;4884:5;-1:-1:-1;;;4912:15:165;;;;4074:1;4065:11;4032:937;;;-1:-1:-1;4986:6:165;;3429:1569;-1:-1:-1;;;;;;;;;3429:1569:165:o;5003:250::-;5088:1;5098:113;5112:6;5109:1;5106:13;5098:113;;;5188:11;;;5182:18;5169:11;;;5162:39;5134:2;5127:10;5098:113;;;-1:-1:-1;;5245:1:165;5227:16;;5220:27;5003:250::o;5258:271::-;5300:3;5338:5;5332:12;5365:6;5360:3;5353:19;5381:76;5450:6;5443:4;5438:3;5434:14;5427:4;5420:5;5416:16;5381:76;:::i;:::-;5511:2;5490:15;-1:-1:-1;;5486:29:165;5477:39;;;;5518:4;5473:50;;5258:271;-1:-1:-1;;5258:271:165:o;5534:803::-;5696:4;5725:2;5765;5754:9;5750:18;5795:2;5784:9;5777:21;5818:6;5853;5847:13;5884:6;5876;5869:22;5922:2;5911:9;5907:18;5900:25;;5984:2;5974:6;5971:1;5967:14;5956:9;5952:30;5948:39;5934:53;;6022:2;6014:6;6010:15;6043:1;6053:255;6067:6;6064:1;6061:13;6053:255;;;6160:2;6156:7;6144:9;6136:6;6132:22;6128:36;6123:3;6116:49;6188:40;6221:6;6212;6206:13;6188:40;:::i;:::-;6178:50;-1:-1:-1;6286:12:165;;;;6251:15;;;;6089:1;6082:9;6053:255;;;-1:-1:-1;6325:6:165;;5534:803;-1:-1:-1;;;;;;;5534:803:165:o;6342:180::-;6401:6;6454:2;6442:9;6433:7;6429:23;6425:32;6422:52;;;6470:1;6467;6460:12;6422:52;-1:-1:-1;6493:23:165;;6342:180;-1:-1:-1;6342:180:165:o;6527:315::-;6603:6;6611;6619;6672:2;6660:9;6651:7;6647:23;6643:32;6640:52;;;6688:1;6685;6678:12;6640:52;-1:-1:-1;;6711:23:165;;;6781:2;6766:18;;6753:32;;-1:-1:-1;6832:2:165;6817:18;;;6804:32;;6527:315;-1:-1:-1;6527:315:165:o;7039:184::-;7109:6;7162:2;7150:9;7141:7;7137:23;7133:32;7130:52;;;7178:1;7175;7168:12;7130:52;-1:-1:-1;7201:16:165;;7039:184;-1:-1:-1;7039:184:165:o;7812:277::-;7879:6;7932:2;7920:9;7911:7;7907:23;7903:32;7900:52;;;7948:1;7945;7938:12;7900:52;7980:9;7974:16;8033:5;8026:13;8019:21;8012:5;8009:32;7999:60;;8055:1;8052;8045:12;7999:60;8078:5;7812:277;-1:-1:-1;;;7812:277:165:o;8094:220::-;8243:2;8232:9;8225:21;8206:4;8263:45;8304:2;8293:9;8289:18;8281:6;8263:45;:::i;8319:317::-;-1:-1:-1;;;;;8496:32:165;;8478:51;;8565:2;8560;8545:18;;8538:30;;;-1:-1:-1;;8585:45:165;;8611:18;;8603:6;8585:45;:::i;8950:380::-;9029:1;9025:12;;;;9072;;;9093:61;;9147:4;9139:6;9135:17;9125:27;;9093:61;9200:2;9192:6;9189:14;9169:18;9166:38;9163:161;;9246:10;9241:3;9237:20;9234:1;9227:31;9281:4;9278:1;9271:15;9309:4;9306:1;9299:15;9163:161;;8950:380;;;:::o;9335:305::-;9405:6;9458:2;9446:9;9437:7;9433:23;9429:32;9426:52;;;9474:1;9471;9464:12;9426:52;9506:9;9500:16;-1:-1:-1;;;;;9549:5:165;9545:46;9538:5;9535:57;9525:85;;9606:1;9603;9596:12;11244:127;11305:10;11300:3;11296:20;11293:1;11286:31;11336:4;11333:1;11326:15;11360:4;11357:1;11350:15;11376:125;11441:9;;;11462:10;;;11459:36;;;11475:18;;:::i;:::-;11376:125;;;;:::o;11506:136::-;11541:3;-1:-1:-1;;;11562:22:165;;11559:48;;11587:18;;:::i;:::-;-1:-1:-1;11627:1:165;11623:13;;11506:136::o;11647:128::-;11714:9;;;11735:11;;;11732:37;;;11749:18;;:::i;12059:384::-;-1:-1:-1;;;;;;12244:33:165;;12232:46;;12301:13;;12214:3;;12323:74;12301:13;12386:1;12377:11;;12370:4;12358:17;;12323:74;:::i;:::-;12417:16;;;;12435:1;12413:24;;12059:384;-1:-1:-1;;;12059:384:165:o;12448:287::-;12577:3;12615:6;12609:13;12631:66;12690:6;12685:3;12678:4;12670:6;12666:17;12631:66;:::i;:::-;12713:16;;;;;12448:287;-1:-1:-1;;12448:287:165:o;13969:446::-;14219:2;14208:9;14201:21;14258:1;14253:2;14242:9;14238:18;14231:29;-1:-1:-1;;;14291:2:165;14280:9;14276:18;14269:35;14342:3;14335:4;14324:9;14320:20;14313:33;14182:4;14363:46;14404:3;14393:9;14389:19;14381:6;14363:46;:::i;14420:291::-;14597:2;14586:9;14579:21;14560:4;14617:45;14658:2;14647:9;14643:18;14635:6;14617:45;:::i;:::-;14609:53;;14698:6;14693:2;14682:9;14678:18;14671:34;14420:291;;;;;:::o",
    linkReferences: {},
  },
  methodIdentifiers: {
    "IS_TEST()": "fa7626d4",
    "assertWithDelta(uint256,int256,uint256)": "ab75e7c3",
    "createUser(string)": "507ffba5",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testSafeCastToUint128(uint256)": "8558cbba",
    "test_toUint128()": "87fd4875",
    "whaleTransfer(address,address,address)": "10716760",
    "whaleTransfer(address,address,uint256,address)": "3e5e0d26",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"WhaleBalanceExceeded","type":"error"},{"inputs":[],"name":"WhaleIsContract","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"log","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"log_address","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"val","type":"uint256[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256[]","name":"val","type":"int256[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"val","type":"address[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"log_bytes","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"","type":"bytes32"}],"name":"log_bytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"","type":"int256"}],"name":"log_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"address","name":"val","type":"address"}],"name":"log_named_address","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256[]","name":"val","type":"uint256[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256[]","name":"val","type":"int256[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"address[]","name":"val","type":"address[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"bytes","name":"val","type":"bytes"}],"name":"log_named_bytes","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"bytes32","name":"val","type":"bytes32"}],"name":"log_named_bytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256","name":"val","type":"int256"},{"indexed":false,"internalType":"uint256","name":"decimals","type":"uint256"}],"name":"log_named_decimal_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256","name":"val","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decimals","type":"uint256"}],"name":"log_named_decimal_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256","name":"val","type":"int256"}],"name":"log_named_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"val","type":"string"}],"name":"log_named_string","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256","name":"val","type":"uint256"}],"name":"log_named_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"log_string","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"log_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"logs","type":"event"},{"inputs":[],"name":"IS_TEST","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"int256","name":"_delta","type":"int256"},{"internalType":"uint256","name":"_targetValue","type":"uint256"}],"name":"assertWithDelta","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"createUser","outputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"excludeArtifacts","outputs":[{"internalType":"string[]","name":"excludedArtifacts_","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"excludeContracts","outputs":[{"internalType":"address[]","name":"excludedContracts_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"excludeSenders","outputs":[{"internalType":"address[]","name":"excludedSenders_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"failed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setUp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"targetArtifactSelectors","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"}],"internalType":"struct StdInvariant.FuzzSelector[]","name":"targetedArtifactSelectors_","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetArtifacts","outputs":[{"internalType":"string[]","name":"targetedArtifacts_","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetContracts","outputs":[{"internalType":"address[]","name":"targetedContracts_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetSelectors","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"}],"internalType":"struct StdInvariant.FuzzSelector[]","name":"targetedSelectors_","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetSenders","outputs":[{"internalType":"address[]","name":"targetedSenders_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"testSafeCastToUint128","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"test_toUint128","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"whale","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"whaleTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"whale","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"whaleTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"test/units/libraries/SafeCast.t.sol":"SafeCastTest"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@aave/=lib/aave-v3-core/contracts/",":aave-v3-core/=lib/aave-v3-core/",":create3-factory/=lib/yield-daddy/lib/create3-factory/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":solmate/=lib/solmate/src/",":yield-daddy/=lib/yield-daddy/","lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"]},"sources":{"contracts/src/DataProvider.sol":{"keccak256":"0xd23ffd6ff77b03ea16b61130fdfcda6d2bfa430576241003f89b35cd76f51e30","license":"Apache-2.0","urls":["bzz-raw://cc1ab2f99af4241f81feeeda6514fd30f11997adafddcdb48bebd2b383aae212","dweb:/ipfs/QmSPp2B1Pka73Ur1KQMybMs3u73VUrDhev5w6U9iGLTmw7"]},"contracts/src/Hyperdrive.sol":{"keccak256":"0xd2e2e47f45dab0447497a20b8ef54960190d3c01ce2f53dbfae6abe2d095f1f5","license":"Apache-2.0","urls":["bzz-raw://c8d8f034071cf69e922975cddb6123fe125862688ecbe2c3fc01c1f235a4a72e","dweb:/ipfs/QmQraAs5iFKtRYQTqFmpRLh6NSyYxbqrBMFgkGJL2E2ZCN"]},"contracts/src/HyperdriveBase.sol":{"keccak256":"0x978cac18e731453de1268355e70fae31f71718e4149ad1969a56133d1f04cf95","license":"Apache-2.0","urls":["bzz-raw://a3c37a688a10766ade884f36c111925d71318306e46c6e2d207c85ecc7adfb3e","dweb:/ipfs/QmZJu7M9zPNKd2XahfHAtCLX9483228MzMrgP2fVaS1jbn"]},"contracts/src/HyperdriveLP.sol":{"keccak256":"0xe2f37ecc51c9eba59c4b5c13549ed4cdc0415d8af1902442d52ed012e4b9c22a","license":"Apache-2.0","urls":["bzz-raw://53efc435c55fa29822d5ae3271cc42bf4ae096e4dfc9fb150a410f39cd43651e","dweb:/ipfs/QmQgRowy4YqCsxV9A9mFyxzGF7FigC4Huc66Cxy8YfeYAv"]},"contracts/src/HyperdriveLong.sol":{"keccak256":"0x004b7cadd3e9090ca6f5a59510696e3b844839e6305c9076cd3fd31d9b0a3188","license":"Apache-2.0","urls":["bzz-raw://da04266d0c817b69cde906770f047e9add9f8983a12553413c67b2c60ff15c2f","dweb:/ipfs/QmNmKcdUVGLmjxMvUq8kyETZrkfW43JDXfcPHJfP4GrF6V"]},"contracts/src/HyperdriveShort.sol":{"keccak256":"0x3bdfd1e33a2498c6183dfb1684b0db7e6775e9ae2e1097800aeccc869b9e2baa","license":"Apache-2.0","urls":["bzz-raw://e5c9337dfb069d806644ea7ceabe425222f1bc5766248648ba7a9a420715bee8","dweb:/ipfs/QmaL1ZHX4zyAXxMqNmJB4mZ5o54JUTWLnTrKGMBJmbnRDa"]},"contracts/src/HyperdriveStorage.sol":{"keccak256":"0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc","license":"Apache-2.0","urls":["bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a","dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY"]},"contracts/src/HyperdriveTWAP.sol":{"keccak256":"0x76cba088948ab50bb4956377235b302b28ef7c9f6cc68bda73211d66df41e92b","license":"Apache-2.0","urls":["bzz-raw://74e1b28c8cd08aa9adf3b3f31f0379c095299cd2b9de3d3595d7d55b0e0697cc","dweb:/ipfs/QmTTnkPF3jUmdfynnJK6kUBTYSBZFWJs69A9e9tPQzqiac"]},"contracts/src/interfaces/IERC20.sol":{"keccak256":"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c","license":"MIT","urls":["bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672","dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"]},"contracts/src/interfaces/IForwarderFactory.sol":{"keccak256":"0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af","license":"Apache-2.0","urls":["bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3","dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF"]},"contracts/src/interfaces/IHyperdrive.sol":{"keccak256":"0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5","license":"Apache-2.0","urls":["bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e","dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5"]},"contracts/src/interfaces/IHyperdriveRead.sol":{"keccak256":"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3","license":"Apache-2.0","urls":["bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993","dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"]},"contracts/src/interfaces/IHyperdriveWrite.sol":{"keccak256":"0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8","license":"Apache-2.0","urls":["bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467","dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk"]},"contracts/src/interfaces/IMultiToken.sol":{"keccak256":"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a","license":"Apache-2.0","urls":["bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0","dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"]},"contracts/src/interfaces/IMultiTokenMetadata.sol":{"keccak256":"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc","license":"Apache-2.0","urls":["bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87","dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"]},"contracts/src/interfaces/IMultiTokenRead.sol":{"keccak256":"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05","license":"Apache-2.0","urls":["bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939","dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"]},"contracts/src/interfaces/IMultiTokenWrite.sol":{"keccak256":"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8","license":"Apache-2.0","urls":["bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a","dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"]},"contracts/src/libraries/AssetId.sol":{"keccak256":"0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384","license":"Apache-2.0","urls":["bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806","dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT"]},"contracts/src/libraries/FixedPointMath.sol":{"keccak256":"0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd","license":"Apache-2.0","urls":["bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b","dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE"]},"contracts/src/libraries/HyperdriveMath.sol":{"keccak256":"0x81bccd15f87d6fb2df7fe455ab94b2f267b0cef1875890d89158f448bb7694b2","license":"Apache-2.0","urls":["bzz-raw://e973fb36a335fa1b7993152f9b051bd52588b1624c3d76f9dd21d35fe45d5c75","dweb:/ipfs/QmbYLW9GPe19dQVCYNdSwvcgqrUZtDRjPyYtF4QtMn49Zb"]},"contracts/src/libraries/SafeCast.sol":{"keccak256":"0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f","license":"Apache-2.0","urls":["bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5","dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S"]},"contracts/src/libraries/YieldSpaceMath.sol":{"keccak256":"0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04","license":"Apache-2.0","urls":["bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef","dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr"]},"contracts/src/token/ERC20Forwarder.sol":{"keccak256":"0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158","license":"Apache-2.0","urls":["bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034","dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p"]},"contracts/src/token/ForwarderFactory.sol":{"keccak256":"0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b","license":"Apache-2.0","urls":["bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e","dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ"]},"contracts/src/token/MultiToken.sol":{"keccak256":"0x1c22e52ab701c2b7ce3c0b049540ecba5fc24cd8b8000464b5b15c99dfee6a19","license":"Apache-2.0","urls":["bzz-raw://089273a3f853bdb205d34b70750eeca2edda7aaf999726ed9df0621d1e92bb98","dweb:/ipfs/QmPy3tUmJb7gtnL9ACiWhhekKXGo3z3cd4SMYiUQX4geHy"]},"contracts/src/token/MultiTokenStorage.sol":{"keccak256":"0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8","license":"Apache-2.0","urls":["bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6","dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj"]},"contracts/test/MockSafeCast.sol":{"keccak256":"0x903bdd450676823155f3e633ce5a62f09d7727048840ca126207bf03ac8edac1","license":"Apache-2.0","urls":["bzz-raw://786983195b672efd947907485a8f9a6cf49bbd4d49edb48dede9974cafd180ef","dweb:/ipfs/Qmf8cQgBxfPMPcicRa69H82XjvHtJHMo6TPtTqNNF6yS26"]},"lib/forge-std/lib/ds-test/src/test.sol":{"keccak256":"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b","license":"GPL-3.0-or-later","urls":["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240","dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"]},"lib/forge-std/src/Base.sol":{"keccak256":"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c","license":"MIT","urls":["bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224","dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"]},"lib/forge-std/src/StdAssertions.sol":{"keccak256":"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60","license":"MIT","urls":["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b","dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"]},"lib/forge-std/src/StdChains.sol":{"keccak256":"0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d","license":"MIT","urls":["bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4","dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1"]},"lib/forge-std/src/StdCheats.sol":{"keccak256":"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5","license":"MIT","urls":["bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a","dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"]},"lib/forge-std/src/StdError.sol":{"keccak256":"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77","license":"MIT","urls":["bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6","dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"]},"lib/forge-std/src/StdInvariant.sol":{"keccak256":"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1","license":"MIT","urls":["bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c","dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"]},"lib/forge-std/src/StdJson.sol":{"keccak256":"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b","license":"MIT","urls":["bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c","dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"]},"lib/forge-std/src/StdMath.sol":{"keccak256":"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2","license":"MIT","urls":["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92","dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"]},"lib/forge-std/src/StdStorage.sol":{"keccak256":"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d","license":"MIT","urls":["bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26","dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"]},"lib/forge-std/src/StdStyle.sol":{"keccak256":"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d","license":"MIT","urls":["bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8","dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"]},"lib/forge-std/src/StdUtils.sol":{"keccak256":"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1","license":"MIT","urls":["bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140","dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"]},"lib/forge-std/src/Test.sol":{"keccak256":"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0","license":"MIT","urls":["bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765","dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"]},"lib/forge-std/src/Vm.sol":{"keccak256":"0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4","license":"MIT","urls":["bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241","dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx"]},"lib/forge-std/src/console.sol":{"keccak256":"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba","license":"MIT","urls":["bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70","dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"]},"lib/forge-std/src/console2.sol":{"keccak256":"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea","license":"MIT","urls":["bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973","dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"]},"lib/forge-std/src/interfaces/IMulticall3.sol":{"keccak256":"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a","license":"MIT","urls":["bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0","dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"]},"lib/forge-std/src/safeconsole.sol":{"keccak256":"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381","license":"MIT","urls":["bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae","dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b","license":"MIT","urls":["bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df","dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0","license":"MIT","urls":["bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1","dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b","license":"MIT","urls":["bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f","dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","license":"MIT","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb","license":"MIT","urls":["bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0","dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"]},"lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol":{"keccak256":"0xec819d9f89eef128f291b9bfc054b9c3ce0cc11a35b5a1b52aca3620b69bafec","license":"MIT","urls":["bzz-raw://cbc9b07856f18e498852142293d8e1d98416748998be1916a4d653b1702fd0f3","dweb:/ipfs/Qmd8HNLSuqNvpqh3pZBw3ZEmDeggaog9Amt1L7RqCe4RBL"]},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a","license":"MIT","urls":["bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577","dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26","license":"MIT","urls":["bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f","dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/solmate/src/utils/ReentrancyGuard.sol":{"keccak256":"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01","license":"AGPL-3.0-only","urls":["bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800","dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"]},"test/units/libraries/SafeCast.t.sol":{"keccak256":"0x1dbf39d9148bb5830dbffef43ced6befd18ee62ba6181c0fe0c7929e21d215a9","license":"MIT","urls":["bzz-raw://39704402dc496facd0fa3f5137af927b5baca59dea1c5896e3b184ba6d9f50d9","dweb:/ipfs/QmYyYm2q4BTEqvekzAKwdgK49ubcPYBdH2MLQANALnJbkd"]},"test/utils/BaseTest.sol":{"keccak256":"0xe0bcf96bc6f6e483054204b1b888eebc08b15e39a550d9496efff6f5eb108ae6","license":"Apache-2.0","urls":["bzz-raw://6f77f4697e7cbb2a7c88939d6095784b18cb6dba9910aaf35723ba44c1598dbd","dweb:/ipfs/QmQayrq4hkUJqeQUS661YpCM2hC3T5o7UbSfeWxE5X2RvD"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.19+commit.7dd6d404",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [],
          type: "error",
          name: "WhaleBalanceExceeded",
        },
        {
          inputs: [],
          type: "error",
          name: "WhaleIsContract",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_address",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "val",
              type: "uint256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "int256[]",
              name: "val",
              type: "int256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "val",
              type: "address[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_bytes",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_bytes32",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "address",
              name: "val",
              type: "address",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_address",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256[]",
              name: "val",
              type: "uint256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256[]",
              name: "val",
              type: "int256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "address[]",
              name: "val",
              type: "address[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "bytes",
              name: "val",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_bytes",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "bytes32",
              name: "val",
              type: "bytes32",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_bytes32",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256",
              name: "val",
              type: "int256",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_decimal_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "val",
              type: "uint256",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_decimal_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256",
              name: "val",
              type: "int256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "string",
              name: "val",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_string",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "val",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_string",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "logs",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "IS_TEST",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "int256",
              name: "_delta",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "_targetValue",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "assertWithDelta",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "createUser",
          outputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeArtifacts",
          outputs: [
            {
              internalType: "string[]",
              name: "excludedArtifacts_",
              type: "string[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeContracts",
          outputs: [
            {
              internalType: "address[]",
              name: "excludedContracts_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeSenders",
          outputs: [
            {
              internalType: "address[]",
              name: "excludedSenders_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "failed",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "setUp",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetArtifactSelectors",
          outputs: [
            {
              internalType: "struct StdInvariant.FuzzSelector[]",
              name: "targetedArtifactSelectors_",
              type: "tuple[]",
              components: [
                {
                  internalType: "address",
                  name: "addr",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "selectors",
                  type: "bytes4[]",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetArtifacts",
          outputs: [
            {
              internalType: "string[]",
              name: "targetedArtifacts_",
              type: "string[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetContracts",
          outputs: [
            {
              internalType: "address[]",
              name: "targetedContracts_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetSelectors",
          outputs: [
            {
              internalType: "struct StdInvariant.FuzzSelector[]",
              name: "targetedSelectors_",
              type: "tuple[]",
              components: [
                {
                  internalType: "address",
                  name: "addr",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "selectors",
                  type: "bytes4[]",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetSenders",
          outputs: [
            {
              internalType: "address[]",
              name: "targetedSenders_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "num",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "testSafeCastToUint128",
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "test_toUint128",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "whale",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "whaleTransfer",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "whale",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "whaleTransfer",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {},
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@aave/=lib/aave-v3-core/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "test/units/libraries/SafeCast.t.sol": "SafeCastTest",
      },
      libraries: {},
    },
    sources: {
      "contracts/src/DataProvider.sol": {
        keccak256:
          "0xd23ffd6ff77b03ea16b61130fdfcda6d2bfa430576241003f89b35cd76f51e30",
        urls: [
          "bzz-raw://cc1ab2f99af4241f81feeeda6514fd30f11997adafddcdb48bebd2b383aae212",
          "dweb:/ipfs/QmSPp2B1Pka73Ur1KQMybMs3u73VUrDhev5w6U9iGLTmw7",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/Hyperdrive.sol": {
        keccak256:
          "0xd2e2e47f45dab0447497a20b8ef54960190d3c01ce2f53dbfae6abe2d095f1f5",
        urls: [
          "bzz-raw://c8d8f034071cf69e922975cddb6123fe125862688ecbe2c3fc01c1f235a4a72e",
          "dweb:/ipfs/QmQraAs5iFKtRYQTqFmpRLh6NSyYxbqrBMFgkGJL2E2ZCN",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveBase.sol": {
        keccak256:
          "0x978cac18e731453de1268355e70fae31f71718e4149ad1969a56133d1f04cf95",
        urls: [
          "bzz-raw://a3c37a688a10766ade884f36c111925d71318306e46c6e2d207c85ecc7adfb3e",
          "dweb:/ipfs/QmZJu7M9zPNKd2XahfHAtCLX9483228MzMrgP2fVaS1jbn",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveLP.sol": {
        keccak256:
          "0xe2f37ecc51c9eba59c4b5c13549ed4cdc0415d8af1902442d52ed012e4b9c22a",
        urls: [
          "bzz-raw://53efc435c55fa29822d5ae3271cc42bf4ae096e4dfc9fb150a410f39cd43651e",
          "dweb:/ipfs/QmQgRowy4YqCsxV9A9mFyxzGF7FigC4Huc66Cxy8YfeYAv",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveLong.sol": {
        keccak256:
          "0x004b7cadd3e9090ca6f5a59510696e3b844839e6305c9076cd3fd31d9b0a3188",
        urls: [
          "bzz-raw://da04266d0c817b69cde906770f047e9add9f8983a12553413c67b2c60ff15c2f",
          "dweb:/ipfs/QmNmKcdUVGLmjxMvUq8kyETZrkfW43JDXfcPHJfP4GrF6V",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveShort.sol": {
        keccak256:
          "0x3bdfd1e33a2498c6183dfb1684b0db7e6775e9ae2e1097800aeccc869b9e2baa",
        urls: [
          "bzz-raw://e5c9337dfb069d806644ea7ceabe425222f1bc5766248648ba7a9a420715bee8",
          "dweb:/ipfs/QmaL1ZHX4zyAXxMqNmJB4mZ5o54JUTWLnTrKGMBJmbnRDa",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveStorage.sol": {
        keccak256:
          "0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc",
        urls: [
          "bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a",
          "dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveTWAP.sol": {
        keccak256:
          "0x76cba088948ab50bb4956377235b302b28ef7c9f6cc68bda73211d66df41e92b",
        urls: [
          "bzz-raw://74e1b28c8cd08aa9adf3b3f31f0379c095299cd2b9de3d3595d7d55b0e0697cc",
          "dweb:/ipfs/QmTTnkPF3jUmdfynnJK6kUBTYSBZFWJs69A9e9tPQzqiac",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IERC20.sol": {
        keccak256:
          "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        urls: [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w",
        ],
        license: "MIT",
      },
      "contracts/src/interfaces/IForwarderFactory.sol": {
        keccak256:
          "0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af",
        urls: [
          "bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3",
          "dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        keccak256:
          "0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5",
        urls: [
          "bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e",
          "dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        keccak256:
          "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        urls: [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        keccak256:
          "0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8",
        urls: [
          "bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467",
          "dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        keccak256:
          "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        urls: [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        keccak256:
          "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        urls: [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        keccak256:
          "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        urls: [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        keccak256:
          "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        urls: [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/AssetId.sol": {
        keccak256:
          "0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384",
        urls: [
          "bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806",
          "dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/FixedPointMath.sol": {
        keccak256:
          "0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd",
        urls: [
          "bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b",
          "dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/HyperdriveMath.sol": {
        keccak256:
          "0x81bccd15f87d6fb2df7fe455ab94b2f267b0cef1875890d89158f448bb7694b2",
        urls: [
          "bzz-raw://e973fb36a335fa1b7993152f9b051bd52588b1624c3d76f9dd21d35fe45d5c75",
          "dweb:/ipfs/QmbYLW9GPe19dQVCYNdSwvcgqrUZtDRjPyYtF4QtMn49Zb",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/SafeCast.sol": {
        keccak256:
          "0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f",
        urls: [
          "bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5",
          "dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/YieldSpaceMath.sol": {
        keccak256:
          "0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04",
        urls: [
          "bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef",
          "dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/ERC20Forwarder.sol": {
        keccak256:
          "0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158",
        urls: [
          "bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034",
          "dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/ForwarderFactory.sol": {
        keccak256:
          "0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b",
        urls: [
          "bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e",
          "dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/MultiToken.sol": {
        keccak256:
          "0x1c22e52ab701c2b7ce3c0b049540ecba5fc24cd8b8000464b5b15c99dfee6a19",
        urls: [
          "bzz-raw://089273a3f853bdb205d34b70750eeca2edda7aaf999726ed9df0621d1e92bb98",
          "dweb:/ipfs/QmPy3tUmJb7gtnL9ACiWhhekKXGo3z3cd4SMYiUQX4geHy",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/MultiTokenStorage.sol": {
        keccak256:
          "0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8",
        urls: [
          "bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6",
          "dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj",
        ],
        license: "Apache-2.0",
      },
      "contracts/test/MockSafeCast.sol": {
        keccak256:
          "0x903bdd450676823155f3e633ce5a62f09d7727048840ca126207bf03ac8edac1",
        urls: [
          "bzz-raw://786983195b672efd947907485a8f9a6cf49bbd4d49edb48dede9974cafd180ef",
          "dweb:/ipfs/Qmf8cQgBxfPMPcicRa69H82XjvHtJHMo6TPtTqNNF6yS26",
        ],
        license: "Apache-2.0",
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        keccak256:
          "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        urls: [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k",
        ],
        license: "GPL-3.0-or-later",
      },
      "lib/forge-std/src/Base.sol": {
        keccak256:
          "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        urls: [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdAssertions.sol": {
        keccak256:
          "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        urls: [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdChains.sol": {
        keccak256:
          "0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d",
        urls: [
          "bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4",
          "dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdCheats.sol": {
        keccak256:
          "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        urls: [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdError.sol": {
        keccak256:
          "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        urls: [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdInvariant.sol": {
        keccak256:
          "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        urls: [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdJson.sol": {
        keccak256:
          "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        urls: [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdMath.sol": {
        keccak256:
          "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        urls: [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdStorage.sol": {
        keccak256:
          "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        urls: [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdStyle.sol": {
        keccak256:
          "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        urls: [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdUtils.sol": {
        keccak256:
          "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        urls: [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/Test.sol": {
        keccak256:
          "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        urls: [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/Vm.sol": {
        keccak256:
          "0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4",
        urls: [
          "bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241",
          "dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/console.sol": {
        keccak256:
          "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        urls: [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/console2.sol": {
        keccak256:
          "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        urls: [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        keccak256:
          "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        urls: [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/safeconsole.sol": {
        keccak256:
          "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        urls: [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        keccak256:
          "0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b",
        urls: [
          "bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df",
          "dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        urls: [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":
        {
          keccak256:
            "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
          urls: [
            "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
            "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
          urls: [
            "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
            "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":
        {
          keccak256:
            "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
          urls: [
            "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
            "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol":
        {
          keccak256:
            "0xec819d9f89eef128f291b9bfc054b9c3ce0cc11a35b5a1b52aca3620b69bafec",
          urls: [
            "bzz-raw://cbc9b07856f18e498852142293d8e1d98416748998be1916a4d653b1702fd0f3",
            "dweb:/ipfs/Qmd8HNLSuqNvpqh3pZBw3ZEmDeggaog9Amt1L7RqCe4RBL",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        keccak256:
          "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        urls: [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        keccak256:
          "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        urls: [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        urls: [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3",
        ],
        license: "MIT",
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        keccak256:
          "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        urls: [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j",
        ],
        license: "AGPL-3.0-only",
      },
      "test/units/libraries/SafeCast.t.sol": {
        keccak256:
          "0x1dbf39d9148bb5830dbffef43ced6befd18ee62ba6181c0fe0c7929e21d215a9",
        urls: [
          "bzz-raw://39704402dc496facd0fa3f5137af927b5baca59dea1c5896e3b184ba6d9f50d9",
          "dweb:/ipfs/QmYyYm2q4BTEqvekzAKwdgK49ubcPYBdH2MLQANALnJbkd",
        ],
        license: "MIT",
      },
      "test/utils/BaseTest.sol": {
        keccak256:
          "0xe0bcf96bc6f6e483054204b1b888eebc08b15e39a550d9496efff6f5eb108ae6",
        urls: [
          "bzz-raw://6f77f4697e7cbb2a7c88939d6095784b18cb6dba9910aaf35723ba44c1598dbd",
          "dweb:/ipfs/QmQayrq4hkUJqeQUS661YpCM2hC3T5o7UbSfeWxE5X2RvD",
        ],
        license: "Apache-2.0",
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "test/units/libraries/SafeCast.t.sol",
    id: 116187,
    exportedSymbols: {
      BaseTest: [117331],
      MockSafeCast: [14574],
      SafeCast: [10848],
      SafeCastTest: [116186],
      Vm: [28241],
    },
    nodeType: "SourceUnit",
    src: "32:1233:157",
    nodes: [
      {
        id: 116005,
        nodeType: "PragmaDirective",
        src: "32:24:157",
        nodes: [],
        literals: ["solidity", "^", "0.8", ".18"],
      },
      {
        id: 116007,
        nodeType: "ImportDirective",
        src: "58:38:157",
        nodes: [],
        absolutePath: "lib/forge-std/src/Vm.sol",
        file: "forge-std/Vm.sol",
        nameLocation: "-1:-1:-1",
        scope: 116187,
        sourceUnit: 28242,
        symbolAliases: [
          {
            foreign: {
              id: 116006,
              name: "Vm",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 28241,
              src: "67:2:157",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 116009,
        nodeType: "ImportDirective",
        src: "97:64:157",
        nodes: [],
        absolutePath: "contracts/src/libraries/SafeCast.sol",
        file: "contracts/src/libraries/SafeCast.sol",
        nameLocation: "-1:-1:-1",
        scope: 116187,
        sourceUnit: 10849,
        symbolAliases: [
          {
            foreign: {
              id: 116008,
              name: "SafeCast",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 10848,
              src: "106:8:157",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 116011,
        nodeType: "ImportDirective",
        src: "162:63:157",
        nodes: [],
        absolutePath: "contracts/test/MockSafeCast.sol",
        file: "contracts/test/MockSafeCast.sol",
        nameLocation: "-1:-1:-1",
        scope: 116187,
        sourceUnit: 14575,
        symbolAliases: [
          {
            foreign: {
              id: 116010,
              name: "MockSafeCast",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 14574,
              src: "171:12:157",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 116013,
        nodeType: "ImportDirective",
        src: "226:51:157",
        nodes: [],
        absolutePath: "test/utils/BaseTest.sol",
        file: "test/utils/BaseTest.sol",
        nameLocation: "-1:-1:-1",
        scope: 116187,
        sourceUnit: 117332,
        symbolAliases: [
          {
            foreign: {
              id: 116012,
              name: "BaseTest",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 117331,
              src: "235:8:157",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 116186,
        nodeType: "ContractDefinition",
        src: "279:985:157",
        nodes: [
          {
            id: 116066,
            nodeType: "FunctionDefinition",
            src: "319:332:157",
            nodes: [],
            body: {
              id: 116065,
              nodeType: "Block",
              src: "370:281:157",
              nodes: [],
              statements: [
                {
                  assignments: [116022],
                  declarations: [
                    {
                      constant: false,
                      id: 116022,
                      mutability: "mutable",
                      name: "mock",
                      nameLocation: "393:4:157",
                      nodeType: "VariableDeclaration",
                      scope: 116065,
                      src: "380:17:157",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_MockSafeCast_$14574",
                        typeString: "contract MockSafeCast",
                      },
                      typeName: {
                        id: 116021,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 116020,
                          name: "MockSafeCast",
                          nameLocations: ["380:12:157"],
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 14574,
                          src: "380:12:157",
                        },
                        referencedDeclaration: 14574,
                        src: "380:12:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 116027,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 116025,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "400:16:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_creation_nonpayable$__$returns$_t_contract$_MockSafeCast_$14574_$",
                        typeString:
                          "function () returns (contract MockSafeCast)",
                      },
                      typeName: {
                        id: 116024,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 116023,
                          name: "MockSafeCast",
                          nameLocations: ["404:12:157"],
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 14574,
                          src: "404:12:157",
                        },
                        referencedDeclaration: 14574,
                        src: "404:12:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                    },
                    id: 116026,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "400:18:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_MockSafeCast_$14574",
                      typeString: "contract MockSafeCast",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "380:38:157",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 116035,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 116028,
                      name: "num",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 116017,
                      src: "433:3:157",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier:
                              "t_rational_340282366920938463463374607431768211455_by_1",
                            typeString:
                              "int_const 3402...(31 digits omitted)...1455",
                          },
                          id: 116033,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211456_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1456",
                            },
                            id: 116031,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: "32",
                              id: 116029,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "440:1:157",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_2_by_1",
                                typeString: "int_const 2",
                              },
                              value: "2",
                            },
                            nodeType: "BinaryOperation",
                            operator: "**",
                            rightExpression: {
                              hexValue: "313238",
                              id: 116030,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "445:3:157",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_128_by_1",
                                typeString: "int_const 128",
                              },
                              value: "128",
                            },
                            src: "440:8:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211456_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1456",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            hexValue: "31",
                            id: 116032,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "451:1:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                            value: "1",
                          },
                          src: "440:12:157",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_rational_340282366920938463463374607431768211455_by_1",
                            typeString:
                              "int_const 3402...(31 digits omitted)...1455",
                          },
                        },
                      ],
                      id: 116034,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "439:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_rational_340282366920938463463374607431768211455_by_1",
                        typeString:
                          "int_const 3402...(31 digits omitted)...1455",
                      },
                    },
                    src: "433:20:157",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 116063,
                    nodeType: "Block",
                    src: "536:109:157",
                    statements: [
                      {
                        assignments: [116049],
                        declarations: [
                          {
                            constant: false,
                            id: 116049,
                            mutability: "mutable",
                            name: "cast_num",
                            nameLocation: "558:8:157",
                            nodeType: "VariableDeclaration",
                            scope: 116063,
                            src: "550:16:157",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint128",
                              typeString: "uint128",
                            },
                            typeName: {
                              id: 116048,
                              name: "uint128",
                              nodeType: "ElementaryTypeName",
                              src: "550:7:157",
                              typeDescriptions: {
                                typeIdentifier: "t_uint128",
                                typeString: "uint128",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 116054,
                        initialValue: {
                          arguments: [
                            {
                              id: 116052,
                              name: "num",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116017,
                              src: "584:3:157",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 116050,
                              name: "mock",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116022,
                              src: "569:4:157",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_contract$_MockSafeCast_$14574",
                                typeString: "contract MockSafeCast",
                              },
                            },
                            id: 116051,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "574:9:157",
                            memberName: "toUint128",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 14573,
                            src: "569:14:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                              typeString:
                                "function (uint256) pure external returns (uint128)",
                            },
                          },
                          id: 116053,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "569:19:157",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint128",
                            typeString: "uint128",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "550:38:157",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 116056,
                              name: "cast_num",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116049,
                              src: "611:8:157",
                              typeDescriptions: {
                                typeIdentifier: "t_uint128",
                                typeString: "uint128",
                              },
                            },
                            {
                              arguments: [
                                {
                                  id: 116059,
                                  name: "num",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 116017,
                                  src: "629:3:157",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                ],
                                id: 116058,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "621:7:157",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_uint128_$",
                                  typeString: "type(uint128)",
                                },
                                typeName: {
                                  id: 116057,
                                  name: "uint128",
                                  nodeType: "ElementaryTypeName",
                                  src: "621:7:157",
                                  typeDescriptions: {},
                                },
                              },
                              id: 116060,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "typeConversion",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "621:12:157",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_uint128",
                                typeString: "uint128",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint128",
                                typeString: "uint128",
                              },
                              {
                                typeIdentifier: "t_uint128",
                                typeString: "uint128",
                              },
                            ],
                            id: 116055,
                            name: "assertEq",
                            nodeType: "Identifier",
                            overloadedDeclarations: [
                              17264, 17289, 17302, 17318, 17360, 17402, 17444,
                              17481, 17518, 17555, 15060, 15085, 15115, 15140,
                              15199, 15224, 15254, 15279, 16752, 16787,
                            ],
                            referencedDeclaration: 15254,
                            src: "602:8:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              typeString: "function (uint256,uint256)",
                            },
                          },
                          id: 116061,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "602:32:157",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 116062,
                        nodeType: "ExpressionStatement",
                        src: "602:32:157",
                      },
                    ],
                  },
                  id: 116064,
                  nodeType: "IfStatement",
                  src: "429:216:157",
                  trueBody: {
                    id: 116047,
                    nodeType: "Block",
                    src: "455:75:157",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            expression: {
                              id: 116036,
                              name: "vm",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 17090,
                              src: "469:2:157",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_Vm_$28241",
                                typeString: "contract Vm",
                              },
                            },
                            id: 116038,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "472:12:157",
                            memberName: "expectRevert",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 27903,
                            src: "469:15:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$__$returns$__$",
                              typeString: "function () external",
                            },
                          },
                          id: 116039,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "469:17:157",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 116040,
                        nodeType: "ExpressionStatement",
                        src: "469:17:157",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 116044,
                              name: "num",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116017,
                              src: "515:3:157",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              id: 116041,
                              name: "mock",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116022,
                              src: "500:4:157",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_contract$_MockSafeCast_$14574",
                                typeString: "contract MockSafeCast",
                              },
                            },
                            id: 116043,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "505:9:157",
                            memberName: "toUint128",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 14573,
                            src: "500:14:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                              typeString:
                                "function (uint256) pure external returns (uint128)",
                            },
                          },
                          id: 116045,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "500:19:157",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint128",
                            typeString: "uint128",
                          },
                        },
                        id: 116046,
                        nodeType: "ExpressionStatement",
                        src: "500:19:157",
                      },
                    ],
                  },
                },
              ],
            },
            functionSelector: "8558cbba",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "testSafeCastToUint128",
            nameLocation: "328:21:157",
            parameters: {
              id: 116018,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 116017,
                  mutability: "mutable",
                  name: "num",
                  nameLocation: "358:3:157",
                  nodeType: "VariableDeclaration",
                  scope: 116066,
                  src: "350:11:157",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 116016,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "350:7:157",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "349:13:157",
            },
            returnParameters: {
              id: 116019,
              nodeType: "ParameterList",
              parameters: [],
              src: "370:0:157",
            },
            scope: 116186,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 116185,
            nodeType: "FunctionDefinition",
            src: "657:605:157",
            nodes: [],
            body: {
              id: 116184,
              nodeType: "Block",
              src: "690:572:157",
              nodes: [],
              statements: [
                {
                  assignments: [116071],
                  declarations: [
                    {
                      constant: false,
                      id: 116071,
                      mutability: "mutable",
                      name: "mock",
                      nameLocation: "713:4:157",
                      nodeType: "VariableDeclaration",
                      scope: 116184,
                      src: "700:17:157",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_MockSafeCast_$14574",
                        typeString: "contract MockSafeCast",
                      },
                      typeName: {
                        id: 116070,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 116069,
                          name: "MockSafeCast",
                          nameLocations: ["700:12:157"],
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 14574,
                          src: "700:12:157",
                        },
                        referencedDeclaration: 14574,
                        src: "700:12:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 116076,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 116074,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "720:16:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_creation_nonpayable$__$returns$_t_contract$_MockSafeCast_$14574_$",
                        typeString:
                          "function () returns (contract MockSafeCast)",
                      },
                      typeName: {
                        id: 116073,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 116072,
                          name: "MockSafeCast",
                          nameLocations: ["724:12:157"],
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 14574,
                          src: "724:12:157",
                        },
                        referencedDeclaration: 14574,
                        src: "724:12:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                    },
                    id: 116075,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "720:18:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_MockSafeCast_$14574",
                      typeString: "contract MockSafeCast",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "700:38:157",
                },
                {
                  assignments: [116078],
                  declarations: [
                    {
                      constant: false,
                      id: 116078,
                      mutability: "mutable",
                      name: "cast_num",
                      nameLocation: "757:8:157",
                      nodeType: "VariableDeclaration",
                      scope: 116184,
                      src: "749:16:157",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint128",
                        typeString: "uint128",
                      },
                      typeName: {
                        id: 116077,
                        name: "uint128",
                        nodeType: "ElementaryTypeName",
                        src: "749:7:157",
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 116083,
                  initialValue: {
                    arguments: [
                      {
                        hexValue: "30",
                        id: 116081,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "783:1:157",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                        value: "0",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_rational_0_by_1",
                          typeString: "int_const 0",
                        },
                      ],
                      expression: {
                        id: 116079,
                        name: "mock",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116071,
                        src: "768:4:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      id: 116080,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "773:9:157",
                      memberName: "toUint128",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14573,
                      src: "768:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                        typeString:
                          "function (uint256) pure external returns (uint128)",
                      },
                    },
                    id: 116082,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "768:17:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "749:36:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 116085,
                        name: "cast_num",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116078,
                        src: "804:8:157",
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                      {
                        arguments: [
                          {
                            hexValue: "30",
                            id: 116088,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "822:1:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                          ],
                          id: 116087,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "814:7:157",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_uint128_$",
                            typeString: "type(uint128)",
                          },
                          typeName: {
                            id: 116086,
                            name: "uint128",
                            nodeType: "ElementaryTypeName",
                            src: "814:7:157",
                            typeDescriptions: {},
                          },
                        },
                        id: 116089,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "typeConversion",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "814:10:157",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      ],
                      id: 116084,
                      name: "assertEq",
                      nodeType: "Identifier",
                      overloadedDeclarations: [
                        17264, 17289, 17302, 17318, 17360, 17402, 17444, 17481,
                        17518, 17555, 15060, 15085, 15115, 15140, 15199, 15224,
                        15254, 15279, 16752, 16787,
                      ],
                      referencedDeclaration: 15254,
                      src: "795:8:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        typeString: "function (uint256,uint256)",
                      },
                    },
                    id: 116090,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "795:30:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116091,
                  nodeType: "ExpressionStatement",
                  src: "795:30:157",
                },
                {
                  expression: {
                    id: 116097,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 116092,
                      name: "cast_num",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 116078,
                      src: "835:8:157",
                      typeDescriptions: {
                        typeIdentifier: "t_uint128",
                        typeString: "uint128",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          hexValue: "31",
                          id: 116095,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "861:1:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                          value: "1",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                        ],
                        expression: {
                          id: 116093,
                          name: "mock",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 116071,
                          src: "846:4:157",
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_MockSafeCast_$14574",
                            typeString: "contract MockSafeCast",
                          },
                        },
                        id: 116094,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "851:9:157",
                        memberName: "toUint128",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 14573,
                        src: "846:14:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                          typeString:
                            "function (uint256) pure external returns (uint128)",
                        },
                      },
                      id: 116096,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "846:17:157",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint128",
                        typeString: "uint128",
                      },
                    },
                    src: "835:28:157",
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116098,
                  nodeType: "ExpressionStatement",
                  src: "835:28:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 116100,
                        name: "cast_num",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116078,
                        src: "882:8:157",
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                      {
                        arguments: [
                          {
                            hexValue: "31",
                            id: 116103,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "900:1:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                            value: "1",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                          ],
                          id: 116102,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "892:7:157",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_uint128_$",
                            typeString: "type(uint128)",
                          },
                          typeName: {
                            id: 116101,
                            name: "uint128",
                            nodeType: "ElementaryTypeName",
                            src: "892:7:157",
                            typeDescriptions: {},
                          },
                        },
                        id: 116104,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "typeConversion",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "892:10:157",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      ],
                      id: 116099,
                      name: "assertEq",
                      nodeType: "Identifier",
                      overloadedDeclarations: [
                        17264, 17289, 17302, 17318, 17360, 17402, 17444, 17481,
                        17518, 17555, 15060, 15085, 15115, 15140, 15199, 15224,
                        15254, 15279, 16752, 16787,
                      ],
                      referencedDeclaration: 15254,
                      src: "873:8:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        typeString: "function (uint256,uint256)",
                      },
                    },
                    id: 116105,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "873:30:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116106,
                  nodeType: "ExpressionStatement",
                  src: "873:30:157",
                },
                {
                  expression: {
                    id: 116116,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 116107,
                      name: "cast_num",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 116078,
                      src: "913:8:157",
                      typeDescriptions: {
                        typeIdentifier: "t_uint128",
                        typeString: "uint128",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier:
                              "t_rational_340282366920938463463374607431768211455_by_1",
                            typeString:
                              "int_const 3402...(31 digits omitted)...1455",
                          },
                          id: 116114,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211456_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1456",
                            },
                            id: 116112,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              hexValue: "32",
                              id: 116110,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "939:1:157",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_2_by_1",
                                typeString: "int_const 2",
                              },
                              value: "2",
                            },
                            nodeType: "BinaryOperation",
                            operator: "**",
                            rightExpression: {
                              hexValue: "313238",
                              id: 116111,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "944:3:157",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_128_by_1",
                                typeString: "int_const 128",
                              },
                              value: "128",
                            },
                            src: "939:8:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211456_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1456",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            hexValue: "31",
                            id: 116113,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "950:1:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_1_by_1",
                              typeString: "int_const 1",
                            },
                            value: "1",
                          },
                          src: "939:12:157",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_rational_340282366920938463463374607431768211455_by_1",
                            typeString:
                              "int_const 3402...(31 digits omitted)...1455",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier:
                              "t_rational_340282366920938463463374607431768211455_by_1",
                            typeString:
                              "int_const 3402...(31 digits omitted)...1455",
                          },
                        ],
                        expression: {
                          id: 116108,
                          name: "mock",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 116071,
                          src: "924:4:157",
                          typeDescriptions: {
                            typeIdentifier: "t_contract$_MockSafeCast_$14574",
                            typeString: "contract MockSafeCast",
                          },
                        },
                        id: 116109,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "929:9:157",
                        memberName: "toUint128",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 14573,
                        src: "924:14:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                          typeString:
                            "function (uint256) pure external returns (uint128)",
                        },
                      },
                      id: 116115,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "924:28:157",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint128",
                        typeString: "uint128",
                      },
                    },
                    src: "913:39:157",
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116117,
                  nodeType: "ExpressionStatement",
                  src: "913:39:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 116119,
                        name: "cast_num",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116078,
                        src: "971:8:157",
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                      {
                        arguments: [
                          {
                            commonType: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211455_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1455",
                            },
                            id: 116126,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            leftExpression: {
                              commonType: {
                                typeIdentifier:
                                  "t_rational_340282366920938463463374607431768211456_by_1",
                                typeString:
                                  "int_const 3402...(31 digits omitted)...1456",
                              },
                              id: 116124,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              leftExpression: {
                                hexValue: "32",
                                id: 116122,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "989:1:157",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_2_by_1",
                                  typeString: "int_const 2",
                                },
                                value: "2",
                              },
                              nodeType: "BinaryOperation",
                              operator: "**",
                              rightExpression: {
                                hexValue: "313238",
                                id: 116123,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "994:3:157",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_128_by_1",
                                  typeString: "int_const 128",
                                },
                                value: "128",
                              },
                              src: "989:8:157",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_rational_340282366920938463463374607431768211456_by_1",
                                typeString:
                                  "int_const 3402...(31 digits omitted)...1456",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "-",
                            rightExpression: {
                              hexValue: "31",
                              id: 116125,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "1000:1:157",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_1_by_1",
                                typeString: "int_const 1",
                              },
                              value: "1",
                            },
                            src: "989:12:157",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211455_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1455",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier:
                                "t_rational_340282366920938463463374607431768211455_by_1",
                              typeString:
                                "int_const 3402...(31 digits omitted)...1455",
                            },
                          ],
                          id: 116121,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "981:7:157",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_uint128_$",
                            typeString: "type(uint128)",
                          },
                          typeName: {
                            id: 116120,
                            name: "uint128",
                            nodeType: "ElementaryTypeName",
                            src: "981:7:157",
                            typeDescriptions: {},
                          },
                        },
                        id: 116127,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "typeConversion",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "981:21:157",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                        {
                          typeIdentifier: "t_uint128",
                          typeString: "uint128",
                        },
                      ],
                      id: 116118,
                      name: "assertEq",
                      nodeType: "Identifier",
                      overloadedDeclarations: [
                        17264, 17289, 17302, 17318, 17360, 17402, 17444, 17481,
                        17518, 17555, 15060, 15085, 15115, 15140, 15199, 15224,
                        15254, 15279, 16752, 16787,
                      ],
                      referencedDeclaration: 15254,
                      src: "962:8:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        typeString: "function (uint256,uint256)",
                      },
                    },
                    id: 116128,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "962:41:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116129,
                  nodeType: "ExpressionStatement",
                  src: "962:41:157",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 116130,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "1014:2:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 116132,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1017:12:157",
                      memberName: "expectRevert",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27903,
                      src: "1014:15:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$__$returns$__$",
                        typeString: "function () external",
                      },
                    },
                    id: 116133,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1014:17:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116134,
                  nodeType: "ExpressionStatement",
                  src: "1014:17:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier:
                            "t_rational_340282366920938463463374607431768211456_by_1",
                          typeString:
                            "int_const 3402...(31 digits omitted)...1456",
                        },
                        id: 116140,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        leftExpression: {
                          hexValue: "32",
                          id: 116138,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1056:1:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_2_by_1",
                            typeString: "int_const 2",
                          },
                          value: "2",
                        },
                        nodeType: "BinaryOperation",
                        operator: "**",
                        rightExpression: {
                          hexValue: "313238",
                          id: 116139,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1061:3:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_128_by_1",
                            typeString: "int_const 128",
                          },
                          value: "128",
                        },
                        src: "1056:8:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_rational_340282366920938463463374607431768211456_by_1",
                          typeString:
                            "int_const 3402...(31 digits omitted)...1456",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_rational_340282366920938463463374607431768211456_by_1",
                          typeString:
                            "int_const 3402...(31 digits omitted)...1456",
                        },
                      ],
                      expression: {
                        id: 116135,
                        name: "mock",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116071,
                        src: "1041:4:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      id: 116137,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1046:9:157",
                      memberName: "toUint128",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14573,
                      src: "1041:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                        typeString:
                          "function (uint256) pure external returns (uint128)",
                      },
                    },
                    id: 116141,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1041:24:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116142,
                  nodeType: "ExpressionStatement",
                  src: "1041:24:157",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 116143,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "1076:2:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 116145,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1079:12:157",
                      memberName: "expectRevert",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27903,
                      src: "1076:15:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$__$returns$__$",
                        typeString: "function () external",
                      },
                    },
                    id: 116146,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1076:17:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116147,
                  nodeType: "ExpressionStatement",
                  src: "1076:17:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier:
                            "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          typeString:
                            "int_const 1157...(70 digits omitted)...9935",
                        },
                        id: 116155,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier:
                              "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                            typeString:
                              "int_const 1157...(70 digits omitted)...9936",
                          },
                          id: 116153,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          leftExpression: {
                            hexValue: "32",
                            id: 116151,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "1118:1:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_2_by_1",
                              typeString: "int_const 2",
                            },
                            value: "2",
                          },
                          nodeType: "BinaryOperation",
                          operator: "**",
                          rightExpression: {
                            hexValue: "323536",
                            id: 116152,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "1123:3:157",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_256_by_1",
                              typeString: "int_const 256",
                            },
                            value: "256",
                          },
                          src: "1118:8:157",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                            typeString:
                              "int_const 1157...(70 digits omitted)...9936",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "-",
                        rightExpression: {
                          hexValue: "31",
                          id: 116154,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1129:1:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                          value: "1",
                        },
                        src: "1118:12:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          typeString:
                            "int_const 1157...(70 digits omitted)...9935",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          typeString:
                            "int_const 1157...(70 digits omitted)...9935",
                        },
                      ],
                      expression: {
                        id: 116148,
                        name: "mock",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116071,
                        src: "1103:4:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      id: 116150,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1108:9:157",
                      memberName: "toUint128",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14573,
                      src: "1103:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                        typeString:
                          "function (uint256) pure external returns (uint128)",
                      },
                    },
                    id: 116156,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1103:28:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116157,
                  nodeType: "ExpressionStatement",
                  src: "1103:28:157",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 116158,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "1142:2:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 116160,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1145:12:157",
                      memberName: "expectRevert",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27903,
                      src: "1142:15:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$__$returns$__$",
                        typeString: "function () external",
                      },
                    },
                    id: 116161,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1142:17:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116162,
                  nodeType: "ExpressionStatement",
                  src: "1142:17:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier:
                            "t_rational_87112285931760246646623899502532662132736_by_1",
                          typeString:
                            "int_const 8711...(33 digits omitted)...2736",
                        },
                        id: 116168,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        leftExpression: {
                          hexValue: "32",
                          id: 116166,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1184:1:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_2_by_1",
                            typeString: "int_const 2",
                          },
                          value: "2",
                        },
                        nodeType: "BinaryOperation",
                        operator: "**",
                        rightExpression: {
                          hexValue: "313336",
                          id: 116167,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1189:3:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_136_by_1",
                            typeString: "int_const 136",
                          },
                          value: "136",
                        },
                        src: "1184:8:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_rational_87112285931760246646623899502532662132736_by_1",
                          typeString:
                            "int_const 8711...(33 digits omitted)...2736",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_rational_87112285931760246646623899502532662132736_by_1",
                          typeString:
                            "int_const 8711...(33 digits omitted)...2736",
                        },
                      ],
                      expression: {
                        id: 116163,
                        name: "mock",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116071,
                        src: "1169:4:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      id: 116165,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1174:9:157",
                      memberName: "toUint128",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14573,
                      src: "1169:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                        typeString:
                          "function (uint256) pure external returns (uint128)",
                      },
                    },
                    id: 116169,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1169:24:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116170,
                  nodeType: "ExpressionStatement",
                  src: "1169:24:157",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 116171,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "1204:2:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 116173,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1207:12:157",
                      memberName: "expectRevert",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27903,
                      src: "1204:15:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$__$returns$__$",
                        typeString: "function () external",
                      },
                    },
                    id: 116174,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1204:17:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 116175,
                  nodeType: "ExpressionStatement",
                  src: "1204:17:157",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier:
                            "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          typeString:
                            "int_const 5789...(69 digits omitted)...9968",
                        },
                        id: 116181,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        leftExpression: {
                          hexValue: "32",
                          id: 116179,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1246:1:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_2_by_1",
                            typeString: "int_const 2",
                          },
                          value: "2",
                        },
                        nodeType: "BinaryOperation",
                        operator: "**",
                        rightExpression: {
                          hexValue: "323535",
                          id: 116180,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1251:3:157",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_255_by_1",
                            typeString: "int_const 255",
                          },
                          value: "255",
                        },
                        src: "1246:8:157",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          typeString:
                            "int_const 5789...(69 digits omitted)...9968",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          typeString:
                            "int_const 5789...(69 digits omitted)...9968",
                        },
                      ],
                      expression: {
                        id: 116176,
                        name: "mock",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116071,
                        src: "1231:4:157",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_MockSafeCast_$14574",
                          typeString: "contract MockSafeCast",
                        },
                      },
                      id: 116178,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1236:9:157",
                      memberName: "toUint128",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14573,
                      src: "1231:14:157",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_pure$_t_uint256_$returns$_t_uint128_$",
                        typeString:
                          "function (uint256) pure external returns (uint128)",
                      },
                    },
                    id: 116182,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1231:24:157",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint128",
                      typeString: "uint128",
                    },
                  },
                  id: 116183,
                  nodeType: "ExpressionStatement",
                  src: "1231:24:157",
                },
              ],
            },
            functionSelector: "87fd4875",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "test_toUint128",
            nameLocation: "666:14:157",
            parameters: {
              id: 116067,
              nodeType: "ParameterList",
              parameters: [],
              src: "680:2:157",
            },
            returnParameters: {
              id: 116068,
              nodeType: "ParameterList",
              parameters: [],
              src: "690:0:157",
            },
            scope: 116186,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 116014,
              name: "BaseTest",
              nameLocations: ["304:8:157"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 117331,
              src: "304:8:157",
            },
            id: 116015,
            nodeType: "InheritanceSpecifier",
            src: "304:8:157",
          },
        ],
        canonicalName: "SafeCastTest",
        contractDependencies: [14574],
        contractKind: "contract",
        fullyImplemented: true,
        linearizedBaseContracts: [
          116186, 117331, 26704, 26653, 22391, 22101, 21337, 19283, 18563,
          17031, 17097, 17094,
        ],
        name: "SafeCastTest",
        nameLocation: "288:12:157",
        scope: 116187,
        usedErrors: [116815, 116817],
      },
    ],
    license: "MIT",
  },
  id: 157,
} as const;
