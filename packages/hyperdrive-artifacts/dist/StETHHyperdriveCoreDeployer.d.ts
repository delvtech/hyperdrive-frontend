export declare const StETHHyperdriveCoreDeployer: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "_lido";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialVaultSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "target0";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target1";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target2";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target3";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target4";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lido";
        readonly outputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "696:1446:8:-:0;;;923:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;958:12:8;;;696:1446;;14:304:182;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:182;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:182:o;:::-;696:1446:8;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630c65a1cb1461003b57806323509a2d1461006a575b600080fd5b61004e61004936600461028c565b610091565b6040516001600160a01b03909116815260200160405180910390f35b61004e7f000000000000000000000000000000000000000000000000000000000000000081565b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208988888888887f00000000000000000000000000000000000000000000000000000000000000006040516100f090610130565b61010097969594939291906103e9565b8190604051809103906000f5905080158015610120573d6000803e3d6000fd5b5090505b98975050505050505050565b6115888061052883390190565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156101775761017761013d565b60405290565b80356001600160a01b038116811461019457600080fd5b919050565b6000608082840312156101ab57600080fd5b6040516080810181811067ffffffffffffffff821117156101ce576101ce61013d565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f83011261021057600080fd5b813567ffffffffffffffff8082111561022b5761022b61013d565b604051601f8301601f19908116603f011681019082821181831017156102535761025361013d565b8160405283815286602085880101111561026c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080888a036102c08112156102aa57600080fd5b6101e0808212156102ba57600080fd5b6102c2610153565b91506102cd8b61017d565b82526102db60208c0161017d565b602083015260408b0135604083015260608b0135606083015260808b0135608083015260a08b013560a083015260c08b013560c083015260e08b013560e0830152610100808c01358184015250610120610336818d0161017d565b908301526101406103488c820161017d565b9083015261016061035b8d8d8301610199565b9083015290985089013567ffffffffffffffff81111561037a57600080fd5b6103868b828c016101ff565b9750506103966102008a0161017d565b95506103a56102208a0161017d565b94506103b46102408a0161017d565b93506103c36102608a0161017d565b92506103d26102808a0161017d565b91506102a089013590509295985092959890939650565b87516001600160a01b031681526102a08101602089015161041560208401826001600160a01b03169052565b5060408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a01518184015250610120808a0151610479828501826001600160a01b03169052565b5050610140898101516001600160a01b03811684830152505061016089810151805184830152602081015161018085015260408101516101a085015260608101516101c085015250506001600160a01b0388166101e08301526001600160a01b0387166102008301526001600160a01b0386166102208301526001600160a01b0385166102408301526001600160a01b0384166102608301526001600160a01b03831661028083015261012456fe6103006040523480156200001257600080fd5b506040516200158838038062001588833981016040819052620000359162000222565b600160005586516001600160a01b0390811660809081526060808a015161018052908901516101a05260a0808a01516101c05260e0808b015190915260c0808b01519052610100808b0151909152610160808b01805151909252815160209081015161012090815283516040908101516101409081529451909501519092528b0151841661020052918a01516102205290890151600880546001600160a01b03191691841691909117905588015181166101e0528681166102405285811661026052848116610280528381166102a0528281166102c0528181166102e052875173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9116146200014b57604051630722152560e11b815260040160405180910390fd5b5050505050505062000378565b60405161018081016001600160401b03811182821017156200018a57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001a857600080fd5b919050565b600060808284031215620001c057600080fd5b604051608081016001600160401b0381118282101715620001f157634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008060008060008789036102a08112156200024057600080fd5b6101e0808212156200025157600080fd5b6200025b62000158565b9150620002688a62000190565b82526200027860208b0162000190565b602083015260408a0151604083015260608a0151606083015260808a0151608083015260a08a015160a083015260c08a015160c083015260e08a015160e0830152610100808b01518184015250610120620002d5818c0162000190565b90830152610140620002e98b820162000190565b90830152610160620002fe8c8c8301620001ad565b818401525081985062000313818b0162000190565b9750505062000326610200890162000190565b945062000337610220890162000190565b935062000348610240890162000190565b925062000359610260890162000190565b91506200036a610280890162000190565b905092959891949750929550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e0516110e3620004a56000396000505060008181610601015261099c015260008181610546015281816107cb01526109660152600081816104ff0152818161070301526109f60152600081816105ad0152818161066d01526107680152600081816101ce015281816103900152818161063d0152818161069f015281816106d1015281816107370152818161079b015281816107fc0152818161093401526109c5015260005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110e36000f3fe6080604052600436106101b75760003560e01c80639cd241af116100ec578063dbbe80701161008a578063eac3e79911610064578063eac3e7991461059b578063ed64bab2146105cf578063f3f70707146105ef578063f698da2514610623576101b7565b8063dbbe807014610568578063ded06231146103ca578063e44808bc1461057b576101b7565b8063ab033ea9116100c6578063ab033ea9146102c7578063cba2e58d14610521578063cbc1343414610304578063d899e11214610534576101b7565b80639cd241af146104cd578063a22cb4651461047a578063a6e8a859146104ed576101b7565b806330adf81f116101595780634ed2d6ac116101335780634ed2d6ac1461045f5780637180c8ca1461047a57806377d05ff41461049a5780639032c726146104ad576101b7565b806330adf81f146103f85780633e691db91461042c5780634c2ac1d91461044c576101b7565b806317fad7fc1161019557806317fad7fc1461033e5780631c0f12b61461035e57806321b57d531461037e57806329b23fc1146103ca576101b7565b806301681a62146102c757806302329a29146102e9578063074a6de914610304575b3480156101c357600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610206929190610ac4565b600060405180830381855af49150503d8060008114610241576040519150601f19603f3d011682016040523d82523d6000602084013e610246565b606091505b5091509150811561026a57604051638bb0a34b60e01b815260040160405180910390fd5b600061027582610ad4565b90506001600160e01b03198116636e64089360e11b1461029757815160208301fd5b8151600319810160048401908152926102b891810160200190602401610b45565b80519650602001945050505050f35b3480156102d357600080fd5b506102e76102e2366004610c0a565b610638565b005b3480156102f557600080fd5b506102e76102e2366004610c43565b34801561031057600080fd5b5061032461031f366004610c70565b610665565b604080519283526020830191909152015b60405180910390f35b34801561034a57600080fd5b506102e7610359366004610d0c565b61069a565b34801561036a57600080fd5b506102e7610379366004610da1565b6106cc565b34801561038a57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610335565b3480156103d657600080fd5b506103ea6103e5366004610de9565b6106fc565b604051908152602001610335565b34801561040457600080fd5b506103ea7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561043857600080fd5b506103ea610447366004610e43565b610730565b6103ea61045a366004610e80565b610761565b34801561046b57600080fd5b506102e7610379366004610ee4565b34801561048657600080fd5b506102e7610495366004610f2e565b610796565b6103ea6104a8366004610c70565b6107c4565b3480156104b957600080fd5b506102e76104c8366004610f63565b6107f7565b3480156104d957600080fd5b506102e76104e8366004610fe1565b61092f565b3480156104f957600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b61032461052f366004610de9565b61095e565b34801561054057600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b610324610576366004610de9565b610994565b34801561058757600080fd5b506102e7610596366004611019565b6109c0565b3480156105a757600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105db57600080fd5b506102e76105ea366004611078565b6109f1565b3480156105fb57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561062f57600080fd5b506103ea610a1a565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050565b6000806106917f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50935093915050565b6106c37f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050505050565b6106f57f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5050505050565b60006107277f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50949350505050565b600061075b7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50919050565b600061078c7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5095945050505050565b6107bf7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050565b60006107ef7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661082c610a1a565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108d59190611091565b600060405180830381855af49150503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b50915091508161092757805160208201fd5b805160208201f35b6109587f0000000000000000000000000000000000000000000000000000000000000000610aa8565b50505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b5094509492505050565b60008061098a7f0000000000000000000000000000000000000000000000000000000000000000610aa8565b6109e97f0000000000000000000000000000000000000000000000000000000000000000610aa8565b505050505050565b6106617f0000000000000000000000000000000000000000000000000000000000000000610aa8565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108d59291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b035780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b3c578181015183820152602001610b24565b50506000910152565b600060208284031215610b5757600080fd5b815167ffffffffffffffff80821115610b6f57600080fd5b818401915084601f830112610b8357600080fd5b815181811115610b9557610b95610b0b565b604051601f8201601f19908116603f01168101908382118183101715610bbd57610bbd610b0b565b81604052828152876020848701011115610bd657600080fd5b610be7836020830160208801610b21565b979650505050505050565b6001600160a01b0381168114610c0757600080fd5b50565b600060208284031215610c1c57600080fd5b8135610c2781610bf2565b9392505050565b80358015158114610c3e57600080fd5b919050565b600060208284031215610c5557600080fd5b610c2782610c2e565b60006060828403121561075b57600080fd5b600080600060608486031215610c8557600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610caa57600080fd5b610cb686828701610c5e565b9150509250925092565b60008083601f840112610cd257600080fd5b50813567ffffffffffffffff811115610cea57600080fd5b6020830191508360208260051b8501011115610d0557600080fd5b9250929050565b60008060008060008060808789031215610d2557600080fd5b8635610d3081610bf2565b95506020870135610d4081610bf2565b9450604087013567ffffffffffffffff80821115610d5d57600080fd5b610d698a838b01610cc0565b90965094506060890135915080821115610d8257600080fd5b50610d8f89828a01610cc0565b979a9699509497509295939492505050565b60008060008060808587031215610db757600080fd5b843593506020850135610dc981610bf2565b92506040850135610dd981610bf2565b9396929550929360600135925050565b60008060008060808587031215610dff57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e2b57600080fd5b610e3787828801610c5e565b91505092959194509250565b600060208284031215610e5557600080fd5b813567ffffffffffffffff811115610e6c57600080fd5b610e7884828501610c5e565b949350505050565b600080600080600060a08688031215610e9857600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610ecb57600080fd5b610ed788828901610c5e565b9150509295509295909350565b60008060008060808587031215610efa57600080fd5b843593506020850135610f0c81610bf2565b9250604085013591506060850135610f2381610bf2565b939692955090935050565b60008060408385031215610f4157600080fd5b8235610f4c81610bf2565b9150610f5a60208401610c2e565b90509250929050565b600080600080600080600060e0888a031215610f7e57600080fd5b8735610f8981610bf2565b96506020880135610f9981610bf2565b9550610fa760408901610c2e565b945060608801359350608088013560ff81168114610fc457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610ff657600080fd5b83359250602084013561100881610bf2565b929592945050506040919091013590565b600080600080600060a0868803121561103157600080fd5b85359450602086013561104381610bf2565b9350604086013561105381610bf2565b925060608601359150608086013561106a81610bf2565b809150509295509295909350565b60006020828403121561108a57600080fd5b5035919050565b600082516110a3818460208701610b21565b919091019291505056fea2646970667358221220051d898014a6002154bbcb817714a256a2f196c67f5ac8ae4bf8bd71d6b9541264736f6c63430008140033a2646970667358221220682a23942646398f834ae9fb8e4a1a0864576fddb5cc4b652d60b0a09384b97764736f6c63430008140033";
        readonly sourceMap: "696:1446:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:661;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4135:32:182;;;4117:51;;4105:2;4090:18;1479:661:8;;;;;;;801:27;;;;;1479:661;2001:29;;;2012:10;2001:29;;;4575:51:182;4642:18;;;4635:34;;;1757:7:8;;4548:18:182;;2001:29:8;;;;;;;;;;;;1991:40;;;;;;2050:7;2059;2068;2077;2086;2095;2104:4;1944:165;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:357;;1479:661;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:127:182:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;292:18;277:34;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:181::-;477:20;;-1:-1:-1;;;;;526:31:182;;516:42;;506:70;;572:1;569;562:12;506:70;401:181;;;:::o;587:601::-;638:5;686:4;674:9;669:3;665:19;661:30;658:50;;;704:1;701;694:12;658:50;737:2;731:9;779:4;771:6;767:17;850:6;838:10;835:22;814:18;802:10;799:34;796:62;793:88;;;861:18;;:::i;:::-;901:10;897:2;890:22;;930:6;921:15;;973:9;960:23;952:6;945:39;1045:2;1034:9;1030:18;1017:32;1012:2;1004:6;1000:15;993:57;1111:2;1100:9;1096:18;1083:32;1078:2;1070:6;1066:15;1059:57;1177:2;1166:9;1162:18;1149:32;1144:2;1136:6;1132:15;1125:57;;587:601;;;;:::o;1193:718::-;1235:5;1288:3;1281:4;1273:6;1269:17;1265:27;1255:55;;1306:1;1303;1296:12;1255:55;1342:6;1329:20;1368:18;1405:2;1401;1398:10;1395:36;;;1411:18;;:::i;:::-;1486:2;1480:9;1454:2;1540:13;;-1:-1:-1;;1536:22:182;;;1560:2;1532:31;1528:40;1516:53;;;1584:18;;;1604:22;;;1581:46;1578:72;;;1630:18;;:::i;:::-;1670:10;1666:2;1659:22;1705:2;1697:6;1690:18;1751:3;1744:4;1739:2;1731:6;1727:15;1723:26;1720:35;1717:55;;;1768:1;1765;1758:12;1717:55;1832:2;1825:4;1817:6;1813:17;1806:4;1798:6;1794:17;1781:54;1879:1;1872:4;1867:2;1859:6;1855:15;1851:26;1844:37;1899:6;1890:15;;;;;;1193:718;;;;:::o;1916:1941::-;2075:6;2083;2091;2099;2107;2115;2123;2131;2175:9;2166:7;2162:23;2205:3;2201:2;2197:12;2194:32;;;2222:1;2219;2212:12;2194:32;2245:6;2271:2;2267;2263:11;2260:31;;;2287:1;2284;2277:12;2260:31;2313:17;;:::i;:::-;2300:30;;2353:37;2380:9;2353:37;:::i;:::-;2346:5;2339:52;2423:46;2465:2;2454:9;2450:18;2423:46;:::i;:::-;2418:2;2411:5;2407:14;2400:70;2530:2;2519:9;2515:18;2502:32;2497:2;2490:5;2486:14;2479:56;2595:2;2584:9;2580:18;2567:32;2562:2;2555:5;2551:14;2544:56;2661:3;2650:9;2646:19;2633:33;2627:3;2620:5;2616:15;2609:58;2728:3;2717:9;2713:19;2700:33;2694:3;2687:5;2683:15;2676:58;2795:3;2784:9;2780:19;2767:33;2761:3;2754:5;2750:15;2743:58;2862:3;2851:9;2847:19;2834:33;2828:3;2821:5;2817:15;2810:58;2887:3;2950:2;2939:9;2935:18;2922:32;2917:2;2910:5;2906:14;2899:56;;2974:3;3009:46;3051:2;3040:9;3036:18;3009:46;:::i;:::-;2993:14;;;2986:70;3075:3;3110:46;3137:18;;;3110:46;:::i;:::-;3094:14;;;3087:70;3176:3;3211:51;3254:7;3234:18;;;3211:51;:::i;:::-;3195:14;;;3188:75;3199:5;;-1:-1:-1;3323:18:182;;3310:32;3365:18;3354:30;;3351:50;;;3397:1;3394;3387:12;3351:50;3420:49;3461:7;3452:6;3441:9;3437:22;3420:49;:::i;:::-;3410:59;;;3488:47;3530:3;3519:9;3515:19;3488:47;:::i;:::-;3478:57;;3554:47;3596:3;3585:9;3581:19;3554:47;:::i;:::-;3544:57;;3620:47;3662:3;3651:9;3647:19;3620:47;:::i;:::-;3610:57;;3686:47;3728:3;3717:9;3713:19;3686:47;:::i;:::-;3676:57;;3752:47;3794:3;3783:9;3779:19;3752:47;:::i;:::-;3742:57;;3846:3;3835:9;3831:19;3818:33;3808:43;;1916:1941;;;;;;;;;;;:::o;4942:1776::-;5346:13;;-1:-1:-1;;;;;3928:31:182;3916:44;;5314:3;5299:19;;5418:4;5410:6;5406:17;5400:24;5433:54;5481:4;5470:9;5466:20;5452:12;-1:-1:-1;;;;;3928:31:182;3916:44;;3862:104;5433:54;;5543:4;5535:6;5531:17;5525:24;5518:4;5507:9;5503:20;5496:54;5606:4;5598:6;5594:17;5588:24;5581:4;5570:9;5566:20;5559:54;5669:4;5661:6;5657:17;5651:24;5644:4;5633:9;5629:20;5622:54;5732:4;5724:6;5720:17;5714:24;5707:4;5696:9;5692:20;5685:54;5795:4;5787:6;5783:17;5777:24;5770:4;5759:9;5755:20;5748:54;5858:4;5850:6;5846:17;5840:24;5833:4;5822:9;5818:20;5811:54;5884:6;5944:2;5936:6;5932:15;5926:22;5921:2;5910:9;5906:18;5899:50;;5968:6;6023:2;6015:6;6011:15;6005:22;6036:54;6086:2;6075:9;6071:18;6055:14;-1:-1:-1;;;;;3928:31:182;3916:44;;3862:104;6036:54;-1:-1:-1;;6109:6:182;6152:15;;;6146:22;-1:-1:-1;;;;;3928:31:182;;6212:18;;;3916:44;-1:-1:-1;;6250:6:182;6293:15;;;6287:22;4750:12;;6357:18;;;4738:25;4812:4;4801:16;;4795:23;4779:14;;;4772:47;4868:4;4857:16;;4851:23;4835:14;;;4828:47;4924:4;4913:16;;4907:23;4891:14;;;4884:47;-1:-1:-1;;;;;;;3928:31:182;;6427:3;6412:19;;3916:44;-1:-1:-1;;;;;3928:31:182;;6483:3;6468:19;;3916:44;-1:-1:-1;;;;;3928:31:182;;6539:3;6524:19;;3916:44;-1:-1:-1;;;;;3928:31:182;;6595:3;6580:19;;3916:44;-1:-1:-1;;;;;3928:31:182;;6651:3;6636:19;;3916:44;-1:-1:-1;;;;;3928:31:182;;6707:3;6692:19;;3916:44;6665:47;3862:104";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "1428": readonly [{
                readonly start: 111;
                readonly length: 32;
            }, {
                readonly start: 197;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": "0c65a1cb";
        readonly "lido()": "23509a2d";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILido\",\"name\":\"_lido\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lido\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_lido\":\"The Lido contract.\"}},\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_salt\":\"The create2 salt used in the deployment.\",\"target0\":\"The target0 address.\",\"target1\":\"The target1 address.\",\"target2\":\"The target2 address.\",\"target3\":\"The target3 address.\",\"target4\":\"The target4 address.\"},\"returns\":{\"_0\":\"The address of the newly deployed StETHHyperdrive instance.\"}}},\"title\":\"StETHHyperdriveCoreDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the core deployer.\"},\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"lido()\":{\"notice\":\"The Lido contract.\"}},\"notice\":\"The core deployer for the StETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol\":\"StETHHyperdriveCoreDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x5f962e10116e41dcc44c3c517f1e8d6e56496a54c598829cb95baaba2975445b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3a9d391e00db1fd7b0e0f5497ba790308d2db1e73177ca9d9a9ba723fbc80cb8\",\"dweb:/ipfs/QmPe2eFdcuqHccFamQWwUryeRGBQF8NetTHqNkrmx9xCdY\"]},\"contracts/src/external/Hyperdrive.sol\":{\"keccak256\":\"0x1f3a60886fc6733bfb62ab8424aa8c37654278b7cc445d490f8af55a5001ab9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d1ce4a76f0078526f191f4f341ecf353c6322be0aaf68493d4a473e55ed1ed13\",\"dweb:/ipfs/QmfKhUhGH7P6CiUF58T8Yw17CfoHoUu5KNp2DPvbsyiRZJ\"]},\"contracts/src/external/HyperdriveTarget0.sol\":{\"keccak256\":\"0xea27bb5ed4b35c9f1a4d42102108f07289520ab27e8e33fcac6809f8123955d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://488203c6bcf5d3cbb092800a9457e77cde06a80f406794cea42ed86b839a824b\",\"dweb:/ipfs/QmRGZNWhrAhubpWvkQtCryUMWG4XKscSEYJ9uxePHzozDy\"]},\"contracts/src/instances/steth/StETHBase.sol\":{\"keccak256\":\"0x639d9194f93421b99bc2b1d3b96425d845e0b2cb4d5dfb37ea358cefc8beb35c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1d405c802fdfedbccdbdd0707f2109659b8f02cc3808ee3f8ebac4d475c7c87\",\"dweb:/ipfs/Qmatdps9svvTBhZfKtxCoz2FEs7LZLh6hkd1h7VgenuJkn\"]},\"contracts/src/instances/steth/StETHHyperdrive.sol\":{\"keccak256\":\"0x4b80ea28f2bf301ad531a7a424d99e4cca989053d153894e29151b65182f27af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://efebe3d97a5c6a78156bf5d8cb0159a0d74496a28d46d00c3d07b9f0aa822a2d\",\"dweb:/ipfs/QmQyBTQEtCuk2WdRzaZdxz4h7pk59vftAzbX1vMzf5SXrt\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213\",\"dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb\",\"dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8\",\"dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/ILido.sol\":{\"keccak256\":\"0x5942f8acaa122bd9f40cc0c6c4a5d489de3537efef6f7e744a89dae8a616ecc9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://629e5370ec6464f25f476b20635d67b06919f37aac7b8decba0756ab3ccbc8e3\",\"dweb:/ipfs/QmdZi8CygBNpvd1oX2GMReYRffbYirNJqnnEGxTkHoWqrw\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/interfaces/IStETHHyperdriveCore.sol\":{\"keccak256\":\"0x8abf9d221a8a171e715dab48fd5af1325c466e8fad5ba714b4825a8a10cab043\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fdbe3b808c700d7f7476848c43da095c75bcecdff3b8af5b99f8958f1784c9ff\",\"dweb:/ipfs/QmRKWJ5k33UpdYXCyAhXkHUXrttEn9tVrfVKy5Dnbx83CB\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x8807f9479246301d783b015d6b7f2d7f7e03ab3685302848c57436ebb36a1ce5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28a4f5d567a5c086ac2ae7e346c207422844865aa5e416909c522556245f8fc9\",\"dweb:/ipfs/QmUXZ2aeMFh86LCxyB4xQTuU4fR5xTcN9VwVtKzZNkv1dX\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0xfc6947a6bfff9ca937fc2654ee56203dbc2ffc3c8bffe40c1334ebc9c81804bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29d5b70c6cb40ede4e496cbeee4937c5318b43536a450d7c246166d326c85fa\",\"dweb:/ipfs/QmcDD9Bs4Gueepjs92CYJC9UFBMFYSN1QfbfqBJMQECkWj\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7\",\"dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x800d540f89ed4f6f40376e0e586246ab48b79a78f1fb4b7ff979b350fafb8a12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4aa17285692fa2872fe544d4f4b8fa2b29d68be5380806c804465788e2bdb1ba\",\"dweb:/ipfs/Qmag8aW8ADj9grs9vSL33mpM2F3kbFjh6ePKGGv7pXAGdV\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0x20aad0da5f27cbdded488149694f0c126bfada17ebea0a690f5386a19b826ed0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de8345bda127a4c5c101fb2668ede0011dbd82ff1ca3dcabd37905d56485efba\",\"dweb:/ipfs/QmYc3Jkm8c5FB1oEZwgWTNGEa8q96WWEJNyjumD8nirBdk\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d\",\"dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0xa6a716eac09df69f29b4fd76314104895b18c350679132de2db805e673d3650c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d1e6f1092fa727453030eca383b77182755c972b83b74e6d3cf5937cc50caca\",\"dweb:/ipfs/QmNk5UeZ9ZzNLuivQQjkihaVrQ6y1pnFUn1PdWvpfDJnSU\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d\",\"dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xe86d38d659ce3191d0423a4ee9b6592218a0e59dd72f3e0ec60cfa83809b266e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91d15d179f83429f36db12d5eac3f575727e16f1505d4cb1b95a11d0876c7534\",\"dweb:/ipfs/QmQDHYp8pgd9maivqkaH2mZ8qtb5ZEmK34n4oDmvAo8nrh\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x8fde664589dfd8a26b6d39aed585388f7c179bf508ffe7688dc6c796a68dc785\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3406b91898282977f3630976461eb344764c0f321d35588b1e31408b64f64263\",\"dweb:/ipfs/QmVGGknjaaG9wnyPHUWAMpDJZ4tANu6hmEQcUU1HnUQ5U5\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "_lido";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.PoolConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialVaultSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "address";
                    readonly name: "target0";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target1";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target2";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target3";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target4";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "lido";
                readonly outputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _lido: "The Lido contract.";
                        };
                    };
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _salt: "The create2 salt used in the deployment.";
                            readonly target0: "The target0 address.";
                            readonly target1: "The target1 address.";
                            readonly target2: "The target2 address.";
                            readonly target3: "The target3 address.";
                            readonly target4: "The target4 address.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed StETHHyperdrive instance.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the core deployer.";
                    };
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "lido()": {
                        readonly notice: "The Lido contract.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol": "StETHHyperdriveCoreDeployer";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x5f962e10116e41dcc44c3c517f1e8d6e56496a54c598829cb95baaba2975445b";
                readonly urls: readonly ["bzz-raw://3a9d391e00db1fd7b0e0f5497ba790308d2db1e73177ca9d9a9ba723fbc80cb8", "dweb:/ipfs/QmPe2eFdcuqHccFamQWwUryeRGBQF8NetTHqNkrmx9xCdY"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/Hyperdrive.sol": {
                readonly keccak256: "0x1f3a60886fc6733bfb62ab8424aa8c37654278b7cc445d490f8af55a5001ab9b";
                readonly urls: readonly ["bzz-raw://d1ce4a76f0078526f191f4f341ecf353c6322be0aaf68493d4a473e55ed1ed13", "dweb:/ipfs/QmfKhUhGH7P6CiUF58T8Yw17CfoHoUu5KNp2DPvbsyiRZJ"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/HyperdriveTarget0.sol": {
                readonly keccak256: "0xea27bb5ed4b35c9f1a4d42102108f07289520ab27e8e33fcac6809f8123955d8";
                readonly urls: readonly ["bzz-raw://488203c6bcf5d3cbb092800a9457e77cde06a80f406794cea42ed86b839a824b", "dweb:/ipfs/QmRGZNWhrAhubpWvkQtCryUMWG4XKscSEYJ9uxePHzozDy"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/steth/StETHBase.sol": {
                readonly keccak256: "0x639d9194f93421b99bc2b1d3b96425d845e0b2cb4d5dfb37ea358cefc8beb35c";
                readonly urls: readonly ["bzz-raw://b1d405c802fdfedbccdbdd0707f2109659b8f02cc3808ee3f8ebac4d475c7c87", "dweb:/ipfs/Qmatdps9svvTBhZfKtxCoz2FEs7LZLh6hkd1h7VgenuJkn"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/steth/StETHHyperdrive.sol": {
                readonly keccak256: "0x4b80ea28f2bf301ad531a7a424d99e4cca989053d153894e29151b65182f27af";
                readonly urls: readonly ["bzz-raw://efebe3d97a5c6a78156bf5d8cb0159a0d74496a28d46d00c3d07b9f0aa822a2d", "dweb:/ipfs/QmQyBTQEtCuk2WdRzaZdxz4h7pk59vftAzbX1vMzf5SXrt"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x7cc4f7a8878cf02f9896f930882ccb6839b20f63c85efc4a66e88af46c57c317";
                readonly urls: readonly ["bzz-raw://de756bba0e3622e5ddaff774a989fa20b4be7c49806dd972efc11f2cef523213", "dweb:/ipfs/QmPWwZo7TsF8ccFYbGVXhZMo85FYjKmyTnEYGV3V936YG2"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0xd15fb3cb39e359f334b7f836f23026d162de7b5be66d9aab3ac11dede9357a76";
                readonly urls: readonly ["bzz-raw://b8b6fdcb4a2a45a3dbb8a70e9451fdd6aa5e23ee75d8960e42a149e9138a32eb", "dweb:/ipfs/QmNQiGzu6qhssorP8UMtaRbxygqzajPg3rB4phnbfQuMzF"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x1233242868a6eaeb6e6764df97cd094bfda03978bbedb04592db8ddc3ac6db56";
                readonly urls: readonly ["bzz-raw://5cc50aa0bdaff888c940b004ad3a7a0c2aac4c15104419bd216ca48270c3fcb8", "dweb:/ipfs/QmQS6jncTRsBmZxDgR6dAofzXgTt1bXSRb8WdBNqKTCKiR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ILido.sol": {
                readonly keccak256: "0x5942f8acaa122bd9f40cc0c6c4a5d489de3537efef6f7e744a89dae8a616ecc9";
                readonly urls: readonly ["bzz-raw://629e5370ec6464f25f476b20635d67b06919f37aac7b8decba0756ab3ccbc8e3", "dweb:/ipfs/QmdZi8CygBNpvd1oX2GMReYRffbYirNJqnnEGxTkHoWqrw"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IStETHHyperdriveCore.sol": {
                readonly keccak256: "0x8abf9d221a8a171e715dab48fd5af1325c466e8fad5ba714b4825a8a10cab043";
                readonly urls: readonly ["bzz-raw://fdbe3b808c700d7f7476848c43da095c75bcecdff3b8af5b99f8958f1784c9ff", "dweb:/ipfs/QmRKWJ5k33UpdYXCyAhXkHUXrttEn9tVrfVKy5Dnbx83CB"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveAdmin.sol": {
                readonly keccak256: "0x8807f9479246301d783b015d6b7f2d7f7e03ab3685302848c57436ebb36a1ce5";
                readonly urls: readonly ["bzz-raw://28a4f5d567a5c086ac2ae7e346c207422844865aa5e416909c522556245f8fc9", "dweb:/ipfs/QmUXZ2aeMFh86LCxyB4xQTuU4fR5xTcN9VwVtKzZNkv1dX"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveBase.sol": {
                readonly keccak256: "0xfc6947a6bfff9ca937fc2654ee56203dbc2ffc3c8bffe40c1334ebc9c81804bc";
                readonly urls: readonly ["bzz-raw://b29d5b70c6cb40ede4e496cbeee4937c5318b43536a450d7c246166d326c85fa", "dweb:/ipfs/QmcDD9Bs4Gueepjs92CYJC9UFBMFYSN1QfbfqBJMQECkWj"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveCheckpoint.sol": {
                readonly keccak256: "0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649";
                readonly urls: readonly ["bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7", "dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLP.sol": {
                readonly keccak256: "0x800d540f89ed4f6f40376e0e586246ab48b79a78f1fb4b7ff979b350fafb8a12";
                readonly urls: readonly ["bzz-raw://4aa17285692fa2872fe544d4f4b8fa2b29d68be5380806c804465788e2bdb1ba", "dweb:/ipfs/Qmag8aW8ADj9grs9vSL33mpM2F3kbFjh6ePKGGv7pXAGdV"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLong.sol": {
                readonly keccak256: "0x20aad0da5f27cbdded488149694f0c126bfada17ebea0a690f5386a19b826ed0";
                readonly urls: readonly ["bzz-raw://de8345bda127a4c5c101fb2668ede0011dbd82ff1ca3dcabd37905d56485efba", "dweb:/ipfs/QmYc3Jkm8c5FB1oEZwgWTNGEa8q96WWEJNyjumD8nirBdk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveMultiToken.sol": {
                readonly keccak256: "0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373";
                readonly urls: readonly ["bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d", "dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveShort.sol": {
                readonly keccak256: "0xa6a716eac09df69f29b4fd76314104895b18c350679132de2db805e673d3650c";
                readonly urls: readonly ["bzz-raw://5d1e6f1092fa727453030eca383b77182755c972b83b74e6d3cf5937cc50caca", "dweb:/ipfs/QmNk5UeZ9ZzNLuivQQjkihaVrQ6y1pnFUn1PdWvpfDJnSU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveStorage.sol": {
                readonly keccak256: "0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f";
                readonly urls: readonly ["bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d", "dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/AssetId.sol": {
                readonly keccak256: "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b";
                readonly urls: readonly ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Constants.sol": {
                readonly keccak256: "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d";
                readonly urls: readonly ["bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418", "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Errors.sol": {
                readonly keccak256: "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0";
                readonly urls: readonly ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/HyperdriveMath.sol": {
                readonly keccak256: "0xe86d38d659ce3191d0423a4ee9b6592218a0e59dd72f3e0ec60cfa83809b266e";
                readonly urls: readonly ["bzz-raw://91d15d179f83429f36db12d5eac3f575727e16f1505d4cb1b95a11d0876c7534", "dweb:/ipfs/QmQDHYp8pgd9maivqkaH2mZ8qtb5ZEmK34n4oDmvAo8nrh"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/LPMath.sol": {
                readonly keccak256: "0x8fde664589dfd8a26b6d39aed585388f7c179bf508ffe7688dc6c796a68dc785";
                readonly urls: readonly ["bzz-raw://3406b91898282977f3630976461eb344764c0f321d35588b1e31408b64f64263", "dweb:/ipfs/QmVGGknjaaG9wnyPHUWAMpDJZ4tANu6hmEQcUU1HnUQ5U5"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/YieldSpaceMath.sol": {
                readonly keccak256: "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891";
                readonly urls: readonly ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                readonly keccak256: "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236";
                readonly urls: readonly ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol";
        readonly id: 1491;
        readonly exportedSymbols: {
            readonly IHyperdrive: readonly [7616];
            readonly IHyperdriveCoreDeployer: readonly [7812];
            readonly ILido: readonly [8479];
            readonly StETHHyperdrive: readonly [6529];
            readonly StETHHyperdriveCoreDeployer: readonly [1490];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:2104:8";
        readonly nodes: readonly [{
            readonly id: 1413;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:8";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 1415;
            readonly nodeType: "ImportDirective";
            readonly src: "64:63:8";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1491;
            readonly sourceUnit: 7617;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1414;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7616;
                    readonly src: "73:11:8";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1417;
            readonly nodeType: "ImportDirective";
            readonly src: "128:87:8";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol";
            readonly file: "../../interfaces/IHyperdriveCoreDeployer.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1491;
            readonly sourceUnit: 7813;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1416;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7812;
                    readonly src: "137:23:8";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1419;
            readonly nodeType: "ImportDirective";
            readonly src: "216:51:8";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/ILido.sol";
            readonly file: "../../interfaces/ILido.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1491;
            readonly sourceUnit: 8480;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1418;
                    readonly name: "ILido";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 8479;
                    readonly src: "225:5:8";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1421;
            readonly nodeType: "ImportDirective";
            readonly src: "268:76:8";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/instances/steth/StETHHyperdrive.sol";
            readonly file: "../../instances/steth/StETHHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1491;
            readonly sourceUnit: 6530;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1420;
                    readonly name: "StETHHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 6529;
                    readonly src: "277:15:8";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1490;
            readonly nodeType: "ContractDefinition";
            readonly src: "696:1446:8";
            readonly nodes: readonly [{
                readonly id: 1428;
                readonly nodeType: "VariableDeclaration";
                readonly src: "801:27:8";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 1425;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "766:30:8";
                    readonly text: "@notice The Lido contract.";
                };
                readonly functionSelector: "23509a2d";
                readonly mutability: "immutable";
                readonly name: "lido";
                readonly nameLocation: "824:4:8";
                readonly scope: 1490;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ILido_$8479";
                    readonly typeString: "contract ILido";
                };
                readonly typeName: {
                    readonly id: 1427;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 1426;
                        readonly name: "ILido";
                        readonly nameLocations: readonly ["801:5:8"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 8479;
                        readonly src: "801:5:8";
                    };
                    readonly referencedDeclaration: 8479;
                    readonly src: "801:5:8";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ILido_$8479";
                        readonly typeString: "contract ILido";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 1440;
                readonly nodeType: "FunctionDefinition";
                readonly src: "923:54:8";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1439;
                    readonly nodeType: "Block";
                    readonly src: "948:29:8";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 1437;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 1435;
                                readonly name: "lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1428;
                                readonly src: "958:4:8";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$8479";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 1436;
                                readonly name: "_lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1432;
                                readonly src: "965:5:8";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$8479";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly src: "958:12:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$8479";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly id: 1438;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "958:12:8";
                    }];
                };
                readonly documentation: {
                    readonly id: 1429;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "835:83:8";
                    readonly text: "@notice Instantiates the core deployer.\n @param _lido The Lido contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 1433;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1432;
                        readonly mutability: "mutable";
                        readonly name: "_lido";
                        readonly nameLocation: "941:5:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1440;
                        readonly src: "935:11:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_ILido_$8479";
                            readonly typeString: "contract ILido";
                        };
                        readonly typeName: {
                            readonly id: 1431;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1430;
                                readonly name: "ILido";
                                readonly nameLocations: readonly ["935:5:8"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 8479;
                                readonly src: "935:5:8";
                            };
                            readonly referencedDeclaration: 8479;
                            readonly src: "935:5:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$8479";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "934:13:8";
                };
                readonly returnParameters: {
                    readonly id: 1434;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "948:0:8";
                };
                readonly scope: 1490;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 1489;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1479:661:8";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1488;
                    readonly nodeType: "Block";
                    readonly src: "1766:374:8";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly components: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 1477;
                                        readonly name: "_config";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1444;
                                        readonly src: "2050:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        };
                                    }, {
                                        readonly id: 1478;
                                        readonly name: "target0";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1448;
                                        readonly src: "2059:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 1479;
                                        readonly name: "target1";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1450;
                                        readonly src: "2068:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 1480;
                                        readonly name: "target2";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1452;
                                        readonly src: "2077:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 1481;
                                        readonly name: "target3";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1454;
                                        readonly src: "2086:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 1482;
                                        readonly name: "target4";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1456;
                                        readonly src: "2095:7:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 1483;
                                        readonly name: "lido";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 1428;
                                        readonly src: "2104:4:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_ILido_$8479";
                                            readonly typeString: "contract ILido";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_contract$_ILido_$8479";
                                            readonly typeString: "contract ILido";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_contract$_ILido_$8479";
                                                readonly typeString: "contract ILido";
                                            }];
                                            readonly id: 1467;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "NewExpression";
                                            readonly src: "1944:19:8";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$7407_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_ILido_$8479_$returns$_t_contract$_StETHHyperdrive_$6529_$";
                                                readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract ILido) returns (contract StETHHyperdrive)";
                                            };
                                            readonly typeName: {
                                                readonly id: 1466;
                                                readonly nodeType: "UserDefinedTypeName";
                                                readonly pathNode: {
                                                    readonly id: 1465;
                                                    readonly name: "StETHHyperdrive";
                                                    readonly nameLocations: readonly ["1948:15:8"];
                                                    readonly nodeType: "IdentifierPath";
                                                    readonly referencedDeclaration: 6529;
                                                    readonly src: "1948:15:8";
                                                };
                                                readonly referencedDeclaration: 6529;
                                                readonly src: "1948:15:8";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_contract$_StETHHyperdrive_$6529";
                                                    readonly typeString: "contract StETHHyperdrive";
                                                };
                                            };
                                        };
                                        readonly id: 1476;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["salt"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 1471;
                                                        readonly name: "msg";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -15;
                                                        readonly src: "2012:3:8";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_message";
                                                            readonly typeString: "msg";
                                                        };
                                                    };
                                                    readonly id: 1472;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2016:6:8";
                                                    readonly memberName: "sender";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "2012:10:8";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                }, {
                                                    readonly id: 1473;
                                                    readonly name: "_salt";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 1458;
                                                    readonly src: "2024:5:8";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    }, {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 1469;
                                                        readonly name: "abi";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -1;
                                                        readonly src: "2001:3:8";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_abi";
                                                            readonly typeString: "abi";
                                                        };
                                                    };
                                                    readonly id: 1470;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2005:6:8";
                                                    readonly memberName: "encode";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "2001:10:8";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                        readonly typeString: "function () pure returns (bytes memory)";
                                                    };
                                                };
                                                readonly id: 1474;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "2001:29:8";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                }];
                                                readonly id: 1468;
                                                readonly name: "keccak256";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -8;
                                                readonly src: "1991:9:8";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                                    readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                                };
                                            };
                                            readonly id: 1475;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "1991:40:8";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly src: "1944:105:8";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$7407_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_ILido_$8479_$returns$_t_contract$_StETHHyperdrive_$6529_$salt";
                                            readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract ILido) returns (contract StETHHyperdrive)";
                                        };
                                    };
                                    readonly id: 1484;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1944:165:8";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_StETHHyperdrive_$6529";
                                        readonly typeString: "contract StETHHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_StETHHyperdrive_$6529";
                                        readonly typeString: "contract StETHHyperdrive";
                                    }];
                                    readonly id: 1464;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "1797:7:8";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 1463;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "1797:7:8";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 1485;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1797:326:8";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly id: 1486;
                            readonly isConstant: false;
                            readonly isInlineArray: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "TupleExpression";
                            readonly src: "1783:350:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 1462;
                        readonly id: 1487;
                        readonly nodeType: "Return";
                        readonly src: "1776:357:8";
                    }];
                };
                readonly baseFunctions: readonly [7811];
                readonly documentation: {
                    readonly id: 1441;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "983:491:8";
                    readonly text: "@notice Deploys a Hyperdrive instance with the given parameters.\n @param _config The configuration of the Hyperdrive pool.\n @param target0 The target0 address.\n @param target1 The target1 address.\n @param target2 The target2 address.\n @param target3 The target3 address.\n @param target4 The target4 address.\n @param _salt The create2 salt used in the deployment.\n @return The address of the newly deployed StETHHyperdrive instance.";
                };
                readonly functionSelector: "0c65a1cb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deploy";
                readonly nameLocation: "1488:6:8";
                readonly parameters: {
                    readonly id: 1459;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1444;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "1534:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1504:37:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolConfig_$7407_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolConfig";
                        };
                        readonly typeName: {
                            readonly id: 1443;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1442;
                                readonly name: "IHyperdrive.PoolConfig";
                                readonly nameLocations: readonly ["1504:11:8", "1516:10:8"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7407;
                                readonly src: "1504:22:8";
                            };
                            readonly referencedDeclaration: 7407;
                            readonly src: "1504:22:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolConfig_$7407_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1446;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1551:12:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 1445;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1551:5:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1448;
                        readonly mutability: "mutable";
                        readonly name: "target0";
                        readonly nameLocation: "1602:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1594:15:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1447;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1594:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1450;
                        readonly mutability: "mutable";
                        readonly name: "target1";
                        readonly nameLocation: "1627:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1619:15:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1449;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1619:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1452;
                        readonly mutability: "mutable";
                        readonly name: "target2";
                        readonly nameLocation: "1652:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1644:15:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1451;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1644:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1454;
                        readonly mutability: "mutable";
                        readonly name: "target3";
                        readonly nameLocation: "1677:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1669:15:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1453;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1669:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1456;
                        readonly mutability: "mutable";
                        readonly name: "target4";
                        readonly nameLocation: "1702:7:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1694:15:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1455;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1694:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1458;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "1727:5:8";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1719:13:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 1457;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1719:7:8";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1494:244:8";
                };
                readonly returnParameters: {
                    readonly id: 1462;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1461;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1489;
                        readonly src: "1757:7:8";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1460;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1757:7:8";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1756:9:8";
                };
                readonly scope: 1490;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 1423;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nameLocations: readonly ["736:23:8"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 7812;
                    readonly src: "736:23:8";
                };
                readonly id: 1424;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "736:23:8";
            }];
            readonly canonicalName: "StETHHyperdriveCoreDeployer";
            readonly contractDependencies: readonly [6529];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 1422;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "346:350:8";
                readonly text: "@author DELV\n @title StETHHyperdriveCoreDeployer\n @notice The core deployer for the StETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [1490, 7812];
            readonly name: "StETHHyperdriveCoreDeployer";
            readonly nameLocation: "705:27:8";
            readonly scope: 1491;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 8;
};
//# sourceMappingURL=StETHHyperdriveCoreDeployer.d.ts.map