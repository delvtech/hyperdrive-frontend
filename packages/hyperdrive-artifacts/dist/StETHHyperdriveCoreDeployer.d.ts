export declare const StETHHyperdriveCoreDeployer: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "_lido";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialVaultSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "target0";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target1";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target2";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target3";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "target4";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lido";
        readonly outputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x60a060405234801561001057600080fd5b50604051611ba5380380611ba583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611b15610090600039600081816040015260c00152611b156000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323509a2d1461003b5780636fa623e91461007e575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006261008c366004610287565b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208988888888887f00000000000000000000000000000000000000000000000000000000000000006040516100eb9061012b565b6100fb97969594939291906103f6565b8190604051809103906000f590508015801561011b573d6000803e3d6000fd5b5090505b98975050505050505050565b6115c78061051983390190565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561017257610172610138565b60405290565b80356001600160a01b038116811461018f57600080fd5b919050565b6000608082840312156101a657600080fd5b6040516080810181811067ffffffffffffffff821117156101c9576101c9610138565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f83011261020b57600080fd5b813567ffffffffffffffff8082111561022657610226610138565b604051601f8301601f19908116603f0116810190828211818310171561024e5761024e610138565b8160405283815286602085880101111561026757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080888a036102e08112156102a557600080fd5b610200808212156102b557600080fd5b6102bd61014e565b91506102c88b610178565b82526102d660208c01610178565b602083015260408b0135604083015260608b0135606083015260808b0135608083015260a08b013560a083015260c08b013560c083015260e08b013560e0830152610100808c01358184015250610120610331818d01610178565b908301526101406103438c8201610178565b908301526101606103558c8201610178565b908301526101806103688d8d8301610194565b9083015290985089013567ffffffffffffffff81111561038757600080fd5b6103938b828c016101fa565b9750506103a36102208a01610178565b95506103b26102408a01610178565b94506103c16102608a01610178565b93506103d06102808a01610178565b92506103df6102a08a01610178565b91506102c089013590509295985092959890939650565b87516001600160a01b031681526102c08101602089015161042260208401826001600160a01b03169052565b5060408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a01518184015250610120808a0151610486828501826001600160a01b03169052565b5050610140898101516001600160a01b0390811691840191909152610160808b0151821690840152610180808b015180519185019190915260208101516101a085015260408101516101c0850152606001516101e084015288811661020084015287811661022084015286811661024084015285811661026084015284811661028084015283166102a083015261011f56fe6102e06040523480156200001257600080fd5b50604051620015c7380380620015c783398101604081905262000035916200023f565b600160005586516001600160a01b0390811660809081526060808a0151610180908152918a01516101a05260a0808b01516101c05260e0808c015190915260c0808c01519052610100808c0151909152918a0180515190925281516020908101516101209081528351604090810151610140908152945190930151610160908152918c015185166101e052918b015161020052908a0151600a80549185166001600160a01b0319928316179055918a0151600880549185169184169190911790558901516009805491841691909216179055808716610220528086166102405280851661026052808416610280528083166102a0528082166102c05287511673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146200016857604051630722152560e11b815260040160405180910390fd5b50505050505050620003a9565b6040516101a081016001600160401b0381118282101715620001a757634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001c557600080fd5b919050565b600060808284031215620001dd57600080fd5b604051608081016001600160401b03811182821017156200020e57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008060008060008789036102c08112156200025d57600080fd5b610200808212156200026e57600080fd5b6200027862000175565b9150620002858a620001ad565b82526200029560208b01620001ad565b602083015260408a0151604083015260608a0151606083015260808a0151608083015260a08a015160a083015260c08a015160c083015260e08a015160e0830152610100808b01518184015250610120620002f2818c01620001ad565b90830152610140620003068b8201620001ad565b908301526101606200031a8b8201620001ad565b908301526101806200032f8c8c8301620001ca565b818401525081985062000344818b01620001ad565b97505050620003576102208901620001ad565b9450620003686102408901620001ad565b9350620003796102608901620001ad565b92506200038a6102808901620001ad565b91506200039b6102a08901620001ad565b905092959891949750929550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516110f9620004ce6000396000505060008181610617015281816109b20152610a0c01526000818161055c015281816107e1015261097c01526000818161051501526107190152600081816105c301528181610683015261077e0152600081816101e4015281816103a601528181610653015281816106b5015281816106e70152818161074d015281816107b1015281816108120152818161094a01526109db0152600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110f96000f3fe6080604052600436106101cd5760003560e01c8063a22cb465116100f7578063dbbe807011610095578063eac3e79911610064578063eac3e799146105b1578063ed64bab2146105e5578063f3f7070714610605578063f698da2514610639576101cd565b8063dbbe80701461057e578063ded06231146103e0578063e44808bc14610591578063e4af29d1146102dd576101cd565b8063ab033ea9116100d1578063ab033ea9146102dd578063cba2e58d14610537578063cbc134341461031a578063d899e1121461054a576101cd565b8063a22cb46514610490578063a42dce80146102dd578063a6e8a85914610503576101cd565b806330adf81f1161016f5780637180c8ca1161013e5780637180c8ca1461049057806377d05ff4146104b05780639032c726146104c35780639cd241af146104e3576101cd565b806330adf81f1461040e5780633e691db9146104425780634c2ac1d9146104625780634ed2d6ac14610475576101cd565b806317fad7fc116101ab57806317fad7fc146103545780631c0f12b61461037457806321b57d531461039457806329b23fc1146103e0576101cd565b806301681a62146102dd57806302329a29146102ff578063074a6de91461031a575b3480156101d957600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560405161021c929190610ada565b600060405180830381855af49150503d8060008114610257576040519150601f19603f3d011682016040523d82523d6000602084013e61025c565b606091505b5091509150811561028057604051638bb0a34b60e01b815260040160405180910390fd5b600061028b82610aea565b90506001600160e01b03198116636e64089360e11b146102ad57815160208301fd5b8151600319810160048401908152926102ce91810160200190602401610b5b565b80519650602001945050505050f35b3480156102e957600080fd5b506102fd6102f8366004610c20565b61064e565b005b34801561030b57600080fd5b506102fd6102f8366004610c59565b34801561032657600080fd5b5061033a610335366004610c86565b61067b565b604080519283526020830191909152015b60405180910390f35b34801561036057600080fd5b506102fd61036f366004610d22565b6106b0565b34801561038057600080fd5b506102fd61038f366004610db7565b6106e2565b3480156103a057600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161034b565b3480156103ec57600080fd5b506104006103fb366004610dff565b610712565b60405190815260200161034b565b34801561041a57600080fd5b506104007f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561044e57600080fd5b5061040061045d366004610e59565b610746565b610400610470366004610e96565b610777565b34801561048157600080fd5b506102fd61038f366004610efa565b34801561049c57600080fd5b506102fd6104ab366004610f44565b6107ac565b6104006104be366004610c86565b6107da565b3480156104cf57600080fd5b506102fd6104de366004610f79565b61080d565b3480156104ef57600080fd5b506102fd6104fe366004610ff7565b610945565b34801561050f57600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b61033a610545366004610dff565b610974565b34801561055657600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b61033a61058c366004610dff565b6109aa565b34801561059d57600080fd5b506102fd6105ac36600461102f565b6109d6565b3480156105bd57600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f157600080fd5b506102fd61060036600461108e565b610a07565b34801561061157600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b34801561064557600080fd5b50610400610a30565b6106777f0000000000000000000000000000000000000000000000000000000000000000610abe565b5050565b6000806106a77f0000000000000000000000000000000000000000000000000000000000000000610abe565b50935093915050565b6106d97f0000000000000000000000000000000000000000000000000000000000000000610abe565b50505050505050565b61070b7f0000000000000000000000000000000000000000000000000000000000000000610abe565b5050505050565b600061073d7f0000000000000000000000000000000000000000000000000000000000000000610abe565b50949350505050565b60006107717f0000000000000000000000000000000000000000000000000000000000000000610abe565b50919050565b60006107a27f0000000000000000000000000000000000000000000000000000000000000000610abe565b5095945050505050565b6107d57f0000000000000000000000000000000000000000000000000000000000000000610abe565b505050565b60006108057f0000000000000000000000000000000000000000000000000000000000000000610abe565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610842610a30565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108eb91906110a7565b600060405180830381855af49150503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b50915091508161093d57805160208201fd5b805160208201f35b61096e7f0000000000000000000000000000000000000000000000000000000000000000610abe565b50505050565b6000806109a07f0000000000000000000000000000000000000000000000000000000000000000610abe565b5094509492505050565b6000806109a07f0000000000000000000000000000000000000000000000000000000000000000610abe565b6109ff7f0000000000000000000000000000000000000000000000000000000000000000610abe565b505050505050565b6106777f0000000000000000000000000000000000000000000000000000000000000000610abe565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108eb9291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b195780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b52578181015183820152602001610b3a565b50506000910152565b600060208284031215610b6d57600080fd5b815167ffffffffffffffff80821115610b8557600080fd5b818401915084601f830112610b9957600080fd5b815181811115610bab57610bab610b21565b604051601f8201601f19908116603f01168101908382118183101715610bd357610bd3610b21565b81604052828152876020848701011115610bec57600080fd5b610bfd836020830160208801610b37565b979650505050505050565b6001600160a01b0381168114610c1d57600080fd5b50565b600060208284031215610c3257600080fd5b8135610c3d81610c08565b9392505050565b80358015158114610c5457600080fd5b919050565b600060208284031215610c6b57600080fd5b610c3d82610c44565b60006060828403121561077157600080fd5b600080600060608486031215610c9b57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610cc057600080fd5b610ccc86828701610c74565b9150509250925092565b60008083601f840112610ce857600080fd5b50813567ffffffffffffffff811115610d0057600080fd5b6020830191508360208260051b8501011115610d1b57600080fd5b9250929050565b60008060008060008060808789031215610d3b57600080fd5b8635610d4681610c08565b95506020870135610d5681610c08565b9450604087013567ffffffffffffffff80821115610d7357600080fd5b610d7f8a838b01610cd6565b90965094506060890135915080821115610d9857600080fd5b50610da589828a01610cd6565b979a9699509497509295939492505050565b60008060008060808587031215610dcd57600080fd5b843593506020850135610ddf81610c08565b92506040850135610def81610c08565b9396929550929360600135925050565b60008060008060808587031215610e1557600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e4157600080fd5b610e4d87828801610c74565b91505092959194509250565b600060208284031215610e6b57600080fd5b813567ffffffffffffffff811115610e8257600080fd5b610e8e84828501610c74565b949350505050565b600080600080600060a08688031215610eae57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610ee157600080fd5b610eed88828901610c74565b9150509295509295909350565b60008060008060808587031215610f1057600080fd5b843593506020850135610f2281610c08565b9250604085013591506060850135610f3981610c08565b939692955090935050565b60008060408385031215610f5757600080fd5b8235610f6281610c08565b9150610f7060208401610c44565b90509250929050565b600080600080600080600060e0888a031215610f9457600080fd5b8735610f9f81610c08565b96506020880135610faf81610c08565b9550610fbd60408901610c44565b945060608801359350608088013560ff81168114610fda57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561100c57600080fd5b83359250602084013561101e81610c08565b929592945050506040919091013590565b600080600080600060a0868803121561104757600080fd5b85359450602086013561105981610c08565b9350604086013561106981610c08565b925060608601359150608086013561108081610c08565b809150509295509295909350565b6000602082840312156110a057600080fd5b5035919050565b600082516110b9818460208701610b37565b919091019291505056fea264697066735822122034b12f217d7064ffb1189032db6642b48c854315ffbca0b58d6c0403509a6e9e64736f6c63430008140033a264697066735822122012e58f27f7a5ba71896673edd76e06ff1bf5191a962787d97ec924ecea7d52bf64736f6c63430008140033";
        readonly sourceMap: "696:1446:29:-:0;;;923:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;958:12:29;;;696:1446;;14:305:235;99:6;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;194:16;;-1:-1:-1;;;;;239:31:235;;229:42;;219:70;;285:1;282;275:12;219:70;308:5;14:305;-1:-1:-1;;;14:305:235:o;:::-;696:1446:29;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806323509a2d1461003b5780636fa623e91461007e575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006261008c366004610287565b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208988888888887f00000000000000000000000000000000000000000000000000000000000000006040516100eb9061012b565b6100fb97969594939291906103f6565b8190604051809103906000f590508015801561011b573d6000803e3d6000fd5b5090505b98975050505050505050565b6115c78061051983390190565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561017257610172610138565b60405290565b80356001600160a01b038116811461018f57600080fd5b919050565b6000608082840312156101a657600080fd5b6040516080810181811067ffffffffffffffff821117156101c9576101c9610138565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f83011261020b57600080fd5b813567ffffffffffffffff8082111561022657610226610138565b604051601f8301601f19908116603f0116810190828211818310171561024e5761024e610138565b8160405283815286602085880101111561026757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080888a036102e08112156102a557600080fd5b610200808212156102b557600080fd5b6102bd61014e565b91506102c88b610178565b82526102d660208c01610178565b602083015260408b0135604083015260608b0135606083015260808b0135608083015260a08b013560a083015260c08b013560c083015260e08b013560e0830152610100808c01358184015250610120610331818d01610178565b908301526101406103438c8201610178565b908301526101606103558c8201610178565b908301526101806103688d8d8301610194565b9083015290985089013567ffffffffffffffff81111561038757600080fd5b6103938b828c016101fa565b9750506103a36102208a01610178565b95506103b26102408a01610178565b94506103c16102608a01610178565b93506103d06102808a01610178565b92506103df6102a08a01610178565b91506102c089013590509295985092959890939650565b87516001600160a01b031681526102c08101602089015161042260208401826001600160a01b03169052565b5060408901516040830152606089015160608301526080890151608083015260a089015160a083015260c089015160c083015260e089015160e0830152610100808a01518184015250610120808a0151610486828501826001600160a01b03169052565b5050610140898101516001600160a01b0390811691840191909152610160808b0151821690840152610180808b015180519185019190915260208101516101a085015260408101516101c0850152606001516101e084015288811661020084015287811661022084015286811661024084015285811661026084015284811661028084015283166102a083015261011f56fe6102e06040523480156200001257600080fd5b50604051620015c7380380620015c783398101604081905262000035916200023f565b600160005586516001600160a01b0390811660809081526060808a0151610180908152918a01516101a05260a0808b01516101c05260e0808c015190915260c0808c01519052610100808c0151909152918a0180515190925281516020908101516101209081528351604090810151610140908152945190930151610160908152918c015185166101e052918b015161020052908a0151600a80549185166001600160a01b0319928316179055918a0151600880549185169184169190911790558901516009805491841691909216179055808716610220528086166102405280851661026052808416610280528083166102a0528082166102c05287511673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146200016857604051630722152560e11b815260040160405180910390fd5b50505050505050620003a9565b6040516101a081016001600160401b0381118282101715620001a757634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001c557600080fd5b919050565b600060808284031215620001dd57600080fd5b604051608081016001600160401b03811182821017156200020e57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008060008060008789036102c08112156200025d57600080fd5b610200808212156200026e57600080fd5b6200027862000175565b9150620002858a620001ad565b82526200029560208b01620001ad565b602083015260408a0151604083015260608a0151606083015260808a0151608083015260a08a015160a083015260c08a015160c083015260e08a015160e0830152610100808b01518184015250610120620002f2818c01620001ad565b90830152610140620003068b8201620001ad565b908301526101606200031a8b8201620001ad565b908301526101806200032f8c8c8301620001ca565b818401525081985062000344818b01620001ad565b97505050620003576102208901620001ad565b9450620003686102408901620001ad565b9350620003796102608901620001ad565b92506200038a6102808901620001ad565b91506200039b6102a08901620001ad565b905092959891949750929550565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516110f9620004ce6000396000505060008181610617015281816109b20152610a0c01526000818161055c015281816107e1015261097c01526000818161051501526107190152600081816105c301528181610683015261077e0152600081816101e4015281816103a601528181610653015281816106b5015281816106e70152818161074d015281816107b1015281816108120152818161094a01526109db0152600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110f96000f3fe6080604052600436106101cd5760003560e01c8063a22cb465116100f7578063dbbe807011610095578063eac3e79911610064578063eac3e799146105b1578063ed64bab2146105e5578063f3f7070714610605578063f698da2514610639576101cd565b8063dbbe80701461057e578063ded06231146103e0578063e44808bc14610591578063e4af29d1146102dd576101cd565b8063ab033ea9116100d1578063ab033ea9146102dd578063cba2e58d14610537578063cbc134341461031a578063d899e1121461054a576101cd565b8063a22cb46514610490578063a42dce80146102dd578063a6e8a85914610503576101cd565b806330adf81f1161016f5780637180c8ca1161013e5780637180c8ca1461049057806377d05ff4146104b05780639032c726146104c35780639cd241af146104e3576101cd565b806330adf81f1461040e5780633e691db9146104425780634c2ac1d9146104625780634ed2d6ac14610475576101cd565b806317fad7fc116101ab57806317fad7fc146103545780631c0f12b61461037457806321b57d531461039457806329b23fc1146103e0576101cd565b806301681a62146102dd57806302329a29146102ff578063074a6de91461031a575b3480156101d957600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560405161021c929190610ada565b600060405180830381855af49150503d8060008114610257576040519150601f19603f3d011682016040523d82523d6000602084013e61025c565b606091505b5091509150811561028057604051638bb0a34b60e01b815260040160405180910390fd5b600061028b82610aea565b90506001600160e01b03198116636e64089360e11b146102ad57815160208301fd5b8151600319810160048401908152926102ce91810160200190602401610b5b565b80519650602001945050505050f35b3480156102e957600080fd5b506102fd6102f8366004610c20565b61064e565b005b34801561030b57600080fd5b506102fd6102f8366004610c59565b34801561032657600080fd5b5061033a610335366004610c86565b61067b565b604080519283526020830191909152015b60405180910390f35b34801561036057600080fd5b506102fd61036f366004610d22565b6106b0565b34801561038057600080fd5b506102fd61038f366004610db7565b6106e2565b3480156103a057600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161034b565b3480156103ec57600080fd5b506104006103fb366004610dff565b610712565b60405190815260200161034b565b34801561041a57600080fd5b506104007f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561044e57600080fd5b5061040061045d366004610e59565b610746565b610400610470366004610e96565b610777565b34801561048157600080fd5b506102fd61038f366004610efa565b34801561049c57600080fd5b506102fd6104ab366004610f44565b6107ac565b6104006104be366004610c86565b6107da565b3480156104cf57600080fd5b506102fd6104de366004610f79565b61080d565b3480156104ef57600080fd5b506102fd6104fe366004610ff7565b610945565b34801561050f57600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b61033a610545366004610dff565b610974565b34801561055657600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b61033a61058c366004610dff565b6109aa565b34801561059d57600080fd5b506102fd6105ac36600461102f565b6109d6565b3480156105bd57600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b3480156105f157600080fd5b506102fd61060036600461108e565b610a07565b34801561061157600080fd5b506103c87f000000000000000000000000000000000000000000000000000000000000000081565b34801561064557600080fd5b50610400610a30565b6106777f0000000000000000000000000000000000000000000000000000000000000000610abe565b5050565b6000806106a77f0000000000000000000000000000000000000000000000000000000000000000610abe565b50935093915050565b6106d97f0000000000000000000000000000000000000000000000000000000000000000610abe565b50505050505050565b61070b7f0000000000000000000000000000000000000000000000000000000000000000610abe565b5050505050565b600061073d7f0000000000000000000000000000000000000000000000000000000000000000610abe565b50949350505050565b60006107717f0000000000000000000000000000000000000000000000000000000000000000610abe565b50919050565b60006107a27f0000000000000000000000000000000000000000000000000000000000000000610abe565b5095945050505050565b6107d57f0000000000000000000000000000000000000000000000000000000000000000610abe565b505050565b60006108057f0000000000000000000000000000000000000000000000000000000000000000610abe565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610842610a30565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108eb91906110a7565b600060405180830381855af49150503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b50915091508161093d57805160208201fd5b805160208201f35b61096e7f0000000000000000000000000000000000000000000000000000000000000000610abe565b50505050565b6000806109a07f0000000000000000000000000000000000000000000000000000000000000000610abe565b5094509492505050565b6000806109a07f0000000000000000000000000000000000000000000000000000000000000000610abe565b6109ff7f0000000000000000000000000000000000000000000000000000000000000000610abe565b505050505050565b6106777f0000000000000000000000000000000000000000000000000000000000000000610abe565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108eb9291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b195780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b52578181015183820152602001610b3a565b50506000910152565b600060208284031215610b6d57600080fd5b815167ffffffffffffffff80821115610b8557600080fd5b818401915084601f830112610b9957600080fd5b815181811115610bab57610bab610b21565b604051601f8201601f19908116603f01168101908382118183101715610bd357610bd3610b21565b81604052828152876020848701011115610bec57600080fd5b610bfd836020830160208801610b37565b979650505050505050565b6001600160a01b0381168114610c1d57600080fd5b50565b600060208284031215610c3257600080fd5b8135610c3d81610c08565b9392505050565b80358015158114610c5457600080fd5b919050565b600060208284031215610c6b57600080fd5b610c3d82610c44565b60006060828403121561077157600080fd5b600080600060608486031215610c9b57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610cc057600080fd5b610ccc86828701610c74565b9150509250925092565b60008083601f840112610ce857600080fd5b50813567ffffffffffffffff811115610d0057600080fd5b6020830191508360208260051b8501011115610d1b57600080fd5b9250929050565b60008060008060008060808789031215610d3b57600080fd5b8635610d4681610c08565b95506020870135610d5681610c08565b9450604087013567ffffffffffffffff80821115610d7357600080fd5b610d7f8a838b01610cd6565b90965094506060890135915080821115610d9857600080fd5b50610da589828a01610cd6565b979a9699509497509295939492505050565b60008060008060808587031215610dcd57600080fd5b843593506020850135610ddf81610c08565b92506040850135610def81610c08565b9396929550929360600135925050565b60008060008060808587031215610e1557600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e4157600080fd5b610e4d87828801610c74565b91505092959194509250565b600060208284031215610e6b57600080fd5b813567ffffffffffffffff811115610e8257600080fd5b610e8e84828501610c74565b949350505050565b600080600080600060a08688031215610eae57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610ee157600080fd5b610eed88828901610c74565b9150509295509295909350565b60008060008060808587031215610f1057600080fd5b843593506020850135610f2281610c08565b9250604085013591506060850135610f3981610c08565b939692955090935050565b60008060408385031215610f5757600080fd5b8235610f6281610c08565b9150610f7060208401610c44565b90509250929050565b600080600080600080600060e0888a031215610f9457600080fd5b8735610f9f81610c08565b96506020880135610faf81610c08565b9550610fbd60408901610c44565b945060608801359350608088013560ff81168114610fda57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561100c57600080fd5b83359250602084013561101e81610c08565b929592945050506040919091013590565b600080600080600060a0868803121561104757600080fd5b85359450602086013561105981610c08565b9350604086013561106981610c08565b925060608601359150608086013561108081610c08565b809150509295509295909350565b6000602082840312156110a057600080fd5b5035919050565b600082516110b9818460208701610b37565b919091019291505056fea264697066735822122034b12f217d7064ffb1189032db6642b48c854315ffbca0b58d6c0403509a6e9e64736f6c63430008140033a264697066735822122012e58f27f7a5ba71896673edd76e06ff1bf5191a962787d97ec924ecea7d52bf64736f6c63430008140033";
        readonly sourceMap: "696:1446:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:27;;;;;;;;-1:-1:-1;;;;;309:32:235;;;291:51;;279:2;264:18;801:27:29;;;;;;;1479:661;;;;;;:::i;:::-;2001:29;;;2012:10;2001:29;;;4685:51:235;4752:18;;;4745:34;;;1757:7:29;;4658:18:235;;2001:29:29;;;;;;;;;;;;1991:40;;;;;;2050:7;2059;2068;2077;2086;2095;2104:4;1944:165;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:357;;1479:661;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;353:127:235:-;414:10;409:3;405:20;402:1;395:31;445:4;442:1;435:15;469:4;466:1;459:15;485:250;552:2;546:9;594:6;582:19;;631:18;616:34;;652:22;;;613:62;610:88;;;678:18;;:::i;:::-;714:2;707:22;485:250;:::o;740:181::-;816:20;;-1:-1:-1;;;;;865:31:235;;855:42;;845:70;;911:1;908;901:12;845:70;740:181;;;:::o;926:601::-;977:5;1025:4;1013:9;1008:3;1004:19;1000:30;997:50;;;1043:1;1040;1033:12;997:50;1076:2;1070:9;1118:4;1110:6;1106:17;1189:6;1177:10;1174:22;1153:18;1141:10;1138:34;1135:62;1132:88;;;1200:18;;:::i;:::-;1240:10;1236:2;1229:22;;1269:6;1260:15;;1312:9;1299:23;1291:6;1284:39;1384:2;1373:9;1369:18;1356:32;1351:2;1343:6;1339:15;1332:57;1450:2;1439:9;1435:18;1422:32;1417:2;1409:6;1405:15;1398:57;1516:2;1505:9;1501:18;1488:32;1483:2;1475:6;1471:15;1464:57;;926:601;;;;:::o;1532:718::-;1574:5;1627:3;1620:4;1612:6;1608:17;1604:27;1594:55;;1645:1;1642;1635:12;1594:55;1681:6;1668:20;1707:18;1744:2;1740;1737:10;1734:36;;;1750:18;;:::i;:::-;1825:2;1819:9;1793:2;1879:13;;-1:-1:-1;;1875:22:235;;;1899:2;1871:31;1867:40;1855:53;;;1923:18;;;1943:22;;;1920:46;1917:72;;;1969:18;;:::i;:::-;2009:10;2005:2;1998:22;2044:2;2036:6;2029:18;2090:3;2083:4;2078:2;2070:6;2066:15;2062:26;2059:35;2056:55;;;2107:1;2104;2097:12;2056:55;2171:2;2164:4;2156:6;2152:17;2145:4;2137:6;2133:17;2120:54;2218:1;2211:4;2206:2;2198:6;2194:15;2190:26;2183:37;2238:6;2229:15;;;;;;1532:718;;;;:::o;2255:2043::-;2415:6;2423;2431;2439;2447;2455;2463;2471;2515:9;2506:7;2502:23;2545:3;2541:2;2537:12;2534:32;;;2562:1;2559;2552:12;2534:32;2585:6;2611:2;2607;2603:11;2600:31;;;2627:1;2624;2617:12;2600:31;2653:17;;:::i;:::-;2640:30;;2693:37;2720:9;2693:37;:::i;:::-;2686:5;2679:52;2763:46;2805:2;2794:9;2790:18;2763:46;:::i;:::-;2758:2;2751:5;2747:14;2740:70;2870:2;2859:9;2855:18;2842:32;2837:2;2830:5;2826:14;2819:56;2935:2;2924:9;2920:18;2907:32;2902:2;2895:5;2891:14;2884:56;3001:3;2990:9;2986:19;2973:33;2967:3;2960:5;2956:15;2949:58;3068:3;3057:9;3053:19;3040:33;3034:3;3027:5;3023:15;3016:58;3135:3;3124:9;3120:19;3107:33;3101:3;3094:5;3090:15;3083:58;3202:3;3191:9;3187:19;3174:33;3168:3;3161:5;3157:15;3150:58;3227:3;3290:2;3279:9;3275:18;3262:32;3257:2;3250:5;3246:14;3239:56;;3314:3;3349:46;3391:2;3380:9;3376:18;3349:46;:::i;:::-;3333:14;;;3326:70;3415:3;3450:46;3477:18;;;3450:46;:::i;:::-;3434:14;;;3427:70;3516:3;3551:46;3578:18;;;3551:46;:::i;:::-;3535:14;;;3528:70;3617:3;3652:51;3695:7;3675:18;;;3652:51;:::i;:::-;3636:14;;;3629:75;3640:5;;-1:-1:-1;3764:18:235;;3751:32;3806:18;3795:30;;3792:50;;;3838:1;3835;3828:12;3792:50;3861:49;3902:7;3893:6;3882:9;3878:22;3861:49;:::i;:::-;3851:59;;;3929:47;3971:3;3960:9;3956:19;3929:47;:::i;:::-;3919:57;;3995:47;4037:3;4026:9;4022:19;3995:47;:::i;:::-;3985:57;;4061:47;4103:3;4092:9;4088:19;4061:47;:::i;:::-;4051:57;;4127:47;4169:3;4158:9;4154:19;4127:47;:::i;:::-;4117:57;;4193:47;4235:3;4224:9;4220:19;4193:47;:::i;:::-;4183:57;;4287:3;4276:9;4272:19;4259:33;4249:43;;2255:2043;;;;;;;;;;;:::o;5052:1997::-;5466:13;;-1:-1:-1;;;;;87:31:235;75:44;;5427:3;5412:19;;5538:4;5530:6;5526:17;5520:24;5553:61;5608:4;5597:9;5593:20;5579:12;-1:-1:-1;;;;;87:31:235;75:44;;14:111;5553:61;;5670:4;5662:6;5658:17;5652:24;5645:4;5634:9;5630:20;5623:54;5733:4;5725:6;5721:17;5715:24;5708:4;5697:9;5693:20;5686:54;5796:4;5788:6;5784:17;5778:24;5771:4;5760:9;5756:20;5749:54;5859:4;5851:6;5847:17;5841:24;5834:4;5823:9;5819:20;5812:54;5922:4;5914:6;5910:17;5904:24;5897:4;5886:9;5882:20;5875:54;5985:4;5977:6;5973:17;5967:24;5960:4;5949:9;5945:20;5938:54;6011:6;6071:2;6063:6;6059:15;6053:22;6048:2;6037:9;6033:18;6026:50;;6095:6;6150:2;6142:6;6138:15;6132:22;6163:61;6220:2;6209:9;6205:18;6189:14;-1:-1:-1;;;;;87:31:235;75:44;;14:111;6163:61;-1:-1:-1;;6243:6:235;6286:15;;;6280:22;-1:-1:-1;;;;;87:31:235;;;6353:18;;;75:44;;;;6391:6;6434:15;;;6428:22;87:31;;6501:18;;;75:44;6539:6;6582:15;;;6576:22;4860:12;;6646:18;;;4848:25;;;;4922:4;4911:16;;4905:23;4889:14;;;4882:47;4978:4;4967:16;;4961:23;4945:14;;;4938:47;5034:4;5023:16;5017:23;5001:14;;;4994:47;87:31;;;6723:3;6708:19;;75:44;87:31;;;6786:3;6771:19;;75:44;87:31;;;6849:3;6834:19;;75:44;87:31;;;6912:3;6897:19;;75:44;87:31;;;6975:3;6960:19;;75:44;87:31;;7038:3;7023:19;;75:44;6989:54;14:111";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "3432": readonly [{
                readonly start: 64;
                readonly length: 32;
            }, {
                readonly start: 192;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": "6fa623e9";
        readonly "lido()": "23509a2d";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILido\",\"name\":\"_lido\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lido\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_lido\":\"The Lido contract.\"}},\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_salt\":\"The create2 salt used in the deployment.\",\"target0\":\"The target0 address.\",\"target1\":\"The target1 address.\",\"target2\":\"The target2 address.\",\"target3\":\"The target3 address.\",\"target4\":\"The target4 address.\"},\"returns\":{\"_0\":\"The address of the newly deployed StETHHyperdrive instance.\"}}},\"title\":\"StETHHyperdriveCoreDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the core deployer.\"},\"deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"lido()\":{\"notice\":\"The Lido contract.\"}},\"notice\":\"The core deployer for the StETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol\":\"StETHHyperdriveCoreDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x5f962e10116e41dcc44c3c517f1e8d6e56496a54c598829cb95baaba2975445b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3a9d391e00db1fd7b0e0f5497ba790308d2db1e73177ca9d9a9ba723fbc80cb8\",\"dweb:/ipfs/QmPe2eFdcuqHccFamQWwUryeRGBQF8NetTHqNkrmx9xCdY\"]},\"contracts/src/external/Hyperdrive.sol\":{\"keccak256\":\"0x4d166ec6a8a2e3f2cae2d0f990d1cc40965ec995130d7a7be1af2b9e390d3fd8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2185afc7935052ce78427f3ee5629d4c6d93cbffad776fb281c2b79ff2234d67\",\"dweb:/ipfs/QmT6e2H7pXG3e2BM1EoHTxzWhTwxjGu75AxNkZ4CxyEbw6\"]},\"contracts/src/external/HyperdriveTarget0.sol\":{\"keccak256\":\"0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597\",\"dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ\"]},\"contracts/src/instances/steth/StETHBase.sol\":{\"keccak256\":\"0xdbcbf871d2be8e5c5640ad5d832413a7c2f5235ba333034f8d05bff08fa7b9c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://feca912f75e3e9df150f0366d11cb224305fa73ae781675c1d7f52c1307d08d9\",\"dweb:/ipfs/QmPa8G7QyCi2ANAzznizEtL6H3BXVhUCde7LUGKYyqwmCS\"]},\"contracts/src/instances/steth/StETHHyperdrive.sol\":{\"keccak256\":\"0xa5848dba68f4dffa3304fc309e1752659ff68f5f33f1fc21405eca0693457f80\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://08de2e62149d3acbd989158ca8139f021d3bdd7ae60b7b194f513ad4191c2fe0\",\"dweb:/ipfs/QmeYafBgS2Uu17WywdKYa7pyrx9eparrt7kuLZZEQ4fQCk\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/ILido.sol\":{\"keccak256\":\"0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3\",\"dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603\",\"dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6\",\"dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7\",\"dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2\",\"dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7\",\"dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d\",\"dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006\",\"dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195\",\"dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002\",\"dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f\",\"dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "_lido";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.PoolConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialVaultSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "address";
                    readonly name: "target0";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target1";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target2";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target3";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "target4";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "lido";
                readonly outputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _lido: "The Lido contract.";
                        };
                    };
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _salt: "The create2 salt used in the deployment.";
                            readonly target0: "The target0 address.";
                            readonly target1: "The target1 address.";
                            readonly target2: "The target2 address.";
                            readonly target3: "The target3 address.";
                            readonly target4: "The target4 address.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed StETHHyperdrive instance.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the core deployer.";
                    };
                    readonly "deploy((address,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,address,address,address,address,address,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "lido()": {
                        readonly notice: "The Lido contract.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol": "StETHHyperdriveCoreDeployer";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x5f962e10116e41dcc44c3c517f1e8d6e56496a54c598829cb95baaba2975445b";
                readonly urls: readonly ["bzz-raw://3a9d391e00db1fd7b0e0f5497ba790308d2db1e73177ca9d9a9ba723fbc80cb8", "dweb:/ipfs/QmPe2eFdcuqHccFamQWwUryeRGBQF8NetTHqNkrmx9xCdY"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/Hyperdrive.sol": {
                readonly keccak256: "0x4d166ec6a8a2e3f2cae2d0f990d1cc40965ec995130d7a7be1af2b9e390d3fd8";
                readonly urls: readonly ["bzz-raw://2185afc7935052ce78427f3ee5629d4c6d93cbffad776fb281c2b79ff2234d67", "dweb:/ipfs/QmT6e2H7pXG3e2BM1EoHTxzWhTwxjGu75AxNkZ4CxyEbw6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/external/HyperdriveTarget0.sol": {
                readonly keccak256: "0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d";
                readonly urls: readonly ["bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597", "dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/steth/StETHBase.sol": {
                readonly keccak256: "0xdbcbf871d2be8e5c5640ad5d832413a7c2f5235ba333034f8d05bff08fa7b9c1";
                readonly urls: readonly ["bzz-raw://feca912f75e3e9df150f0366d11cb224305fa73ae781675c1d7f52c1307d08d9", "dweb:/ipfs/QmPa8G7QyCi2ANAzznizEtL6H3BXVhUCde7LUGKYyqwmCS"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/instances/steth/StETHHyperdrive.sol": {
                readonly keccak256: "0xa5848dba68f4dffa3304fc309e1752659ff68f5f33f1fc21405eca0693457f80";
                readonly urls: readonly ["bzz-raw://08de2e62149d3acbd989158ca8139f021d3bdd7ae60b7b194f513ad4191c2fe0", "dweb:/ipfs/QmeYafBgS2Uu17WywdKYa7pyrx9eparrt7kuLZZEQ4fQCk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952";
                readonly urls: readonly ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e";
                readonly urls: readonly ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0";
                readonly urls: readonly ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ILido.sol": {
                readonly keccak256: "0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6";
                readonly urls: readonly ["bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3", "dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveAdmin.sol": {
                readonly keccak256: "0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d";
                readonly urls: readonly ["bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603", "dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveBase.sol": {
                readonly keccak256: "0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb";
                readonly urls: readonly ["bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6", "dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveCheckpoint.sol": {
                readonly keccak256: "0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649";
                readonly urls: readonly ["bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7", "dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLP.sol": {
                readonly keccak256: "0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d";
                readonly urls: readonly ["bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2", "dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveLong.sol": {
                readonly keccak256: "0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832";
                readonly urls: readonly ["bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7", "dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveMultiToken.sol": {
                readonly keccak256: "0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373";
                readonly urls: readonly ["bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d", "dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveShort.sol": {
                readonly keccak256: "0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5";
                readonly urls: readonly ["bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006", "dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/internal/HyperdriveStorage.sol": {
                readonly keccak256: "0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a";
                readonly urls: readonly ["bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195", "dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/AssetId.sol": {
                readonly keccak256: "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b";
                readonly urls: readonly ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Constants.sol": {
                readonly keccak256: "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d";
                readonly urls: readonly ["bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418", "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Errors.sol": {
                readonly keccak256: "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0";
                readonly urls: readonly ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/HyperdriveMath.sol": {
                readonly keccak256: "0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab";
                readonly urls: readonly ["bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002", "dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/LPMath.sol": {
                readonly keccak256: "0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067";
                readonly urls: readonly ["bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f", "dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/YieldSpaceMath.sol": {
                readonly keccak256: "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891";
                readonly urls: readonly ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                readonly keccak256: "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7";
                readonly urls: readonly ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                readonly keccak256: "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80";
                readonly urls: readonly ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                readonly keccak256: "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70";
                readonly urls: readonly ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                readonly keccak256: "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2";
                readonly urls: readonly ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                readonly keccak256: "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff";
                readonly urls: readonly ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                readonly keccak256: "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386";
                readonly urls: readonly ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                readonly keccak256: "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721";
                readonly urls: readonly ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                readonly keccak256: "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2";
                readonly urls: readonly ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                readonly keccak256: "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236";
                readonly urls: readonly ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/steth/StETHHyperdriveCoreDeployer.sol";
        readonly id: 3495;
        readonly exportedSymbols: {
            readonly IHyperdrive: readonly [11028];
            readonly IHyperdriveCoreDeployer: readonly [11245];
            readonly ILido: readonly [11973];
            readonly StETHHyperdrive: readonly [10016];
            readonly StETHHyperdriveCoreDeployer: readonly [3494];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:2104:29";
        readonly nodes: readonly [{
            readonly id: 3417;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:29";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 3419;
            readonly nodeType: "ImportDirective";
            readonly src: "64:63:29";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3495;
            readonly sourceUnit: 11029;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3418;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11028;
                    readonly src: "73:11:29";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3421;
            readonly nodeType: "ImportDirective";
            readonly src: "128:87:29";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol";
            readonly file: "../../interfaces/IHyperdriveCoreDeployer.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3495;
            readonly sourceUnit: 11246;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3420;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11245;
                    readonly src: "137:23:29";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3423;
            readonly nodeType: "ImportDirective";
            readonly src: "216:51:29";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/ILido.sol";
            readonly file: "../../interfaces/ILido.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3495;
            readonly sourceUnit: 11974;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3422;
                    readonly name: "ILido";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11973;
                    readonly src: "225:5:29";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3425;
            readonly nodeType: "ImportDirective";
            readonly src: "268:76:29";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/instances/steth/StETHHyperdrive.sol";
            readonly file: "../../instances/steth/StETHHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3495;
            readonly sourceUnit: 10017;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3424;
                    readonly name: "StETHHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10016;
                    readonly src: "277:15:29";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3494;
            readonly nodeType: "ContractDefinition";
            readonly src: "696:1446:29";
            readonly nodes: readonly [{
                readonly id: 3432;
                readonly nodeType: "VariableDeclaration";
                readonly src: "801:27:29";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3429;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "766:30:29";
                    readonly text: "@notice The Lido contract.";
                };
                readonly functionSelector: "23509a2d";
                readonly mutability: "immutable";
                readonly name: "lido";
                readonly nameLocation: "824:4:29";
                readonly scope: 3494;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                    readonly typeString: "contract ILido";
                };
                readonly typeName: {
                    readonly id: 3431;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3430;
                        readonly name: "ILido";
                        readonly nameLocations: readonly ["801:5:29"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 11973;
                        readonly src: "801:5:29";
                    };
                    readonly referencedDeclaration: 11973;
                    readonly src: "801:5:29";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ILido_$11973";
                        readonly typeString: "contract ILido";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3444;
                readonly nodeType: "FunctionDefinition";
                readonly src: "923:54:29";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3443;
                    readonly nodeType: "Block";
                    readonly src: "948:29:29";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3441;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3439;
                                readonly name: "lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3432;
                                readonly src: "958:4:29";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3440;
                                readonly name: "_lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3436;
                                readonly src: "965:5:29";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly src: "958:12:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly id: 3442;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "958:12:29";
                    }];
                };
                readonly documentation: {
                    readonly id: 3433;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "835:83:29";
                    readonly text: "@notice Instantiates the core deployer.\n @param _lido The Lido contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 3437;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3436;
                        readonly mutability: "mutable";
                        readonly name: "_lido";
                        readonly nameLocation: "941:5:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3444;
                        readonly src: "935:11:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_ILido_$11973";
                            readonly typeString: "contract ILido";
                        };
                        readonly typeName: {
                            readonly id: 3435;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3434;
                                readonly name: "ILido";
                                readonly nameLocations: readonly ["935:5:29"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11973;
                                readonly src: "935:5:29";
                            };
                            readonly referencedDeclaration: 11973;
                            readonly src: "935:5:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "934:13:29";
                };
                readonly returnParameters: {
                    readonly id: 3438;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "948:0:29";
                };
                readonly scope: 3494;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 3493;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1479:661:29";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3492;
                    readonly nodeType: "Block";
                    readonly src: "1766:374:29";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly components: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 3481;
                                        readonly name: "_config";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3448;
                                        readonly src: "2050:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$10819_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        };
                                    }, {
                                        readonly id: 3482;
                                        readonly name: "target0";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3452;
                                        readonly src: "2059:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3483;
                                        readonly name: "target1";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3454;
                                        readonly src: "2068:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3484;
                                        readonly name: "target2";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3456;
                                        readonly src: "2077:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3485;
                                        readonly name: "target3";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3458;
                                        readonly src: "2086:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3486;
                                        readonly name: "target4";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3460;
                                        readonly src: "2095:7:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3487;
                                        readonly name: "lido";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3432;
                                        readonly src: "2104:4:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_ILido_$11973";
                                            readonly typeString: "contract ILido";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_struct$_PoolConfig_$10819_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_contract$_ILido_$11973";
                                            readonly typeString: "contract ILido";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_struct$_PoolConfig_$10819_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolConfig memory";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                                readonly typeString: "contract ILido";
                                            }];
                                            readonly id: 3471;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "NewExpression";
                                            readonly src: "1944:19:29";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$10819_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_ILido_$11973_$returns$_t_contract$_StETHHyperdrive_$10016_$";
                                                readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract ILido) returns (contract StETHHyperdrive)";
                                            };
                                            readonly typeName: {
                                                readonly id: 3470;
                                                readonly nodeType: "UserDefinedTypeName";
                                                readonly pathNode: {
                                                    readonly id: 3469;
                                                    readonly name: "StETHHyperdrive";
                                                    readonly nameLocations: readonly ["1948:15:29"];
                                                    readonly nodeType: "IdentifierPath";
                                                    readonly referencedDeclaration: 10016;
                                                    readonly src: "1948:15:29";
                                                };
                                                readonly referencedDeclaration: 10016;
                                                readonly src: "1948:15:29";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_contract$_StETHHyperdrive_$10016";
                                                    readonly typeString: "contract StETHHyperdrive";
                                                };
                                            };
                                        };
                                        readonly id: 3480;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["salt"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 3475;
                                                        readonly name: "msg";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -15;
                                                        readonly src: "2012:3:29";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_message";
                                                            readonly typeString: "msg";
                                                        };
                                                    };
                                                    readonly id: 3476;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2016:6:29";
                                                    readonly memberName: "sender";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "2012:10:29";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                }, {
                                                    readonly id: 3477;
                                                    readonly name: "_salt";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3462;
                                                    readonly src: "2024:5:29";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    }, {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 3473;
                                                        readonly name: "abi";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -1;
                                                        readonly src: "2001:3:29";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_abi";
                                                            readonly typeString: "abi";
                                                        };
                                                    };
                                                    readonly id: 3474;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2005:6:29";
                                                    readonly memberName: "encode";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "2001:10:29";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                        readonly typeString: "function () pure returns (bytes memory)";
                                                    };
                                                };
                                                readonly id: 3478;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "2001:29:29";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                }];
                                                readonly id: 3472;
                                                readonly name: "keccak256";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -8;
                                                readonly src: "1991:9:29";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                                    readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                                };
                                            };
                                            readonly id: 3479;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "1991:40:29";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly src: "1944:105:29";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_creation_nonpayable$_t_struct$_PoolConfig_$10819_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_ILido_$11973_$returns$_t_contract$_StETHHyperdrive_$10016_$salt";
                                            readonly typeString: "function (struct IHyperdrive.PoolConfig memory,address,address,address,address,address,contract ILido) returns (contract StETHHyperdrive)";
                                        };
                                    };
                                    readonly id: 3488;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1944:165:29";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_StETHHyperdrive_$10016";
                                        readonly typeString: "contract StETHHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_StETHHyperdrive_$10016";
                                        readonly typeString: "contract StETHHyperdrive";
                                    }];
                                    readonly id: 3468;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "1797:7:29";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 3467;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "1797:7:29";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 3489;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1797:326:29";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly id: 3490;
                            readonly isConstant: false;
                            readonly isInlineArray: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "TupleExpression";
                            readonly src: "1783:350:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 3466;
                        readonly id: 3491;
                        readonly nodeType: "Return";
                        readonly src: "1776:357:29";
                    }];
                };
                readonly baseFunctions: readonly [11244];
                readonly documentation: {
                    readonly id: 3445;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "983:491:29";
                    readonly text: "@notice Deploys a Hyperdrive instance with the given parameters.\n @param _config The configuration of the Hyperdrive pool.\n @param target0 The target0 address.\n @param target1 The target1 address.\n @param target2 The target2 address.\n @param target3 The target3 address.\n @param target4 The target4 address.\n @param _salt The create2 salt used in the deployment.\n @return The address of the newly deployed StETHHyperdrive instance.";
                };
                readonly functionSelector: "6fa623e9";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deploy";
                readonly nameLocation: "1488:6:29";
                readonly parameters: {
                    readonly id: 3463;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3448;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "1534:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1504:37:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolConfig_$10819_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolConfig";
                        };
                        readonly typeName: {
                            readonly id: 3447;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3446;
                                readonly name: "IHyperdrive.PoolConfig";
                                readonly nameLocations: readonly ["1504:11:29", "1516:10:29"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10819;
                                readonly src: "1504:22:29";
                            };
                            readonly referencedDeclaration: 10819;
                            readonly src: "1504:22:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolConfig_$10819_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3450;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1551:12:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 3449;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1551:5:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3452;
                        readonly mutability: "mutable";
                        readonly name: "target0";
                        readonly nameLocation: "1602:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1594:15:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3451;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1594:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3454;
                        readonly mutability: "mutable";
                        readonly name: "target1";
                        readonly nameLocation: "1627:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1619:15:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3453;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1619:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3456;
                        readonly mutability: "mutable";
                        readonly name: "target2";
                        readonly nameLocation: "1652:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1644:15:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3455;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1644:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3458;
                        readonly mutability: "mutable";
                        readonly name: "target3";
                        readonly nameLocation: "1677:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1669:15:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3457;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1669:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3460;
                        readonly mutability: "mutable";
                        readonly name: "target4";
                        readonly nameLocation: "1702:7:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1694:15:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3459;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1694:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3462;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "1727:5:29";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1719:13:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 3461;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1719:7:29";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1494:244:29";
                };
                readonly returnParameters: {
                    readonly id: 3466;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3465;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3493;
                        readonly src: "1757:7:29";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3464;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1757:7:29";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1756:9:29";
                };
                readonly scope: 3494;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 3427;
                    readonly name: "IHyperdriveCoreDeployer";
                    readonly nameLocations: readonly ["736:23:29"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 11245;
                    readonly src: "736:23:29";
                };
                readonly id: 3428;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "736:23:29";
            }];
            readonly canonicalName: "StETHHyperdriveCoreDeployer";
            readonly contractDependencies: readonly [10016];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 3426;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "346:350:29";
                readonly text: "@author DELV\n @title StETHHyperdriveCoreDeployer\n @notice The core deployer for the StETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [3494, 11245];
            readonly name: "StETHHyperdriveCoreDeployer";
            readonly nameLocation: "705:27:29";
            readonly scope: 3495;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 29;
};
//# sourceMappingURL=StETHHyperdriveCoreDeployer.d.ts.map