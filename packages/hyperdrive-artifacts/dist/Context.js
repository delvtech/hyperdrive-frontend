export const Context = { "abi": [], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": {}, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "lib/openzeppelin-contracts/contracts/utils/Context.sol": "Context" }, "libraries": {} }, "sources": { "lib/openzeppelin-contracts/contracts/utils/Context.sol": { "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2", "urls": ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"], "license": "MIT" } }, "version": 1 }, "ast": { "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol", "id": 67038, "exportedSymbols": { "Context": [67037] }, "nodeType": "SourceUnit", "src": "101:862:120", "nodes": [{ "id": 67009, "nodeType": "PragmaDirective", "src": "101:24:120", "nodes": [], "literals": ["solidity", "^", "0.8", ".20"] }, { "id": 67037, "nodeType": "ContractDefinition", "src": "624:338:120", "nodes": [{ "id": 67019, "nodeType": "FunctionDefinition", "src": "656:96:120", "nodes": [], "body": { "id": 67018, "nodeType": "Block", "src": "718:34:120", "nodes": [], "statements": [{ "expression": { "expression": { "id": 67015, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "735:3:120", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 67016, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "739:6:120", "memberName": "sender", "nodeType": "MemberAccess", "src": "735:10:120", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "functionReturnParameters": 67014, "id": 67017, "nodeType": "Return", "src": "728:17:120" }] }, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nameLocation": "665:10:120", "parameters": { "id": 67011, "nodeType": "ParameterList", "parameters": [], "src": "675:2:120" }, "returnParameters": { "id": 67014, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 67013, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 67019, "src": "709:7:120", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 67012, "name": "address", "nodeType": "ElementaryTypeName", "src": "709:7:120", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "708:9:120" }, "scope": 67037, "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "id": 67028, "nodeType": "FunctionDefinition", "src": "758:99:120", "nodes": [], "body": { "id": 67027, "nodeType": "Block", "src": "825:32:120", "nodes": [], "statements": [{ "expression": { "expression": { "id": 67024, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "842:3:120", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 67025, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "846:4:120", "memberName": "data", "nodeType": "MemberAccess", "src": "842:8:120", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" } }, "functionReturnParameters": 67023, "id": 67026, "nodeType": "Return", "src": "835:15:120" }] }, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nameLocation": "767:8:120", "parameters": { "id": 67020, "nodeType": "ParameterList", "parameters": [], "src": "775:2:120" }, "returnParameters": { "id": 67023, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 67022, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 67028, "src": "809:14:120", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" }, "typeName": { "id": 67021, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "809:5:120", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "808:16:120" }, "scope": 67037, "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "id": 67036, "nodeType": "FunctionDefinition", "src": "863:97:120", "nodes": [], "body": { "id": 67035, "nodeType": "Block", "src": "935:25:120", "nodes": [], "statements": [{ "expression": { "hexValue": "30", "id": 67033, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "952:1:120", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "functionReturnParameters": 67032, "id": 67034, "nodeType": "Return", "src": "945:8:120" }] }, "implemented": true, "kind": "function", "modifiers": [], "name": "_contextSuffixLength", "nameLocation": "872:20:120", "parameters": { "id": 67029, "nodeType": "ParameterList", "parameters": [], "src": "892:2:120" }, "returnParameters": { "id": 67032, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 67031, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 67036, "src": "926:7:120", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 67030, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "926:7:120", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "925:9:120" }, "scope": 67037, "stateMutability": "view", "virtual": true, "visibility": "internal" }], "abstract": true, "baseContracts": [], "canonicalName": "Context", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 67010, "nodeType": "StructuredDocumentation", "src": "127:496:120", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts." }, "fullyImplemented": true, "linearizedBaseContracts": [67037], "name": "Context", "nameLocation": "642:7:120", "scope": 67038, "usedErrors": [], "usedEvents": [] }], "license": "MIT" }, "id": 120 };
