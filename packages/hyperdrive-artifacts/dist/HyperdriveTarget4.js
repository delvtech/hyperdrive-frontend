export const HyperdriveTarget4 = { "abi": [{ "type": "function", "name": "openShort", "inputs": [{ "name": "_bondAmount", "type": "uint256", "internalType": "uint256" }, { "name": "_maxDeposit", "type": "uint256", "internalType": "uint256" }, { "name": "_minVaultSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "_options", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "maturityTime", "type": "uint256", "internalType": "uint256" }, { "name": "traderDeposit", "type": "uint256", "internalType": "uint256" }], "stateMutability": "payable" }, { "type": "event", "name": "AddLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Approval", "inputs": [{ "name": "owner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "spender", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "ApprovalForAll", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "CloseLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CloseShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CollectGovernanceFee", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "fees", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CreateCheckpoint", "inputs": [{ "name": "checkpointTime", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedShorts", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedLongs", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "GovernanceUpdated", "inputs": [{ "name": "newGovernance", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Initialize", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "apr", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "PauseStatusUpdated", "inputs": [{ "name": "isPaused", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "PauserUpdated", "inputs": [{ "name": "newPauser", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "RedeemWithdrawalShares", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "RemoveLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "TransferSingle", "inputs": [{ "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "from", "type": "address", "indexed": true, "internalType": "address" }, { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "id", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "ExpInvalidExponent", "inputs": [] }, { "type": "error", "name": "InsufficientLiquidity", "inputs": [{ "name": "reason", "type": "uint8", "internalType": "enum IHyperdrive.InsufficientLiquidityReason" }] }, { "type": "error", "name": "InvalidShareReserves", "inputs": [] }, { "type": "error", "name": "InvalidTimestamp", "inputs": [] }, { "type": "error", "name": "LnInvalidInput", "inputs": [] }, { "type": "error", "name": "MinimumSharePrice", "inputs": [] }, { "type": "error", "name": "MinimumTransactionAmount", "inputs": [] }, { "type": "error", "name": "NegativePresentValue", "inputs": [] }, { "type": "error", "name": "OutputLimit", "inputs": [] }, { "type": "error", "name": "PoolIsPaused", "inputs": [] }, { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] }, { "type": "error", "name": "UnsafeCastToInt128", "inputs": [] }, { "type": "error", "name": "UnsafeCastToUint112", "inputs": [] }, { "type": "error", "name": "UnsafeCastToUint128", "inputs": [] }], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "openShort(uint256,uint256,uint256,(address,bool,bytes))": "dbbe8070" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExpInvalidExponent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum IHyperdrive.InsufficientLiquidityReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LnInvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumSharePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativePresentValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToInt128\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToUint112\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToUint128\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVaultSharePrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"openShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"traderDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\"}},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of bonds to short.\",\"_maxDeposit\":\"The most the user expects to deposit for this trade\",\"_minVaultSharePrice\":\"The minium share price at which to open the long.        This allows traders to protect themselves from opening a long in        a checkpoint where negative interest has accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"maturityTime\":\"The maturity time of the short.\",\"traderDeposit\":\"The amount the user deposited for this trade.\"}}},\"title\":\"HyperdriveTarget4\",\"version\":1},\"userdoc\":{\"errors\":{\"ExpInvalidExponent()\":[{\"notice\":\"Thrown when the exponent to `FixedPointMath.exp` would cause the         the result to be larger than the representable scale.\"}],\"InsufficientLiquidity(uint8)\":[{\"notice\":\"Thrown when the pool doesn't have sufficient liquidity to         complete the trade.\"}],\"InvalidShareReserves()\":[{\"notice\":\"Thrown when update liquidity brings the share reserves below         the minimum share reserves.\"}],\"InvalidTimestamp()\":[{\"notice\":\"Thrown when the timestamp used to construct an asset ID exceeds         the uint248 scale.\"}],\"LnInvalidInput()\":[{\"notice\":\"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero.\"}],\"MinimumSharePrice()\":[{\"notice\":\"Thrown when vault share price is smaller than the minimum share         price. This protects traders from unknowingly opening a long or         short after negative interest has accrued.\"}],\"MinimumTransactionAmount()\":[{\"notice\":\"Thrown when the input or output amount of a trade is smaller         than the minimum transaction amount. This protects traders and         LPs from losses of precision that can occur at small scales.\"}],\"NegativePresentValue()\":[{\"notice\":\"Thrown when the present value is negative. Whatever proceeded         a negative present value should be reverted.\"}],\"OutputLimit()\":[{\"notice\":\"Thrown when a slippage guard is violated.\"}],\"PoolIsPaused()\":[{\"notice\":\"Thrown when the pool is paused and a trader tries to add         liquidity, open a long, or open a short. Traders can still         close their existing positions while the pool is paused.\"}],\"UnsafeCastToInt128()\":[{\"notice\":\"Thrown when casting a value to a int128 that is outside of the         int128 scale.\"}],\"UnsafeCastToUint112()\":[{\"notice\":\"Thrown when casting a value to a uint112 that is outside of the         uint128 scale.\"}],\"UnsafeCastToUint128()\":[{\"notice\":\"Thrown when casting a value to a uint128 that is outside of the         uint128 scale.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates target4.\"},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a short position.\"}},\"notice\":\"Hyperdrive's target 4 logic contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/external/HyperdriveTarget4.sol\":\"HyperdriveTarget4\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/external/HyperdriveTarget4.sol\":{\"keccak256\":\"0x9af0ad4e06ec7b67b731854bfdee2224bab03bf64803ea4bd801ea71cc8fbccf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e3deb01021351fe7adb1a7273ae483467476be845aa191a76256df5f8f168c58\",\"dweb:/ipfs/QmNfA2XYuzTJTc8AGbVHbX5hCvrgShb7bCaNeJvWfs5uAG\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398\",\"dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240\",\"dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1\",\"dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f\",\"dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477\",\"dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3\",\"dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3\",\"dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd\",\"dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb\",\"dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0xb03ab9d883c7eb223ea4d05d5d22cb30834b5589958459ff70236c0e1f571e7e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0f33134385373cb53eed027b88befe223e70ebe77ecf19dea6ce3f2a677458d1\",\"dweb:/ipfs/QmWGrRr12zS1ccFzMx82zwWoJfHDZf6bdYivNF4FA3Ggd3\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0x85425352d87169445470983b3ba518d759f022bdbaec6dad3bdd606a96f9b826\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://453da96e4ddc453cace00c54c3bef55ab1b7f7d23c86c33e5aa09c395ee54496\",\"dweb:/ipfs/QmXkvqn4mEq8sw4ofFW4jKR3QCmPJTxGmKh6YWpKp5sU3w\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x04d22b2ebf166f1ae6e9645eebeeb077e6eda42c782b685b8432e899b81c7582\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47f974c18b069ab242498bf15451d1dd377ab0119d9a2f384a3bfc5ce60ff86e\",\"dweb:/ipfs/QmSKARBTcMuqku3Gs9YJfiCNhxZLarjNDty9tdqpYR6qXV\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x90ef3178580af58520b7517024b091b7d67cc6e6e93cb46e061ba2fd7366b972\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5841dbfb9498e283d26855ca25caebfb080c8893474858acfde43ba60c0cb2ae\",\"dweb:/ipfs/QmRYGcn4qmjt7eYsr4oMANBignijf6oz4UFmRA679zt9YD\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0x7213875367ce751a20f5371d79880a2b6105bf3e20fab65044ecb9f921d17deb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://179935e894ba8c1a634b3ab16d1b3914c60218fa5dbf61e58ce54df06ac6d75e\",\"dweb:/ipfs/QmRif44MTY2U9b5TFAiEStZYu2TiUQUANi5VQKDvQezeKy\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0xa1d8f02c9a470eb0e1fd2ff6195546fe414485cd3c86b9f0ff0734db27699ab6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54324a6775bbd1cfc643504cb9b0e53fd843f5a4d9d7c38c07526d6b3e44299d\",\"dweb:/ipfs/QmREvG68YXkt1EoWZL131BpnB4fWjvK6GXJpzi6msL1VzB\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0x960457a35b1ac18fa27eb3524d29f8ae14cbdbad70a20c46aab62a20330eadb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1f791d322e18bada00890b63c13de0d4db9e37b5583d005e44e4516b0f6eb71\",\"dweb:/ipfs/Qmd8Tcer76uSNah2eKA5g9MTSVGwch9HXZUYfMN7YEWeZ7\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d\",\"dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0xc2e36474285afd5b98999d648305f077a05b0e159dd63ef5f44f29cd42eb68c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fbf8aac982e8485dce3f8c7f85b9bbbd46b41d8d0d3deebe1fc927799de60c0b\",\"dweb:/ipfs/QmbUJsi5cqS4M4sVcJ8cDWvbMRSqYzfjRAp8gaP1v2dtst\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d\",\"dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0x94662a356f9ab292c0935ff4c29f9b826a17176eb98b472efed7afbfe4d5d744\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://794c5605f8f0716b871a8747fea516d26fd73f0add45a944ac4034de96c60c7a\",\"dweb:/ipfs/QmYSsquDzxupHSwWMsjjooxNxuzQ29ezczFsP2VQ5PYYve\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x8d9491ad62e48c7148389a72feca73a388076e3386d7ddc6788193be359e1266\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d340b65b76fc638d119d7d1d6f38fa044c34fc9297dc0c1627c9820218b2e244\",\"dweb:/ipfs/QmZo3nPVg3j2Ga8UXRZFQyTq7RuYuY6F2tYynnVUP4SbDY\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x390a002b83e7ed8a99d4ca9b3ea514b2080c237911a3a3d0fa2ad4522a09d60b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://51ea972cf6d3c79ea6b93c63c85fbba2bd234e71704715a1d9bd897da9d6fcb1\",\"dweb:/ipfs/QmXEGDrLyeAYMZiDVNynVzRzAYgnspcdLfkMeGr81DmJpL\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x76f69d3104f3f97d67289512325306d7ea2c7b29a787eeef93ffc47e8a80f346\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c8df31a46b4287c23c67e0157e6f6a4877608ed3fb1919a9c07f5bd9b81d7f6\",\"dweb:/ipfs/QmPua6efzJGnC7NarnPojk9yF2geqenUaXUNRmPVHJdXWk\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [], "type": "error", "name": "ExpInvalidExponent" }, { "inputs": [{ "internalType": "enum IHyperdrive.InsufficientLiquidityReason", "name": "reason", "type": "uint8" }], "type": "error", "name": "InsufficientLiquidity" }, { "inputs": [], "type": "error", "name": "InvalidShareReserves" }, { "inputs": [], "type": "error", "name": "InvalidTimestamp" }, { "inputs": [], "type": "error", "name": "LnInvalidInput" }, { "inputs": [], "type": "error", "name": "MinimumSharePrice" }, { "inputs": [], "type": "error", "name": "MinimumTransactionAmount" }, { "inputs": [], "type": "error", "name": "NegativePresentValue" }, { "inputs": [], "type": "error", "name": "OutputLimit" }, { "inputs": [], "type": "error", "name": "PoolIsPaused" }, { "inputs": [], "type": "error", "name": "ReentrancyGuardReentrantCall" }, { "inputs": [], "type": "error", "name": "UnsafeCastToInt128" }, { "inputs": [], "type": "error", "name": "UnsafeCastToUint112" }, { "inputs": [], "type": "error", "name": "UnsafeCastToUint128" }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "AddLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address", "indexed": true }, { "internalType": "address", "name": "spender", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Approval", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": true }, { "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }], "type": "event", "name": "ApprovalForAll", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseShort", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "fees", "type": "uint256", "indexed": false }], "type": "event", "name": "CollectGovernanceFee", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "checkpointTime", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedShorts", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedLongs", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "CreateCheckpoint", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newGovernance", "type": "address", "indexed": true }], "type": "event", "name": "GovernanceUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "apr", "type": "uint256", "indexed": false }], "type": "event", "name": "Initialize", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenShort", "anonymous": false }, { "inputs": [{ "internalType": "bool", "name": "isPaused", "type": "bool", "indexed": false }], "type": "event", "name": "PauseStatusUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newPauser", "type": "address", "indexed": true }], "type": "event", "name": "PauserUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "RedeemWithdrawalShares", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "RemoveLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "address", "name": "from", "type": "address", "indexed": true }, { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "id", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "TransferSingle", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "_bondAmount", "type": "uint256" }, { "internalType": "uint256", "name": "_maxDeposit", "type": "uint256" }, { "internalType": "uint256", "name": "_minVaultSharePrice", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "_options", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "payable", "type": "function", "name": "openShort", "outputs": [{ "internalType": "uint256", "name": "maturityTime", "type": "uint256" }, { "internalType": "uint256", "name": "traderDeposit", "type": "uint256" }] }], "devdoc": { "kind": "dev", "methods": { "constructor": { "params": { "_config": "The configuration of the Hyperdrive pool." } }, "openShort(uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_bondAmount": "The amount of bonds to short.", "_maxDeposit": "The most the user expects to deposit for this trade", "_minVaultSharePrice": "The minium share price at which to open the long.        This allows traders to protect themselves from opening a long in        a checkpoint where negative interest has accrued.", "_options": "The options that configure how the trade is settled." }, "returns": { "maturityTime": "The maturity time of the short.", "traderDeposit": "The amount the user deposited for this trade." } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "constructor": { "notice": "Instantiates target4." }, "openShort(uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Opens a short position." } }, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/external/HyperdriveTarget4.sol": "HyperdriveTarget4" }, "libraries": {} }, "sources": { "contracts/src/external/HyperdriveTarget4.sol": { "keccak256": "0x9af0ad4e06ec7b67b731854bfdee2224bab03bf64803ea4bd801ea71cc8fbccf", "urls": ["bzz-raw://e3deb01021351fe7adb1a7273ae483467476be845aa191a76256df5f8f168c58", "dweb:/ipfs/QmNfA2XYuzTJTc8AGbVHbX5hCvrgShb7bCaNeJvWfs5uAG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IERC20.sol": { "keccak256": "0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3", "urls": ["bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398", "dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16", "urls": ["bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240", "dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97", "urls": ["bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1", "dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd", "urls": ["bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f", "dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597", "urls": ["bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477", "dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a", "urls": ["bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3", "dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002", "urls": ["bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3", "dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191", "urls": ["bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd", "dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868", "urls": ["bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb", "dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveAdmin.sol": { "keccak256": "0xb03ab9d883c7eb223ea4d05d5d22cb30834b5589958459ff70236c0e1f571e7e", "urls": ["bzz-raw://0f33134385373cb53eed027b88befe223e70ebe77ecf19dea6ce3f2a677458d1", "dweb:/ipfs/QmWGrRr12zS1ccFzMx82zwWoJfHDZf6bdYivNF4FA3Ggd3"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveBase.sol": { "keccak256": "0x85425352d87169445470983b3ba518d759f022bdbaec6dad3bdd606a96f9b826", "urls": ["bzz-raw://453da96e4ddc453cace00c54c3bef55ab1b7f7d23c86c33e5aa09c395ee54496", "dweb:/ipfs/QmXkvqn4mEq8sw4ofFW4jKR3QCmPJTxGmKh6YWpKp5sU3w"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveCheckpoint.sol": { "keccak256": "0x04d22b2ebf166f1ae6e9645eebeeb077e6eda42c782b685b8432e899b81c7582", "urls": ["bzz-raw://47f974c18b069ab242498bf15451d1dd377ab0119d9a2f384a3bfc5ce60ff86e", "dweb:/ipfs/QmSKARBTcMuqku3Gs9YJfiCNhxZLarjNDty9tdqpYR6qXV"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLP.sol": { "keccak256": "0x90ef3178580af58520b7517024b091b7d67cc6e6e93cb46e061ba2fd7366b972", "urls": ["bzz-raw://5841dbfb9498e283d26855ca25caebfb080c8893474858acfde43ba60c0cb2ae", "dweb:/ipfs/QmRYGcn4qmjt7eYsr4oMANBignijf6oz4UFmRA679zt9YD"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLong.sol": { "keccak256": "0x7213875367ce751a20f5371d79880a2b6105bf3e20fab65044ecb9f921d17deb", "urls": ["bzz-raw://179935e894ba8c1a634b3ab16d1b3914c60218fa5dbf61e58ce54df06ac6d75e", "dweb:/ipfs/QmRif44MTY2U9b5TFAiEStZYu2TiUQUANi5VQKDvQezeKy"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveMultiToken.sol": { "keccak256": "0xa1d8f02c9a470eb0e1fd2ff6195546fe414485cd3c86b9f0ff0734db27699ab6", "urls": ["bzz-raw://54324a6775bbd1cfc643504cb9b0e53fd843f5a4d9d7c38c07526d6b3e44299d", "dweb:/ipfs/QmREvG68YXkt1EoWZL131BpnB4fWjvK6GXJpzi6msL1VzB"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveShort.sol": { "keccak256": "0x960457a35b1ac18fa27eb3524d29f8ae14cbdbad70a20c46aab62a20330eadb0", "urls": ["bzz-raw://e1f791d322e18bada00890b63c13de0d4db9e37b5583d005e44e4516b0f6eb71", "dweb:/ipfs/Qmd8Tcer76uSNah2eKA5g9MTSVGwch9HXZUYfMN7YEWeZ7"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveStorage.sol": { "keccak256": "0xfeac73551892783afcce85d23fb910baf2ad729d218756f3597ad23e3dcb077f", "urls": ["bzz-raw://1f659070705bee17efda43c36f71d22b035752f610624c59238cae559c60530d", "dweb:/ipfs/QmTEXNYSWa8w3wY2TWzDPNZXxdThMFEbrtRwcQHfyN2CJb"], "license": "Apache-2.0" }, "contracts/src/libraries/AssetId.sol": { "keccak256": "0xc2e36474285afd5b98999d648305f077a05b0e159dd63ef5f44f29cd42eb68c2", "urls": ["bzz-raw://fbf8aac982e8485dce3f8c7f85b9bbbd46b41d8d0d3deebe1fc927799de60c0b", "dweb:/ipfs/QmbUJsi5cqS4M4sVcJ8cDWvbMRSqYzfjRAp8gaP1v2dtst"], "license": "Apache-2.0" }, "contracts/src/libraries/Errors.sol": { "keccak256": "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0", "urls": ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"], "license": "Apache-2.0" }, "contracts/src/libraries/FixedPointMath.sol": { "keccak256": "0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf", "urls": ["bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d", "dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq"], "license": "Apache-2.0" }, "contracts/src/libraries/HyperdriveMath.sol": { "keccak256": "0x94662a356f9ab292c0935ff4c29f9b826a17176eb98b472efed7afbfe4d5d744", "urls": ["bzz-raw://794c5605f8f0716b871a8747fea516d26fd73f0add45a944ac4034de96c60c7a", "dweb:/ipfs/QmYSsquDzxupHSwWMsjjooxNxuzQ29ezczFsP2VQ5PYYve"], "license": "Apache-2.0" }, "contracts/src/libraries/LPMath.sol": { "keccak256": "0x8d9491ad62e48c7148389a72feca73a388076e3386d7ddc6788193be359e1266", "urls": ["bzz-raw://d340b65b76fc638d119d7d1d6f38fa044c34fc9297dc0c1627c9820218b2e244", "dweb:/ipfs/QmZo3nPVg3j2Ga8UXRZFQyTq7RuYuY6F2tYynnVUP4SbDY"], "license": "Apache-2.0" }, "contracts/src/libraries/SafeCast.sol": { "keccak256": "0x390a002b83e7ed8a99d4ca9b3ea514b2080c237911a3a3d0fa2ad4522a09d60b", "urls": ["bzz-raw://51ea972cf6d3c79ea6b93c63c85fbba2bd234e71704715a1d9bd897da9d6fcb1", "dweb:/ipfs/QmXEGDrLyeAYMZiDVNynVzRzAYgnspcdLfkMeGr81DmJpL"], "license": "Apache-2.0" }, "contracts/src/libraries/YieldSpaceMath.sol": { "keccak256": "0x76f69d3104f3f97d67289512325306d7ea2c7b29a787eeef93ffc47e8a80f346", "urls": ["bzz-raw://6c8df31a46b4287c23c67e0157e6f6a4877608ed3fb1919a9c07f5bd9b81d7f6", "dweb:/ipfs/QmPua6efzJGnC7NarnPojk9yF2geqenUaXUNRmPVHJdXWk"], "license": "Apache-2.0" }, "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": { "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236", "urls": ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"], "license": "MIT" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/external/HyperdriveTarget4.sol", "id": 3498, "exportedSymbols": { "HyperdriveAdmin": [8595], "HyperdriveCheckpoint": [9965], "HyperdriveLP": [10802], "HyperdriveLong": [11646], "HyperdriveMultiToken": [12127], "HyperdriveShort": [12979], "HyperdriveStorage": [13187], "HyperdriveTarget4": [3497], "IHyperdrive": [7411] }, "nodeType": "SourceUnit", "src": "39:2255:20", "nodes": [{ "id": 3431, "nodeType": "PragmaDirective", "src": "39:23:20", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 3433, "nodeType": "ImportDirective", "src": "64:60:20", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "../interfaces/IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 7412, "symbolAliases": [{ "foreign": { "id": 3432, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7411, "src": "73:11:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3435, "nodeType": "ImportDirective", "src": "125:66:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveAdmin.sol", "file": "../internal/HyperdriveAdmin.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 8596, "symbolAliases": [{ "foreign": { "id": 3434, "name": "HyperdriveAdmin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8595, "src": "134:15:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3437, "nodeType": "ImportDirective", "src": "192:76:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveCheckpoint.sol", "file": "../internal/HyperdriveCheckpoint.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 9966, "symbolAliases": [{ "foreign": { "id": 3436, "name": "HyperdriveCheckpoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9965, "src": "201:20:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3439, "nodeType": "ImportDirective", "src": "269:64:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLong.sol", "file": "../internal/HyperdriveLong.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 11647, "symbolAliases": [{ "foreign": { "id": 3438, "name": "HyperdriveLong", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11646, "src": "278:14:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3441, "nodeType": "ImportDirective", "src": "334:60:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLP.sol", "file": "../internal/HyperdriveLP.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 10803, "symbolAliases": [{ "foreign": { "id": 3440, "name": "HyperdriveLP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10802, "src": "343:12:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3443, "nodeType": "ImportDirective", "src": "395:76:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveMultiToken.sol", "file": "../internal/HyperdriveMultiToken.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 12128, "symbolAliases": [{ "foreign": { "id": 3442, "name": "HyperdriveMultiToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12127, "src": "404:20:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3445, "nodeType": "ImportDirective", "src": "472:66:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveShort.sol", "file": "../internal/HyperdriveShort.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 12980, "symbolAliases": [{ "foreign": { "id": 3444, "name": "HyperdriveShort", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12979, "src": "481:15:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3447, "nodeType": "ImportDirective", "src": "539:70:20", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveStorage.sol", "file": "../internal/HyperdriveStorage.sol", "nameLocation": "-1:-1:-1", "scope": 3498, "sourceUnit": 13188, "symbolAliases": [{ "foreign": { "id": 3446, "name": "HyperdriveStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13187, "src": "548:17:20", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3497, "nodeType": "ContractDefinition", "src": "931:1362:20", "nodes": [{ "id": 3471, "nodeType": "FunctionDefinition", "src": "1210:94:20", "nodes": [], "body": { "id": 3470, "nodeType": "Block", "src": "1302:2:20", "nodes": [], "statements": [] }, "documentation": { "id": 3461, "nodeType": "StructuredDocumentation", "src": "1107:98:20", "text": "@notice Instantiates target4.\n @param _config The configuration of the Hyperdrive pool." }, "implemented": true, "kind": "constructor", "modifiers": [{ "arguments": [{ "id": 3467, "name": "_config", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3464, "src": "1293:7:20", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$7215_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig memory" } }], "id": 3468, "kind": "baseConstructorSpecifier", "modifierName": { "id": 3466, "name": "HyperdriveStorage", "nameLocations": ["1275:17:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 13187, "src": "1275:17:20" }, "nodeType": "ModifierInvocation", "src": "1275:26:20" }], "name": "", "nameLocation": "-1:-1:-1", "parameters": { "id": 3465, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3464, "mutability": "mutable", "name": "_config", "nameLocation": "1261:7:20", "nodeType": "VariableDeclaration", "scope": 3471, "src": "1231:37:20", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$7215_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig" }, "typeName": { "id": 3463, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3462, "name": "IHyperdrive.PoolConfig", "nameLocations": ["1231:11:20", "1243:10:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 7215, "src": "1231:22:20" }, "referencedDeclaration": 7215, "src": "1231:22:20", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$7215_storage_ptr", "typeString": "struct IHyperdrive.PoolConfig" } }, "visibility": "internal" }], "src": "1221:53:20" }, "returnParameters": { "id": 3469, "nodeType": "ParameterList", "parameters": [], "src": "1302:0:20" }, "scope": 3497, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 3496, "nodeType": "FunctionDefinition", "src": "1950:341:20", "nodes": [], "body": { "id": 3495, "nodeType": "Block", "src": "2188:103:20", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 3489, "name": "_bondAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3474, "src": "2228:11:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 3490, "name": "_maxDeposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3476, "src": "2241:11:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 3491, "name": "_minVaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3478, "src": "2254:19:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 3492, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3481, "src": "2275:8:20", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$7271_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_struct$_Options_$7271_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" }], "id": 3488, "name": "_openShort", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12321, "src": "2217:10:20", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Options_$7271_calldata_ptr_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,struct IHyperdrive.Options calldata) returns (uint256,uint256)" } }, "id": 3493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2217:67:20", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)" } }, "functionReturnParameters": 3487, "id": 3494, "nodeType": "Return", "src": "2198:86:20" }] }, "documentation": { "id": 3472, "nodeType": "StructuredDocumentation", "src": "1330:615:20", "text": "@notice Opens a short position.\n @param _bondAmount The amount of bonds to short.\n @param _maxDeposit The most the user expects to deposit for this trade\n @param _minVaultSharePrice The minium share price at which to open the long.\n        This allows traders to protect themselves from opening a long in\n        a checkpoint where negative interest has accrued.\n @param _options The options that configure how the trade is settled.\n @return maturityTime The maturity time of the short.\n @return traderDeposit The amount the user deposited for this trade." }, "functionSelector": "dbbe8070", "implemented": true, "kind": "function", "modifiers": [], "name": "openShort", "nameLocation": "1959:9:20", "parameters": { "id": 3482, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3474, "mutability": "mutable", "name": "_bondAmount", "nameLocation": "1986:11:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "1978:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3473, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1978:7:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3476, "mutability": "mutable", "name": "_maxDeposit", "nameLocation": "2015:11:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "2007:19:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3475, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2007:7:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3478, "mutability": "mutable", "name": "_minVaultSharePrice", "nameLocation": "2044:19:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "2036:27:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3477, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2036:7:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3481, "mutability": "mutable", "name": "_options", "nameLocation": "2102:8:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "2073:37:20", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$7271_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 3480, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 3479, "name": "IHyperdrive.Options", "nameLocations": ["2073:11:20", "2085:7:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 7271, "src": "2073:19:20" }, "referencedDeclaration": 7271, "src": "2073:19:20", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$7271_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "1968:148:20" }, "returnParameters": { "id": 3487, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 3484, "mutability": "mutable", "name": "maturityTime", "nameLocation": "2151:12:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "2143:20:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3483, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2143:7:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 3486, "mutability": "mutable", "name": "traderDeposit", "nameLocation": "2173:13:20", "nodeType": "VariableDeclaration", "scope": 3496, "src": "2165:21:20", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3485, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2165:7:20", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2142:45:20" }, "scope": 3497, "stateMutability": "payable", "virtual": false, "visibility": "external" }], "abstract": true, "baseContracts": [{ "baseName": { "id": 3449, "name": "HyperdriveAdmin", "nameLocations": ["974:15:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 8595, "src": "974:15:20" }, "id": 3450, "nodeType": "InheritanceSpecifier", "src": "974:15:20" }, { "baseName": { "id": 3451, "name": "HyperdriveMultiToken", "nameLocations": ["995:20:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 12127, "src": "995:20:20" }, "id": 3452, "nodeType": "InheritanceSpecifier", "src": "995:20:20" }, { "baseName": { "id": 3453, "name": "HyperdriveLP", "nameLocations": ["1021:12:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 10802, "src": "1021:12:20" }, "id": 3454, "nodeType": "InheritanceSpecifier", "src": "1021:12:20" }, { "baseName": { "id": 3455, "name": "HyperdriveLong", "nameLocations": ["1039:14:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 11646, "src": "1039:14:20" }, "id": 3456, "nodeType": "InheritanceSpecifier", "src": "1039:14:20" }, { "baseName": { "id": 3457, "name": "HyperdriveShort", "nameLocations": ["1059:15:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 12979, "src": "1059:15:20" }, "id": 3458, "nodeType": "InheritanceSpecifier", "src": "1059:15:20" }, { "baseName": { "id": 3459, "name": "HyperdriveCheckpoint", "nameLocations": ["1080:20:20"], "nodeType": "IdentifierPath", "referencedDeclaration": 9965, "src": "1080:20:20" }, "id": 3460, "nodeType": "InheritanceSpecifier", "src": "1080:20:20" }], "canonicalName": "HyperdriveTarget4", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 3448, "nodeType": "StructuredDocumentation", "src": "611:320:20", "text": "@author DELV\n @title HyperdriveTarget4\n @notice Hyperdrive's target 4 logic contract.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance." }, "fullyImplemented": false, "linearizedBaseContracts": [3497, 9965, 12979, 11646, 10802, 12127, 8595, 9507, 13187, 67106, 7814, 8304], "name": "HyperdriveTarget4", "nameLocation": "949:17:20", "scope": 3498, "usedErrors": [7286, 7298, 7319, 7325, 7328, 7331, 7334, 7337, 7346, 7352, 7375, 7378, 7381, 67051], "usedEvents": [7691, 7703, 7717, 7727, 7741, 7755, 7769, 7783, 7795, 7801, 7805, 7809, 7813, 8287, 8295, 8303] }], "license": "Apache-2.0" }, "id": 20 };
