export const Hyperdrive = { "abi": [{ "type": "fallback", "stateMutability": "nonpayable" }, { "type": "function", "name": "PERMIT_TYPEHASH", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "addLiquidity", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "payable" }, { "type": "function", "name": "batchTransferFrom", "inputs": [{ "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint256[]", "internalType": "uint256[]" }, { "name": "", "type": "uint256[]", "internalType": "uint256[]" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "checkpoint", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "closeLong", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "closeShort", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "collectGovernanceFee", "inputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "domainSeparator", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "initialize", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "payable" }, { "type": "function", "name": "openLong", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "payable" }, { "type": "function", "name": "openShort", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "payable" }, { "type": "function", "name": "pause", "inputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "permitForAll", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }, { "name": "_approved", "type": "bool", "internalType": "bool" }, { "name": "deadline", "type": "uint256", "internalType": "uint256" }, { "name": "v", "type": "uint8", "internalType": "uint8" }, { "name": "r", "type": "bytes32", "internalType": "bytes32" }, { "name": "s", "type": "bytes32", "internalType": "bytes32" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "redeemWithdrawalShares", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "removeLiquidity", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApproval", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApprovalBridge", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApprovalForAll", "inputs": [{ "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setFeeCollector", "inputs": [{ "name": "", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setGovernance", "inputs": [{ "name": "", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setPauser", "inputs": [{ "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setSweepCollector", "inputs": [{ "name": "", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "sweep", "inputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "target0", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "target1", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "target2", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "target3", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "target4", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "transferFrom", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint256", "internalType": "uint256" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "transferFromBridge", "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint256", "internalType": "uint256" }, { "name": "", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "AddLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Approval", "inputs": [{ "name": "owner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "spender", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "ApprovalForAll", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "CloseLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CloseShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "basePayment", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CollectGovernanceFee", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "fees", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CreateCheckpoint", "inputs": [{ "name": "checkpointTime", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedShorts", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedLongs", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "FeeCollectorUpdated", "inputs": [{ "name": "newFeeCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "GovernanceUpdated", "inputs": [{ "name": "newGovernance", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Initialize", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "apr", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "baseProceeds", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "PauseStatusUpdated", "inputs": [{ "name": "isPaused", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "PauserUpdated", "inputs": [{ "name": "newPauser", "type": "address", "indexed": true, "internalType": "address" }, { "name": "status", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RedeemWithdrawalShares", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RemoveLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Sweep", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "target", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "SweepCollectorUpdated", "inputs": [{ "name": "newSweepCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "TransferSingle", "inputs": [{ "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "from", "type": "address", "indexed": true, "internalType": "address" }, { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "id", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] }, { "type": "error", "name": "UnexpectedSuccess", "inputs": [] }], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "PERMIT_TYPEHASH()": "30adf81f", "addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))": "4c2ac1d9", "batchTransferFrom(address,address,uint256[],uint256[])": "17fad7fc", "checkpoint(uint256)": "ed64bab2", "closeLong(uint256,uint256,uint256,(address,bool,bytes))": "ded06231", "closeShort(uint256,uint256,uint256,(address,bool,bytes))": "29b23fc1", "collectGovernanceFee((address,bool,bytes))": "3e691db9", "domainSeparator()": "f698da25", "initialize(uint256,uint256,(address,bool,bytes))": "77d05ff4", "openLong(uint256,uint256,uint256,(address,bool,bytes))": "cba2e58d", "openShort(uint256,uint256,uint256,(address,bool,bytes))": "dbbe8070", "pause(bool)": "02329a29", "permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)": "9032c726", "redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))": "074a6de9", "removeLiquidity(uint256,uint256,(address,bool,bytes))": "cbc13434", "setApproval(uint256,address,uint256)": "9cd241af", "setApprovalBridge(uint256,address,uint256,address)": "4ed2d6ac", "setApprovalForAll(address,bool)": "a22cb465", "setFeeCollector(address)": "a42dce80", "setGovernance(address)": "ab033ea9", "setPauser(address,bool)": "7180c8ca", "setSweepCollector(address)": "e4af29d1", "sweep(address)": "01681a62", "target0()": "21b57d53", "target1()": "eac3e799", "target2()": "a6e8a859", "target3()": "d899e112", "target4()": "f3f70707", "transferFrom(uint256,address,address,uint256)": "1c0f12b6", "transferFromBridge(uint256,address,address,uint256,address)": "e44808bc" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedSuccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Sweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"closeLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"closeShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"collectGovernanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"openLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"openShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"redeemWithdrawalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setSweepCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_maxApr\":\"The maximum APR at which the LP is willing to supply.\",\"_minApr\":\"The minimum APR at which the LP is willing to supply.\",\"_minLpSharePrice\":\"The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"_0\":\"The LP shares received by the LP.\"}},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"checkpoint(uint256)\":{\"params\":{\"_checkpointTime\":\"The time of the checkpoint to create.\"}},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of longs to close.\",\"_maturityTime\":\"The maturity time of the long.\",\"_minOutput\":\"The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"_0\":\"The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of shorts to close.\",\"_maturityTime\":\"The maturity time of the short.\",\"_minOutput\":\"The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"_0\":\"The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"collectGovernanceFee((address,bool,bytes))\":{\"params\":{\"_options\":\"The options that configure how the fees are settled.\"},\"returns\":{\"_0\":\"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"constructor\":{\"params\":{\"_config\":\"The configuration of the pool.\",\"_target0\":\"The target0 address.\",\"_target1\":\"The target1 address.\",\"_target2\":\"The target2 address.\",\"_target3\":\"The target3 address.\",\"_target4\":\"The target4 address.\"}},\"domainSeparator()\":{\"returns\":{\"_0\":\"The EIP712 domain separator.\"}},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"_0\":\"The initial number of LP shares created.\"}},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_amount\":\"The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.\",\"_minOutput\":\"The minimum number of bonds to receive.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"_0\":\"The maturity time of the bonds.\",\"_1\":\"The amount of bonds the user received.\"}},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of bonds to short.\",\"_maxDeposit\":\"The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"_0\":\"The maturity time of the short.\",\"_1\":\"The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`.\"}},\"pause(bool)\":{\"params\":{\"_status\":\"True to pause all deposits and false to unpause them.\"}},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_minOutputPerShare\":\"The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\",\"_withdrawalShares\":\"The withdrawal shares to redeem.\"},\"returns\":{\"_0\":\"The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.\",\"_1\":\"The amount of withdrawal shares that         were redeemed.\"}},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_lpShares\":\"The LP shares to burn.\",\"_minOutputPerShare\":\"The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"_0\":\"The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.\",\"_1\":\"The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"setFeeCollector(address)\":{\"params\":{\"_who\":\"The new fee collector address.\"}},\"setGovernance(address)\":{\"params\":{\"_who\":\"The new governance address.\"}},\"setPauser(address,bool)\":{\"params\":{\"status\":\"The new pauser status.\",\"who\":\"The address to change.\"}},\"setSweepCollector(address)\":{\"params\":{\"_who\":\"The new sweep collector address.\"}},\"sweep(address)\":{\"details\":\"WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.\",\"params\":{\"_target\":\"The target token to sweep.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender or the caller of the ERC20Forwarder.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}}},\"title\":\"Hyperdrive\",\"version\":1},\"userdoc\":{\"errors\":{\"UnexpectedSuccess()\":[{\"notice\":\"Thrown when a read-only call succeeds. The proxy architecture         uses a force-revert delegatecall pattern to ensure that calls         that are intended to be read-only are actually read-only.\"}]},\"events\":{\"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when an LP adds liquidity to the Hyperdrive pool.\"},\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is closed.\"},\"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is closed.\"},\"CollectGovernanceFee(address,uint256)\":{\"notice\":\"Emitted when governance fees are collected.\"},\"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a checkpoint is created.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector address is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address is updated.\"},\"Initialize(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when the Hyperdrive pool is initialized.\"},\"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is opened.\"},\"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is opened.\"},\"PauseStatusUpdated(bool)\":{\"notice\":\"Emitted when the pause status is updated.\"},\"PauserUpdated(address,bool)\":{\"notice\":\"Emitted when a pauser is updated.\"},\"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Emitted when an LP redeems withdrawal shares.\"},\"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when an LP removes liquidity from the Hyperdrive pool.\"},\"Sweep(address,address)\":{\"notice\":\"Emitted when tokens are swept.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector address is updated.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"notice\":\"The typehash used to calculate the EIP712 hash for `permitForAll`.\"},\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows LPs to supply liquidity for LP shares.\"},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"checkpoint(uint256)\":{\"notice\":\"Attempts to mint a checkpoint with the specified checkpoint time.\"},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a long position with a specified maturity time.\"},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a short position with a specified maturity time.\"},\"collectGovernanceFee((address,bool,bytes))\":{\"notice\":\"This function collects the governance fees accrued by the pool.\"},\"constructor\":{\"notice\":\"Instantiates a Hyperdrive pool.\"},\"domainSeparator()\":{\"notice\":\"Computes the EIP712 domain separator which prevents user signed         messages for this contract to be replayed in other contracts:         https://eips.ethereum.org/EIPS/eip-712.\"},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows the first LP to initialize the market with a target APR.\"},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a long position.\"},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a short position.\"},\"pause(bool)\":{\"notice\":\"Allows an authorized address to pause this contract.\"},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute the      functionality of 'approve' for all assets with the owners signature.\"},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw.\"},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows an LP to burn shares and withdraw from the pool.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"setFeeCollector(address)\":{\"notice\":\"Allows governance to transfer the fee collector role.\"},\"setGovernance(address)\":{\"notice\":\"Allows governance to transfer the governance role.\"},\"setPauser(address,bool)\":{\"notice\":\"Allows governance to change the pauser status of an address.\"},\"setSweepCollector(address)\":{\"notice\":\"Allows governance to transfer the sweep collector role.\"},\"sweep(address)\":{\"notice\":\"Transfers the contract's balance of a target token to the fee         collector address.\"},\"target0()\":{\"notice\":\"The target0 address. This is a logic contract that contains all         of the getters for the Hyperdrive pool as well as some stateful         functions.\"},\"target1()\":{\"notice\":\"The target1 address. This is a logic contract that contains         stateful functions.\"},\"target2()\":{\"notice\":\"The target2 address. This is a logic contract that contains         stateful functions.\"},\"target3()\":{\"notice\":\"The target3 address. This is a logic contract that contains         stateful functions.\"},\"target4()\":{\"notice\":\"The target4 address. This is a logic contract that contains         stateful functions.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"}},\"notice\":\"______  __                           _________      _____      ___  / / /____  ___________________________  /_________(_)__   ______      __  /_/ /__  / / /__  __ \\\\  _ \\\\_  ___/  __  /__  ___/_  /__ | / /  _ \\\\      _  __  / _  /_/ /__  /_/ /  __/  /   / /_/ / _  /   _  / __ |o000+    +000o+  ##              &&&%                              ## ++00+-    -+00++ ##                               #% ++0+      +0++ %#                               ###-:Oo.++++.oO:-###                                ##: 00++++++00 :##                    #S###########* 0++00+++00++0 *##########S#                  #S               % $ 0+++0 $ %              S#                #S   ----------   %+++++:#:+++++%-----------    S#              #S   ------------- %++++: ### :++++%------------    S#             S    ---------------%++++*\\\\ | /*++++%-------------     S           #S     --------------- %++++ ~W~ ++++%666--o UUUU o-      S#         #S?      ---------------  %+++++~+++++%&&&8 o  \\\\  /  o       ?S#        ?*????**+++;::,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,::;+++**????*?      #?+////////////////////////////////////////////////////////////////+?#    #;;;;;//////////////////////////////////////////////////////////////;;;;;#  S;;;;;;;;;//////////////////////////////////////////////////////////;;;;;;;;;S /;;;;;;;;;;;///////////////////////////////////////////////////////;;;;;;;;;;;;\\\\ |||OOOOOOOO||OOOOOOOO=========== __  ___        ===========OOOOOOOO||OOOOOOOO||| |||OOOOOOOO||OOOOOOOO===========|  \\\\[__ |   \\\\  /===========OOOOOOOO||OOOOOOOO||| |||OOOOOOOO||OOOOOOOO===========|__/[___|___ \\\\/ ===========OOOOOOOO||OOOOOOOO||| |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| |||////////000000000000\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|:::::::::::::::|////////00000000000\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\||| SSS\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\000000000000////////|:::::0x666:::::|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\00000000000//////////SSS SSS|||||||||||||||||||||||||||||:::::::::::::::||||||||||||||||||||||||||||||SSS SSSSSSSS|_______________|______________||_______________|______________|SSSSSSSS SSSSSSSS                                                                SSSSSSSS SSSSSSSS                                                                SSSSSSSSA fixed-rate AMM that mints bonds on demand for longs and shorts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/external/Hyperdrive.sol\":\"Hyperdrive\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/external/Hyperdrive.sol\":{\"keccak256\":\"0x4d166ec6a8a2e3f2cae2d0f990d1cc40965ec995130d7a7be1af2b9e390d3fd8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2185afc7935052ce78427f3ee5629d4c6d93cbffad776fb281c2b79ff2234d67\",\"dweb:/ipfs/QmT6e2H7pXG3e2BM1EoHTxzWhTwxjGu75AxNkZ4CxyEbw6\"]},\"contracts/src/external/HyperdriveTarget0.sol\":{\"keccak256\":\"0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597\",\"dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603\",\"dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6\",\"dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7\",\"dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2\",\"dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7\",\"dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d\",\"dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006\",\"dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195\",\"dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002\",\"dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f\",\"dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [], "type": "error", "name": "ReentrancyGuardReentrantCall" }, { "inputs": [], "type": "error", "name": "UnexpectedSuccess" }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "AddLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address", "indexed": true }, { "internalType": "address", "name": "spender", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Approval", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": true }, { "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }], "type": "event", "name": "ApprovalForAll", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "basePayment", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseShort", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "fees", "type": "uint256", "indexed": false }], "type": "event", "name": "CollectGovernanceFee", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "checkpointTime", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedShorts", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedLongs", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "CreateCheckpoint", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newFeeCollector", "type": "address", "indexed": true }], "type": "event", "name": "FeeCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newGovernance", "type": "address", "indexed": true }], "type": "event", "name": "GovernanceUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "apr", "type": "uint256", "indexed": false }], "type": "event", "name": "Initialize", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "baseProceeds", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenShort", "anonymous": false }, { "inputs": [{ "internalType": "bool", "name": "isPaused", "type": "bool", "indexed": false }], "type": "event", "name": "PauseStatusUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newPauser", "type": "address", "indexed": true }, { "internalType": "bool", "name": "status", "type": "bool", "indexed": false }], "type": "event", "name": "PauserUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }], "type": "event", "name": "RedeemWithdrawalShares", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "RemoveLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "address", "name": "target", "type": "address", "indexed": true }], "type": "event", "name": "Sweep", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newSweepCollector", "type": "address", "indexed": true }], "type": "event", "name": "SweepCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "address", "name": "from", "type": "address", "indexed": true }, { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "id", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "TransferSingle", "anonymous": false }, { "inputs": [], "stateMutability": "nonpayable", "type": "fallback" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "PERMIT_TYPEHASH", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "payable", "type": "function", "name": "addLiquidity", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256[]", "name": "", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "", "type": "uint256[]" }], "stateMutability": "nonpayable", "type": "function", "name": "batchTransferFrom" }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "checkpoint" }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "closeLong", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "closeShort", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "collectGovernanceFee", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "domainSeparator", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "payable", "type": "function", "name": "initialize", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "payable", "type": "function", "name": "openLong", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "payable", "type": "function", "name": "openShort", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "pause" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "bool", "name": "_approved", "type": "bool" }, { "internalType": "uint256", "name": "deadline", "type": "uint256" }, { "internalType": "uint8", "name": "v", "type": "uint8" }, { "internalType": "bytes32", "name": "r", "type": "bytes32" }, { "internalType": "bytes32", "name": "s", "type": "bytes32" }], "stateMutability": "nonpayable", "type": "function", "name": "permitForAll" }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "redeemWithdrawalShares", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "struct IHyperdrive.Options", "name": "", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "removeLiquidity", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "setApproval" }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setApprovalBridge" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "setApprovalForAll" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setFeeCollector" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setGovernance" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "setPauser" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setSweepCollector" }, { "inputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "sweep" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "target0", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "target1", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "target2", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "target3", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "target4", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "transferFrom" }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "transferFromBridge" }], "devdoc": { "kind": "dev", "methods": { "addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_contribution": "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.", "_maxApr": "The maximum APR at which the LP is willing to supply.", "_minApr": "The minimum APR at which the LP is willing to supply.", "_minLpSharePrice": "The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.", "_options": "The options that configure how the operation is settled." }, "returns": { "_0": "The LP shares received by the LP." } }, "batchTransferFrom(address,address,uint256[],uint256[])": { "params": { "from": "The source account.", "ids": "The array of token ids of the asset to transfer.", "to": "The destination account.", "values": "The amount of each token to transfer." } }, "checkpoint(uint256)": { "params": { "_checkpointTime": "The time of the checkpoint to create." } }, "closeLong(uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_bondAmount": "The amount of longs to close.", "_maturityTime": "The maturity time of the long.", "_minOutput": "The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.", "_options": "The options that configure how the trade is settled." }, "returns": { "_0": "The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`." } }, "closeShort(uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_bondAmount": "The amount of shorts to close.", "_maturityTime": "The maturity time of the short.", "_minOutput": "The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.", "_options": "The options that configure how the trade is settled." }, "returns": { "_0": "The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`." } }, "collectGovernanceFee((address,bool,bytes))": { "params": { "_options": "The options that configure how the fees are settled." }, "returns": { "_0": "The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`." } }, "constructor": { "params": { "_config": "The configuration of the pool.", "_target0": "The target0 address.", "_target1": "The target1 address.", "_target2": "The target2 address.", "_target3": "The target3 address.", "_target4": "The target4 address." } }, "domainSeparator()": { "returns": { "_0": "The EIP712 domain separator." } }, "initialize(uint256,uint256,(address,bool,bytes))": { "params": { "_apr": "The target APR.", "_contribution": "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.", "_options": "The options that configure how the operation is settled." }, "returns": { "_0": "The initial number of LP shares created." } }, "openLong(uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_amount": "The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.", "_minOutput": "The minimum number of bonds to receive.", "_minVaultSharePrice": "The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.", "_options": "The options that configure how the trade is settled." }, "returns": { "_0": "The maturity time of the bonds.", "_1": "The amount of bonds the user received." } }, "openShort(uint256,uint256,uint256,(address,bool,bytes))": { "params": { "_bondAmount": "The amount of bonds to short.", "_maxDeposit": "The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.", "_minVaultSharePrice": "The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.", "_options": "The options that configure how the trade is settled." }, "returns": { "_0": "The maturity time of the short.", "_1": "The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`." } }, "pause(bool)": { "params": { "_status": "True to pause all deposits and false to unpause them." } }, "permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)": { "details": "The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.", "params": { "_approved": "A boolean of the approval status to set to.", "deadline": "The timestamp which the signature must be submitted by        to be valid.", "owner": "The owner of the account which is having the new approval set.", "r": "The r component of the ECDSA signature.", "s": "The s component of the ECDSA signature.", "spender": "The address which will be allowed to spend owner's tokens.", "v": "Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28." } }, "redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))": { "params": { "_minOutputPerShare": "The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.", "_options": "The options that configure how the operation is settled.", "_withdrawalShares": "The withdrawal shares to redeem." }, "returns": { "_0": "The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.", "_1": "The amount of withdrawal shares that         were redeemed." } }, "removeLiquidity(uint256,uint256,(address,bool,bytes))": { "params": { "_lpShares": "The LP shares to burn.", "_minOutputPerShare": "The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.", "_options": "The options that configure how the operation is settled." }, "returns": { "_0": "The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.", "_1": "The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares." } }, "setApproval(uint256,address,uint256)": { "params": { "amount": "The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).", "operator": "The address who will be able to use the tokens.", "tokenID": "The asset to approve the use of." } }, "setApprovalBridge(uint256,address,uint256,address)": { "params": { "amount": "The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].", "caller": "The eth address which called the linking contract.", "operator": "The address who will be able to use the tokens.", "tokenID": "The asset to approve the use of." } }, "setApprovalForAll(address,bool)": { "params": { "approved": "True to approve, false to remove approval.", "operator": "The eth address which can access the caller's assets." } }, "setFeeCollector(address)": { "params": { "_who": "The new fee collector address." } }, "setGovernance(address)": { "params": { "_who": "The new governance address." } }, "setPauser(address,bool)": { "params": { "status": "The new pauser status.", "who": "The address to change." } }, "setSweepCollector(address)": { "params": { "_who": "The new sweep collector address." } }, "sweep(address)": { "details": "WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.", "params": { "_target": "The target token to sweep." } }, "transferFrom(uint256,address,address,uint256)": { "params": { "amount": "The amount of token to move.", "from": "The address whose balance will be reduced.", "to": "The address whose balance will be increased.", "tokenID": "The token identifier." } }, "transferFromBridge(uint256,address,address,uint256,address)": { "params": { "amount": "The amount of token to move.", "caller": "The msg.sender or the caller of the ERC20Forwarder.", "from": "The address whose balance will be reduced.", "to": "The address whose balance will be increased.", "tokenID": "The token identifier." } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "PERMIT_TYPEHASH()": { "notice": "The typehash used to calculate the EIP712 hash for `permitForAll`." }, "addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Allows LPs to supply liquidity for LP shares." }, "batchTransferFrom(address,address,uint256[],uint256[])": { "notice": "Transfers several assets from one account to another." }, "checkpoint(uint256)": { "notice": "Attempts to mint a checkpoint with the specified checkpoint time." }, "closeLong(uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Closes a long position with a specified maturity time." }, "closeShort(uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Closes a short position with a specified maturity time." }, "collectGovernanceFee((address,bool,bytes))": { "notice": "This function collects the governance fees accrued by the pool." }, "constructor": { "notice": "Instantiates a Hyperdrive pool." }, "domainSeparator()": { "notice": "Computes the EIP712 domain separator which prevents user signed         messages for this contract to be replayed in other contracts:         https://eips.ethereum.org/EIPS/eip-712." }, "initialize(uint256,uint256,(address,bool,bytes))": { "notice": "Allows the first LP to initialize the market with a target APR." }, "openLong(uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Opens a long position." }, "openShort(uint256,uint256,uint256,(address,bool,bytes))": { "notice": "Opens a short position." }, "pause(bool)": { "notice": "Allows an authorized address to pause this contract." }, "permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)": { "notice": "Allows a caller who is not the owner of an account to execute the      functionality of 'approve' for all assets with the owners signature." }, "redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))": { "notice": "Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw." }, "removeLiquidity(uint256,uint256,(address,bool,bytes))": { "notice": "Allows an LP to burn shares and withdraw from the pool." }, "setApproval(uint256,address,uint256)": { "notice": "Allows a user to set an approval for an individual asset with         specific amount." }, "setApprovalBridge(uint256,address,uint256,address)": { "notice": "Allows the compatibility linking contract to forward calls to         set asset approvals." }, "setApprovalForAll(address,bool)": { "notice": "Allows a user to approve an operator to use all of their assets." }, "setFeeCollector(address)": { "notice": "Allows governance to transfer the fee collector role." }, "setGovernance(address)": { "notice": "Allows governance to transfer the governance role." }, "setPauser(address,bool)": { "notice": "Allows governance to change the pauser status of an address." }, "setSweepCollector(address)": { "notice": "Allows governance to transfer the sweep collector role." }, "sweep(address)": { "notice": "Transfers the contract's balance of a target token to the fee         collector address." }, "target0()": { "notice": "The target0 address. This is a logic contract that contains all         of the getters for the Hyperdrive pool as well as some stateful         functions." }, "target1()": { "notice": "The target1 address. This is a logic contract that contains         stateful functions." }, "target2()": { "notice": "The target2 address. This is a logic contract that contains         stateful functions." }, "target3()": { "notice": "The target3 address. This is a logic contract that contains         stateful functions." }, "target4()": { "notice": "The target4 address. This is a logic contract that contains         stateful functions." }, "transferFrom(uint256,address,address,uint256)": { "notice": "Transfers an amount of assets from the source to the destination." }, "transferFromBridge(uint256,address,address,uint256,address)": { "notice": "Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge." } }, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/external/Hyperdrive.sol": "Hyperdrive" }, "libraries": {} }, "sources": { "contracts/src/external/Hyperdrive.sol": { "keccak256": "0x4d166ec6a8a2e3f2cae2d0f990d1cc40965ec995130d7a7be1af2b9e390d3fd8", "urls": ["bzz-raw://2185afc7935052ce78427f3ee5629d4c6d93cbffad776fb281c2b79ff2234d67", "dweb:/ipfs/QmT6e2H7pXG3e2BM1EoHTxzWhTwxjGu75AxNkZ4CxyEbw6"], "license": "Apache-2.0" }, "contracts/src/external/HyperdriveTarget0.sol": { "keccak256": "0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d", "urls": ["bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597", "dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ"], "license": "Apache-2.0" }, "contracts/src/interfaces/IERC20.sol": { "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9", "urls": ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952", "urls": ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e", "urls": ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0", "urls": ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55", "urls": ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501", "urls": ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb", "urls": ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca", "urls": ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0", "urls": ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveAdmin.sol": { "keccak256": "0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d", "urls": ["bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603", "dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveBase.sol": { "keccak256": "0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb", "urls": ["bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6", "dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveCheckpoint.sol": { "keccak256": "0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649", "urls": ["bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7", "dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLP.sol": { "keccak256": "0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d", "urls": ["bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2", "dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLong.sol": { "keccak256": "0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832", "urls": ["bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7", "dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveMultiToken.sol": { "keccak256": "0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373", "urls": ["bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d", "dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveShort.sol": { "keccak256": "0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5", "urls": ["bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006", "dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveStorage.sol": { "keccak256": "0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a", "urls": ["bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195", "dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N"], "license": "Apache-2.0" }, "contracts/src/libraries/AssetId.sol": { "keccak256": "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b", "urls": ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"], "license": "Apache-2.0" }, "contracts/src/libraries/Errors.sol": { "keccak256": "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0", "urls": ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"], "license": "Apache-2.0" }, "contracts/src/libraries/FixedPointMath.sol": { "keccak256": "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076", "urls": ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"], "license": "Apache-2.0" }, "contracts/src/libraries/HyperdriveMath.sol": { "keccak256": "0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab", "urls": ["bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002", "dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY"], "license": "Apache-2.0" }, "contracts/src/libraries/LPMath.sol": { "keccak256": "0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067", "urls": ["bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f", "dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ"], "license": "Apache-2.0" }, "contracts/src/libraries/SafeCast.sol": { "keccak256": "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148", "urls": ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"], "license": "Apache-2.0" }, "contracts/src/libraries/YieldSpaceMath.sol": { "keccak256": "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891", "urls": ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"], "license": "Apache-2.0" }, "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": { "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7", "urls": ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80", "urls": ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": { "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70", "urls": ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": { "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2", "urls": ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": { "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff", "urls": ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": { "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386", "urls": ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Address.sol": { "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721", "urls": ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Context.sol": { "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2", "urls": ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": { "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236", "urls": ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"], "license": "MIT" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/external/Hyperdrive.sol", "id": 4610, "exportedSymbols": { "Hyperdrive": [4609], "HyperdriveAdmin": [13205], "HyperdriveBase": [14381], "HyperdriveCheckpoint": [14845], "HyperdriveLP": [15747], "HyperdriveLong": [16681], "HyperdriveShort": [18151], "HyperdriveStorage": [18367], "HyperdriveTarget0": [5409], "IERC20": [10358], "IHyperdrive": [11076], "IHyperdriveCore": [11265], "IMultiTokenCore": [12131] }, "nodeType": "SourceUnit", "src": "39:14646:36", "nodes": [{ "id": 3995, "nodeType": "PragmaDirective", "src": "39:23:36", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 3997, "nodeType": "ImportDirective", "src": "64:50:36", "nodes": [], "absolutePath": "contracts/src/interfaces/IERC20.sol", "file": "../interfaces/IERC20.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 10359, "symbolAliases": [{ "foreign": { "id": 3996, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10358, "src": "73:6:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 3999, "nodeType": "ImportDirective", "src": "115:70:36", "nodes": [], "absolutePath": "contracts/src/external/HyperdriveTarget0.sol", "file": "../external/HyperdriveTarget0.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 5410, "symbolAliases": [{ "foreign": { "id": 3998, "name": "HyperdriveTarget0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5409, "src": "124:17:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4001, "nodeType": "ImportDirective", "src": "186:60:36", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "../interfaces/IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 11077, "symbolAliases": [{ "foreign": { "id": 4000, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "195:11:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4003, "nodeType": "ImportDirective", "src": "247:68:36", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdriveCore.sol", "file": "../interfaces/IHyperdriveCore.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 11266, "symbolAliases": [{ "foreign": { "id": 4002, "name": "IHyperdriveCore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11265, "src": "256:15:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4005, "nodeType": "ImportDirective", "src": "316:68:36", "nodes": [], "absolutePath": "contracts/src/interfaces/IMultiTokenCore.sol", "file": "../interfaces/IMultiTokenCore.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 12132, "symbolAliases": [{ "foreign": { "id": 4004, "name": "IMultiTokenCore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12131, "src": "325:15:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4007, "nodeType": "ImportDirective", "src": "385:66:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveAdmin.sol", "file": "../internal/HyperdriveAdmin.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 13206, "symbolAliases": [{ "foreign": { "id": 4006, "name": "HyperdriveAdmin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13205, "src": "394:15:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4009, "nodeType": "ImportDirective", "src": "452:64:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveBase.sol", "file": "../internal/HyperdriveBase.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 14382, "symbolAliases": [{ "foreign": { "id": 4008, "name": "HyperdriveBase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14381, "src": "461:14:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4011, "nodeType": "ImportDirective", "src": "517:76:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveCheckpoint.sol", "file": "../internal/HyperdriveCheckpoint.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 14846, "symbolAliases": [{ "foreign": { "id": 4010, "name": "HyperdriveCheckpoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14845, "src": "526:20:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4013, "nodeType": "ImportDirective", "src": "594:64:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLong.sol", "file": "../internal/HyperdriveLong.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 16682, "symbolAliases": [{ "foreign": { "id": 4012, "name": "HyperdriveLong", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16681, "src": "603:14:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4015, "nodeType": "ImportDirective", "src": "659:60:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLP.sol", "file": "../internal/HyperdriveLP.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 15748, "symbolAliases": [{ "foreign": { "id": 4014, "name": "HyperdriveLP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15747, "src": "668:12:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4017, "nodeType": "ImportDirective", "src": "720:66:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveShort.sol", "file": "../internal/HyperdriveShort.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 18152, "symbolAliases": [{ "foreign": { "id": 4016, "name": "HyperdriveShort", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18151, "src": "729:15:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4019, "nodeType": "ImportDirective", "src": "787:70:36", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveStorage.sol", "file": "../internal/HyperdriveStorage.sol", "nameLocation": "-1:-1:-1", "scope": 4610, "sourceUnit": 18368, "symbolAliases": [{ "foreign": { "id": 4018, "name": "HyperdriveStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18367, "src": "796:17:36", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4609, "nodeType": "ContractDefinition", "src": "4149:10535:36", "nodes": [{ "id": 4035, "nodeType": "VariableDeclaration", "src": "4500:32:36", "nodes": [], "constant": false, "documentation": { "id": 4033, "nodeType": "StructuredDocumentation", "src": "4313:182:36", "text": "@notice The target0 address. This is a logic contract that contains all\n         of the getters for the Hyperdrive pool as well as some stateful\n         functions." }, "functionSelector": "21b57d53", "mutability": "immutable", "name": "target0", "nameLocation": "4525:7:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4034, "name": "address", "nodeType": "ElementaryTypeName", "src": "4500:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "public" }, { "id": 4038, "nodeType": "VariableDeclaration", "src": "4651:32:36", "nodes": [], "constant": false, "documentation": { "id": 4036, "nodeType": "StructuredDocumentation", "src": "4539:107:36", "text": "@notice The target1 address. This is a logic contract that contains\n         stateful functions." }, "functionSelector": "eac3e799", "mutability": "immutable", "name": "target1", "nameLocation": "4676:7:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4037, "name": "address", "nodeType": "ElementaryTypeName", "src": "4651:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "public" }, { "id": 4041, "nodeType": "VariableDeclaration", "src": "4802:32:36", "nodes": [], "constant": false, "documentation": { "id": 4039, "nodeType": "StructuredDocumentation", "src": "4690:107:36", "text": "@notice The target2 address. This is a logic contract that contains\n         stateful functions." }, "functionSelector": "a6e8a859", "mutability": "immutable", "name": "target2", "nameLocation": "4827:7:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4040, "name": "address", "nodeType": "ElementaryTypeName", "src": "4802:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "public" }, { "id": 4044, "nodeType": "VariableDeclaration", "src": "4953:32:36", "nodes": [], "constant": false, "documentation": { "id": 4042, "nodeType": "StructuredDocumentation", "src": "4841:107:36", "text": "@notice The target3 address. This is a logic contract that contains\n         stateful functions." }, "functionSelector": "d899e112", "mutability": "immutable", "name": "target3", "nameLocation": "4978:7:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4043, "name": "address", "nodeType": "ElementaryTypeName", "src": "4953:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "public" }, { "id": 4047, "nodeType": "VariableDeclaration", "src": "5104:32:36", "nodes": [], "constant": false, "documentation": { "id": 4045, "nodeType": "StructuredDocumentation", "src": "4992:107:36", "text": "@notice The target4 address. This is a logic contract that contains\n         stateful functions." }, "functionSelector": "f3f70707", "mutability": "immutable", "name": "target4", "nameLocation": "5129:7:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4046, "name": "address", "nodeType": "ElementaryTypeName", "src": "5104:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "public" }, { "id": 4053, "nodeType": "VariableDeclaration", "src": "5226:174:36", "nodes": [], "constant": true, "documentation": { "id": 4048, "nodeType": "StructuredDocumentation", "src": "5143:78:36", "text": "@notice The typehash used to calculate the EIP712 hash for `permitForAll`." }, "functionSelector": "30adf81f", "mutability": "constant", "name": "PERMIT_TYPEHASH", "nameLocation": "5250:15:36", "scope": 4609, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4049, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5226:7:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "value": { "arguments": [{ "hexValue": "5065726d6974466f72416c6c2861646472657373206f776e65722c61646472657373207370656e6465722c626f6f6c205f617070726f7665642c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529", "id": 4051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5299:91:36", "typeDescriptions": { "typeIdentifier": "t_stringliteral_65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e973673", "typeString": "literal_string \"PermitForAll(address owner,address spender,bool _approved,uint256 nonce,uint256 deadline)\"" }, "value": "PermitForAll(address owner,address spender,bool _approved,uint256 nonce,uint256 deadline)" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e973673", "typeString": "literal_string \"PermitForAll(address owner,address spender,bool _approved,uint256 nonce,uint256 deadline)\"" }], "id": 4050, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "5276:9:36", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 4052, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5276:124:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "public" }, { "id": 4094, "nodeType": "FunctionDefinition", "src": "5734:413:36", "nodes": [], "body": { "id": 4093, "nodeType": "Block", "src": "5956:191:36", "nodes": [], "statements": [{ "expression": { "id": 4075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4073, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "6010:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4074, "name": "_target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4059, "src": "6020:8:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6010:18:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4076, "nodeType": "ExpressionStatement", "src": "6010:18:36" }, { "expression": { "id": 4079, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4077, "name": "target1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4038, "src": "6038:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4078, "name": "_target1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4061, "src": "6048:8:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6038:18:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4080, "nodeType": "ExpressionStatement", "src": "6038:18:36" }, { "expression": { "id": 4083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4081, "name": "target2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4041, "src": "6066:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4082, "name": "_target2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4063, "src": "6076:8:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6066:18:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4084, "nodeType": "ExpressionStatement", "src": "6066:18:36" }, { "expression": { "id": 4087, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4085, "name": "target3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4044, "src": "6094:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4086, "name": "_target3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4065, "src": "6104:8:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6094:18:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4088, "nodeType": "ExpressionStatement", "src": "6094:18:36" }, { "expression": { "id": 4091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4089, "name": "target4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4047, "src": "6122:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4090, "name": "_target4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4067, "src": "6132:8:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "6122:18:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4092, "nodeType": "ExpressionStatement", "src": "6122:18:36" }] }, "documentation": { "id": 4054, "nodeType": "StructuredDocumentation", "src": "5407:322:36", "text": "@notice Instantiates a Hyperdrive pool.\n @param _config The configuration of the pool.\n @param _target0 The target0 address.\n @param _target1 The target1 address.\n @param _target2 The target2 address.\n @param _target3 The target3 address.\n @param _target4 The target4 address." }, "implemented": true, "kind": "constructor", "modifiers": [{ "arguments": [{ "id": 4070, "name": "_config", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4057, "src": "5947:7:36", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig memory" } }], "id": 4071, "kind": "baseConstructorSpecifier", "modifierName": { "id": 4069, "name": "HyperdriveStorage", "nameLocations": ["5929:17:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 18367, "src": "5929:17:36" }, "nodeType": "ModifierInvocation", "src": "5929:26:36" }], "name": "", "nameLocation": "-1:-1:-1", "parameters": { "id": 4068, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4057, "mutability": "mutable", "name": "_config", "nameLocation": "5785:7:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5755:37:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig" }, "typeName": { "id": 4056, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4055, "name": "IHyperdrive.PoolConfig", "nameLocations": ["5755:11:36", "5767:10:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10867, "src": "5755:22:36" }, "referencedDeclaration": 10867, "src": "5755:22:36", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_storage_ptr", "typeString": "struct IHyperdrive.PoolConfig" } }, "visibility": "internal" }, { "constant": false, "id": 4059, "mutability": "mutable", "name": "_target0", "nameLocation": "5810:8:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5802:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4058, "name": "address", "nodeType": "ElementaryTypeName", "src": "5802:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4061, "mutability": "mutable", "name": "_target1", "nameLocation": "5836:8:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5828:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4060, "name": "address", "nodeType": "ElementaryTypeName", "src": "5828:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4063, "mutability": "mutable", "name": "_target2", "nameLocation": "5862:8:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5854:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4062, "name": "address", "nodeType": "ElementaryTypeName", "src": "5854:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4065, "mutability": "mutable", "name": "_target3", "nameLocation": "5888:8:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5880:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4064, "name": "address", "nodeType": "ElementaryTypeName", "src": "5880:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4067, "mutability": "mutable", "name": "_target4", "nameLocation": "5914:8:36", "nodeType": "VariableDeclaration", "scope": 4094, "src": "5906:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4066, "name": "address", "nodeType": "ElementaryTypeName", "src": "5906:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5745:183:36" }, "returnParameters": { "id": 4072, "nodeType": "ParameterList", "parameters": [], "src": "5956:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 4148, "nodeType": "FunctionDefinition", "src": "6481:940:36", "nodes": [], "body": { "id": 4147, "nodeType": "Block", "src": "6544:877:36", "nodes": [], "statements": [{ "assignments": [4103, 4105], "declarations": [{ "constant": false, "id": 4103, "mutability": "mutable", "name": "success", "nameLocation": "6689:7:36", "nodeType": "VariableDeclaration", "scope": 4147, "src": "6684:12:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4102, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6684:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 4105, "mutability": "mutable", "name": "returndata", "nameLocation": "6711:10:36", "nodeType": "VariableDeclaration", "scope": 4147, "src": "6698:23:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 4104, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6698:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "id": 4110, "initialValue": { "arguments": [{ "id": 4108, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4097, "src": "6746:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" }], "expression": { "id": 4106, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "6725:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6733:12:36", "memberName": "delegatecall", "nodeType": "MemberAccess", "src": "6725:20:36", "typeDescriptions": { "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) returns (bool,bytes memory)" } }, "id": 4109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6725:27:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "nodeType": "VariableDeclarationStatement", "src": "6683:69:36" }, { "condition": { "id": 4111, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4103, "src": "6766:7:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 4118, "nodeType": "IfStatement", "src": "6762:76:36", "trueBody": { "id": 4117, "nodeType": "Block", "src": "6775:63:36", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 4112, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "6796:11:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 4114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6808:17:36", "memberName": "UnexpectedSuccess", "nodeType": "MemberAccess", "referencedDeclaration": 11027, "src": "6796:29:36", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 4115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6796:31:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4116, "nodeType": "RevertStatement", "src": "6789:38:36" }] } }, { "assignments": [4120], "declarations": [{ "constant": false, "id": 4120, "mutability": "mutable", "name": "selector", "nameLocation": "6854:8:36", "nodeType": "VariableDeclaration", "scope": 4147, "src": "6847:15:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "typeName": { "id": 4119, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "6847:6:36", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "visibility": "internal" }], "id": 4125, "initialValue": { "arguments": [{ "id": 4123, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4105, "src": "6872:10:36", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4122, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6865:6:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)" }, "typeName": { "id": 4121, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "6865:6:36", "typeDescriptions": {} } }, "id": 4124, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6865:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "VariableDeclarationStatement", "src": "6847:36:36" }, { "condition": { "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }, "id": 4130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 4126, "name": "selector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4120, "src": "6897:8:36", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "expression": { "expression": { "id": 4127, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "6909:11:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 4128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6921:10:36", "memberName": "ReturnData", "nodeType": "MemberAccess", "referencedDeclaration": 11012, "src": "6909:22:36", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 4129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6932:8:36", "memberName": "selector", "nodeType": "MemberAccess", "src": "6909:31:36", "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" } }, "src": "6897:43:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 4133, "nodeType": "IfStatement", "src": "6893:160:36", "trueBody": { "id": 4132, "nodeType": "Block", "src": "6942:111:36", "statements": [{ "AST": { "nodeType": "YulBlock", "src": "6965:78:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "6994:10:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7006:2:36", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6990:3:36" }, "nodeType": "YulFunctionCall", "src": "6990:19:36" }, { "arguments": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "7017:10:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "7011:5:36" }, "nodeType": "YulFunctionCall", "src": "7011:17:36" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "6983:6:36" }, "nodeType": "YulFunctionCall", "src": "6983:46:36" }, "nodeType": "YulExpressionStatement", "src": "6983:46:36" }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4105, "isOffset": false, "isSlot": false, "src": "6994:10:36", "valueSize": 1 }, { "declaration": 4105, "isOffset": false, "isSlot": false, "src": "7017:10:36", "valueSize": 1 }], "id": 4131, "nodeType": "InlineAssembly", "src": "6956:87:36" }] } }, { "AST": { "nodeType": "YulBlock", "src": "7207:126:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "7232:10:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7244:3:36", "type": "", "value": "0x4" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7228:3:36" }, "nodeType": "YulFunctionCall", "src": "7228:20:36" }, { "arguments": [{ "arguments": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "7260:10:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "7254:5:36" }, "nodeType": "YulFunctionCall", "src": "7254:17:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7273:1:36", "type": "", "value": "4" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7250:3:36" }, "nodeType": "YulFunctionCall", "src": "7250:25:36" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7221:6:36" }, "nodeType": "YulFunctionCall", "src": "7221:55:36" }, "nodeType": "YulExpressionStatement", "src": "7221:55:36" }, { "nodeType": "YulAssignment", "src": "7289:34:36", "value": { "arguments": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "7307:10:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7319:3:36", "type": "", "value": "0x4" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7303:3:36" }, "nodeType": "YulFunctionCall", "src": "7303:20:36" }, "variableNames": [{ "name": "returndata", "nodeType": "YulIdentifier", "src": "7289:10:36" }] }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4105, "isOffset": false, "isSlot": false, "src": "7232:10:36", "valueSize": 1 }, { "declaration": 4105, "isOffset": false, "isSlot": false, "src": "7260:10:36", "valueSize": 1 }, { "declaration": 4105, "isOffset": false, "isSlot": false, "src": "7289:10:36", "valueSize": 1 }, { "declaration": 4105, "isOffset": false, "isSlot": false, "src": "7307:10:36", "valueSize": 1 }], "id": 4134, "nodeType": "InlineAssembly", "src": "7198:135:36" }, { "expression": { "id": 4143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 4135, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4105, "src": "7342:10:36", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "id": 4138, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4105, "src": "7366:10:36", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, { "components": [{ "id": 4140, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7379:5:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 4139, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7379:5:36", "typeDescriptions": {} } }], "id": 4141, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7378:7:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }, { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }], "expression": { "id": 4136, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "7355:3:36", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4137, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "7359:6:36", "memberName": "decode", "nodeType": "MemberAccess", "src": "7355:10:36", "typeDescriptions": { "typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 4142, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7355:31:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "src": "7342:44:36", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4144, "nodeType": "ExpressionStatement", "src": "7342:44:36" }, { "expression": { "id": 4145, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4105, "src": "7404:10:36", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "functionReturnParameters": 4101, "id": 4146, "nodeType": "Return", "src": "7397:17:36" }] }, "documentation": { "id": 4095, "nodeType": "StructuredDocumentation", "src": "6153:323:36", "text": "@notice If we get to the fallback function, we make a read-only\n         delegatecall to the target0 contract. This target contains all\n         of the getters for the Hyperdrive pool.\n @param _data The data to be passed to the data provider.\n @return The return data from the data provider." }, "implemented": true, "kind": "fallback", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "parameters": { "id": 4098, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4097, "mutability": "mutable", "name": "_data", "nameLocation": "6505:5:36", "nodeType": "VariableDeclaration", "scope": 4148, "src": "6490:20:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" }, "typeName": { "id": 4096, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6490:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "6489:22:36" }, "returnParameters": { "id": 4101, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4100, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4148, "src": "6530:12:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 4099, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6530:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "6529:14:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4170, "nodeType": "FunctionDefinition", "src": "7482:192:36", "nodes": [], "body": { "id": 4169, "nodeType": "Block", "src": "7639:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4166, "name": "target3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4044, "src": "7659:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4165, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "7649:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7649:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4168, "nodeType": "ExpressionStatement", "src": "7649:18:36" }] }, "baseFunctions": [11103], "documentation": { "id": 4149, "nodeType": "StructuredDocumentation", "src": "7446:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "cba2e58d", "implemented": true, "kind": "function", "modifiers": [], "name": "openLong", "nameLocation": "7491:8:36", "parameters": { "id": 4159, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4151, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7509:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4150, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7509:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4153, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7526:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4152, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7526:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4155, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7543:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4154, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7543:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4158, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7560:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4157, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4156, "name": "IHyperdrive.Options", "nameLocations": ["7560:11:36", "7572:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "7560:19:36" }, "referencedDeclaration": 10923, "src": "7560:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "7499:95:36" }, "returnParameters": { "id": 4164, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4161, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7621:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4160, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7621:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4163, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4170, "src": "7630:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4162, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7630:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "7620:18:36" }, "scope": 4609, "stateMutability": "payable", "virtual": false, "visibility": "external" }, { "id": 4190, "nodeType": "FunctionDefinition", "src": "7716:176:36", "nodes": [], "body": { "id": 4189, "nodeType": "Block", "src": "7857:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4186, "name": "target2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4041, "src": "7877:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4185, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "7867:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7867:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4188, "nodeType": "ExpressionStatement", "src": "7867:18:36" }] }, "baseFunctions": [11118], "documentation": { "id": 4171, "nodeType": "StructuredDocumentation", "src": "7680:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "ded06231", "implemented": true, "kind": "function", "modifiers": [], "name": "closeLong", "nameLocation": "7725:9:36", "parameters": { "id": 4181, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4173, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4190, "src": "7744:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4172, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7744:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4175, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4190, "src": "7761:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4174, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7761:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4177, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4190, "src": "7778:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7778:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4180, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4190, "src": "7795:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4179, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4178, "name": "IHyperdrive.Options", "nameLocations": ["7795:11:36", "7807:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "7795:19:36" }, "referencedDeclaration": 10923, "src": "7795:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "7734:95:36" }, "returnParameters": { "id": 4184, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4183, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4190, "src": "7848:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4182, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7848:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "7847:9:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4212, "nodeType": "FunctionDefinition", "src": "7954:193:36", "nodes": [], "body": { "id": 4211, "nodeType": "Block", "src": "8112:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4208, "name": "target4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4047, "src": "8132:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4207, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "8122:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8122:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4210, "nodeType": "ExpressionStatement", "src": "8122:18:36" }] }, "baseFunctions": [11135], "documentation": { "id": 4191, "nodeType": "StructuredDocumentation", "src": "7918:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "dbbe8070", "implemented": true, "kind": "function", "modifiers": [], "name": "openShort", "nameLocation": "7963:9:36", "parameters": { "id": 4201, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4193, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "7982:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7982:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4195, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "7999:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4194, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7999:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4197, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "8016:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4196, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8016:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4200, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "8033:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4199, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4198, "name": "IHyperdrive.Options", "nameLocations": ["8033:11:36", "8045:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "8033:19:36" }, "referencedDeclaration": 10923, "src": "8033:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "7972:95:36" }, "returnParameters": { "id": 4206, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4203, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "8094:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8094:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4205, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4212, "src": "8103:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4204, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8103:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8093:18:36" }, "scope": 4609, "stateMutability": "payable", "virtual": false, "visibility": "external" }, { "id": 4232, "nodeType": "FunctionDefinition", "src": "8189:177:36", "nodes": [], "body": { "id": 4231, "nodeType": "Block", "src": "8331:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4228, "name": "target2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4041, "src": "8351:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4227, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "8341:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4229, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8341:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4230, "nodeType": "ExpressionStatement", "src": "8341:18:36" }] }, "baseFunctions": [11150], "documentation": { "id": 4213, "nodeType": "StructuredDocumentation", "src": "8153:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "29b23fc1", "implemented": true, "kind": "function", "modifiers": [], "name": "closeShort", "nameLocation": "8198:10:36", "parameters": { "id": 4223, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4215, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4232, "src": "8218:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8218:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4217, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4232, "src": "8235:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4216, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8235:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4219, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4232, "src": "8252:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4218, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8252:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4222, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4232, "src": "8269:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4221, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4220, "name": "IHyperdrive.Options", "nameLocations": ["8269:11:36", "8281:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "8269:19:36" }, "referencedDeclaration": 10923, "src": "8269:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "8208:95:36" }, "returnParameters": { "id": 4226, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4225, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4232, "src": "8322:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4224, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8322:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8321:9:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4250, "nodeType": "FunctionDefinition", "src": "8425:168:36", "nodes": [], "body": { "id": 4249, "nodeType": "Block", "src": "8558:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4246, "name": "target3", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4044, "src": "8578:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4245, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "8568:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8568:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4248, "nodeType": "ExpressionStatement", "src": "8568:18:36" }] }, "baseFunctions": [11163], "documentation": { "id": 4233, "nodeType": "StructuredDocumentation", "src": "8389:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "77d05ff4", "implemented": true, "kind": "function", "modifiers": [], "name": "initialize", "nameLocation": "8434:10:36", "parameters": { "id": 4241, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4235, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4250, "src": "8454:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4234, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8454:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4237, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4250, "src": "8471:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8471:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4240, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4250, "src": "8488:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4239, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4238, "name": "IHyperdrive.Options", "nameLocations": ["8488:11:36", "8500:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "8488:19:36" }, "referencedDeclaration": 10923, "src": "8488:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "8444:78:36" }, "returnParameters": { "id": 4244, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4243, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4250, "src": "8549:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4242, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8549:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8548:9:36" }, "scope": 4609, "stateMutability": "payable", "virtual": false, "visibility": "external" }, { "id": 4272, "nodeType": "FunctionDefinition", "src": "8635:204:36", "nodes": [], "body": { "id": 4271, "nodeType": "Block", "src": "8804:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4268, "name": "target1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4038, "src": "8824:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4267, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "8814:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8814:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4270, "nodeType": "ExpressionStatement", "src": "8814:18:36" }] }, "baseFunctions": [11180], "documentation": { "id": 4251, "nodeType": "StructuredDocumentation", "src": "8599:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "4c2ac1d9", "implemented": true, "kind": "function", "modifiers": [], "name": "addLiquidity", "nameLocation": "8644:12:36", "parameters": { "id": 4263, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4253, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8666:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4252, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8666:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4255, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8683:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4254, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8683:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4257, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8700:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4256, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8700:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4259, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8717:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4258, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8717:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4262, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8734:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4261, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4260, "name": "IHyperdrive.Options", "nameLocations": ["8734:11:36", "8746:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "8734:19:36" }, "referencedDeclaration": 10923, "src": "8734:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "8656:112:36" }, "returnParameters": { "id": 4266, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4265, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4272, "src": "8795:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8795:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "8794:9:36" }, "scope": 4609, "stateMutability": "payable", "virtual": false, "visibility": "external" }, { "id": 4292, "nodeType": "FunctionDefinition", "src": "8881:174:36", "nodes": [], "body": { "id": 4291, "nodeType": "Block", "src": "9020:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4288, "name": "target1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4038, "src": "9040:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4287, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9030:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9030:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4290, "nodeType": "ExpressionStatement", "src": "9030:18:36" }] }, "baseFunctions": [11195], "documentation": { "id": 4273, "nodeType": "StructuredDocumentation", "src": "8845:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "cbc13434", "implemented": true, "kind": "function", "modifiers": [], "name": "removeLiquidity", "nameLocation": "8890:15:36", "parameters": { "id": 4281, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4275, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4292, "src": "8915:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8915:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4277, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4292, "src": "8932:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4276, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8932:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4280, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4292, "src": "8949:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4279, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4278, "name": "IHyperdrive.Options", "nameLocations": ["8949:11:36", "8961:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "8949:19:36" }, "referencedDeclaration": 10923, "src": "8949:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "8905:78:36" }, "returnParameters": { "id": 4286, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4283, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4292, "src": "9002:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9002:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4285, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4292, "src": "9011:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9011:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9001:18:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4312, "nodeType": "FunctionDefinition", "src": "9097:181:36", "nodes": [], "body": { "id": 4311, "nodeType": "Block", "src": "9243:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4308, "name": "target1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4038, "src": "9263:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4307, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9253:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9253:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4310, "nodeType": "ExpressionStatement", "src": "9253:18:36" }] }, "baseFunctions": [11210], "documentation": { "id": 4293, "nodeType": "StructuredDocumentation", "src": "9061:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "074a6de9", "implemented": true, "kind": "function", "modifiers": [], "name": "redeemWithdrawalShares", "nameLocation": "9106:22:36", "parameters": { "id": 4301, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4295, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4312, "src": "9138:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4294, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9138:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4297, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4312, "src": "9155:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9155:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4300, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4312, "src": "9172:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4299, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4298, "name": "IHyperdrive.Options", "nameLocations": ["9172:11:36", "9184:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "9172:19:36" }, "referencedDeclaration": 10923, "src": "9172:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "9128:78:36" }, "returnParameters": { "id": 4306, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4303, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4312, "src": "9225:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9225:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4305, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4312, "src": "9234:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4304, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9234:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9224:18:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4323, "nodeType": "FunctionDefinition", "src": "9345:73:36", "nodes": [], "body": { "id": 4322, "nodeType": "Block", "src": "9383:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4319, "name": "target4", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4047, "src": "9403:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4318, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9393:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9393:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4321, "nodeType": "ExpressionStatement", "src": "9393:18:36" }] }, "baseFunctions": [11216], "documentation": { "id": 4313, "nodeType": "StructuredDocumentation", "src": "9309:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "ed64bab2", "implemented": true, "kind": "function", "modifiers": [], "name": "checkpoint", "nameLocation": "9354:10:36", "parameters": { "id": 4316, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4315, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4323, "src": "9365:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4314, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9365:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9364:9:36" }, "returnParameters": { "id": 4317, "nodeType": "ParameterList", "parameters": [], "src": "9383:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4337, "nodeType": "FunctionDefinition", "src": "9479:136:36", "nodes": [], "body": { "id": 4336, "nodeType": "Block", "src": "9580:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4333, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "9600:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4332, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9590:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9590:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4335, "nodeType": "ExpressionStatement", "src": "9590:18:36" }] }, "baseFunctions": [11225], "documentation": { "id": 4324, "nodeType": "StructuredDocumentation", "src": "9443:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "3e691db9", "implemented": true, "kind": "function", "modifiers": [], "name": "collectGovernanceFee", "nameLocation": "9488:20:36", "parameters": { "id": 4328, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4327, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4337, "src": "9518:28:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4326, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4325, "name": "IHyperdrive.Options", "nameLocations": ["9518:11:36", "9530:7:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "9518:19:36" }, "referencedDeclaration": 10923, "src": "9518:19:36", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "9508:44:36" }, "returnParameters": { "id": 4331, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4330, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4337, "src": "9571:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4329, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9571:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9570:9:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4348, "nodeType": "FunctionDefinition", "src": "9657:65:36", "nodes": [], "body": { "id": 4347, "nodeType": "Block", "src": "9687:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4344, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "9707:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4343, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9697:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9697:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4346, "nodeType": "ExpressionStatement", "src": "9697:18:36" }] }, "baseFunctions": [11231], "documentation": { "id": 4338, "nodeType": "StructuredDocumentation", "src": "9621:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "02329a29", "implemented": true, "kind": "function", "modifiers": [], "name": "pause", "nameLocation": "9666:5:36", "parameters": { "id": 4341, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4340, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4348, "src": "9672:4:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4339, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9672:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "9671:6:36" }, "returnParameters": { "id": 4342, "nodeType": "ParameterList", "parameters": [], "src": "9687:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4359, "nodeType": "FunctionDefinition", "src": "9764:78:36", "nodes": [], "body": { "id": 4358, "nodeType": "Block", "src": "9807:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4355, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "9827:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4354, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9817:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9817:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4357, "nodeType": "ExpressionStatement", "src": "9817:18:36" }] }, "baseFunctions": [11237], "documentation": { "id": 4349, "nodeType": "StructuredDocumentation", "src": "9728:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "a42dce80", "implemented": true, "kind": "function", "modifiers": [], "name": "setFeeCollector", "nameLocation": "9773:15:36", "parameters": { "id": 4352, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4351, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4359, "src": "9789:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4350, "name": "address", "nodeType": "ElementaryTypeName", "src": "9789:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "9788:9:36" }, "returnParameters": { "id": 4353, "nodeType": "ParameterList", "parameters": [], "src": "9807:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4370, "nodeType": "FunctionDefinition", "src": "9884:80:36", "nodes": [], "body": { "id": 4369, "nodeType": "Block", "src": "9929:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4366, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "9949:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4365, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "9939:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4367, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9939:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4368, "nodeType": "ExpressionStatement", "src": "9939:18:36" }] }, "baseFunctions": [11243], "documentation": { "id": 4360, "nodeType": "StructuredDocumentation", "src": "9848:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "e4af29d1", "implemented": true, "kind": "function", "modifiers": [], "name": "setSweepCollector", "nameLocation": "9893:17:36", "parameters": { "id": 4363, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4362, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4370, "src": "9911:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4361, "name": "address", "nodeType": "ElementaryTypeName", "src": "9911:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "9910:9:36" }, "returnParameters": { "id": 4364, "nodeType": "ParameterList", "parameters": [], "src": "9929:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4381, "nodeType": "FunctionDefinition", "src": "10006:76:36", "nodes": [], "body": { "id": 4380, "nodeType": "Block", "src": "10047:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4377, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10067:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4376, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10057:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4378, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10057:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4379, "nodeType": "ExpressionStatement", "src": "10057:18:36" }] }, "baseFunctions": [11249], "documentation": { "id": 4371, "nodeType": "StructuredDocumentation", "src": "9970:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "ab033ea9", "implemented": true, "kind": "function", "modifiers": [], "name": "setGovernance", "nameLocation": "10015:13:36", "parameters": { "id": 4374, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4373, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4381, "src": "10029:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4372, "name": "address", "nodeType": "ElementaryTypeName", "src": "10029:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "10028:9:36" }, "returnParameters": { "id": 4375, "nodeType": "ParameterList", "parameters": [], "src": "10047:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4394, "nodeType": "FunctionDefinition", "src": "10124:78:36", "nodes": [], "body": { "id": 4393, "nodeType": "Block", "src": "10167:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4390, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10187:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4389, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10177:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10177:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4392, "nodeType": "ExpressionStatement", "src": "10177:18:36" }] }, "baseFunctions": [11257], "documentation": { "id": 4382, "nodeType": "StructuredDocumentation", "src": "10088:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "7180c8ca", "implemented": true, "kind": "function", "modifiers": [], "name": "setPauser", "nameLocation": "10133:9:36", "parameters": { "id": 4387, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4384, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4394, "src": "10143:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4383, "name": "address", "nodeType": "ElementaryTypeName", "src": "10143:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4386, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4394, "src": "10152:4:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4385, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10152:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "10142:15:36" }, "returnParameters": { "id": 4388, "nodeType": "ParameterList", "parameters": [], "src": "10167:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4406, "nodeType": "FunctionDefinition", "src": "10244:67:36", "nodes": [], "body": { "id": 4405, "nodeType": "Block", "src": "10276:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4402, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10296:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4401, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10286:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4403, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10286:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4404, "nodeType": "ExpressionStatement", "src": "10286:18:36" }] }, "baseFunctions": [11264], "documentation": { "id": 4395, "nodeType": "StructuredDocumentation", "src": "10208:31:36", "text": "@inheritdoc IHyperdriveCore" }, "functionSelector": "01681a62", "implemented": true, "kind": "function", "modifiers": [], "name": "sweep", "nameLocation": "10253:5:36", "parameters": { "id": 4399, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4398, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4406, "src": "10259:6:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" }, "typeName": { "id": 4397, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4396, "name": "IERC20", "nameLocations": ["10259:6:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 10358, "src": "10259:6:36" }, "referencedDeclaration": 10358, "src": "10259:6:36", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }, "visibility": "internal" }], "src": "10258:8:36" }, "returnParameters": { "id": 4400, "nodeType": "ParameterList", "parameters": [], "src": "10276:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4423, "nodeType": "FunctionDefinition", "src": "10377:102:36", "nodes": [], "body": { "id": 4422, "nodeType": "Block", "src": "10444:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4419, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10464:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4418, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10454:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4420, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10454:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4421, "nodeType": "ExpressionStatement", "src": "10454:18:36" }] }, "baseFunctions": [12054], "documentation": { "id": 4407, "nodeType": "StructuredDocumentation", "src": "10341:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "1c0f12b6", "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "10386:12:36", "parameters": { "id": 4416, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4409, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4423, "src": "10399:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10399:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4411, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4423, "src": "10408:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4410, "name": "address", "nodeType": "ElementaryTypeName", "src": "10408:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4413, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4423, "src": "10417:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4412, "name": "address", "nodeType": "ElementaryTypeName", "src": "10417:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4415, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4423, "src": "10426:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4414, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10426:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10398:36:36" }, "returnParameters": { "id": 4417, "nodeType": "ParameterList", "parameters": [], "src": "10444:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4442, "nodeType": "FunctionDefinition", "src": "10521:163:36", "nodes": [], "body": { "id": 4441, "nodeType": "Block", "src": "10649:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4438, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10669:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4437, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10659:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4439, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10659:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4440, "nodeType": "ExpressionStatement", "src": "10659:18:36" }] }, "baseFunctions": [12068], "documentation": { "id": 4424, "nodeType": "StructuredDocumentation", "src": "10485:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "e44808bc", "implemented": true, "kind": "function", "modifiers": [], "name": "transferFromBridge", "nameLocation": "10530:18:36", "parameters": { "id": 4435, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4426, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4442, "src": "10558:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10558:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4428, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4442, "src": "10575:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4427, "name": "address", "nodeType": "ElementaryTypeName", "src": "10575:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4430, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4442, "src": "10592:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4429, "name": "address", "nodeType": "ElementaryTypeName", "src": "10592:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4432, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4442, "src": "10609:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4431, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10609:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4434, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4442, "src": "10626:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4433, "name": "address", "nodeType": "ElementaryTypeName", "src": "10626:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "10548:91:36" }, "returnParameters": { "id": 4436, "nodeType": "ParameterList", "parameters": [], "src": "10649:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4459, "nodeType": "FunctionDefinition", "src": "10726:107:36", "nodes": [], "body": { "id": 4458, "nodeType": "Block", "src": "10798:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4455, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10818:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4454, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10808:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10808:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4457, "nodeType": "ExpressionStatement", "src": "10808:18:36" }] }, "baseFunctions": [12090], "documentation": { "id": 4443, "nodeType": "StructuredDocumentation", "src": "10690:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "4ed2d6ac", "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalBridge", "nameLocation": "10735:17:36", "parameters": { "id": 4452, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4445, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4459, "src": "10753:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10753:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4447, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4459, "src": "10762:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4446, "name": "address", "nodeType": "ElementaryTypeName", "src": "10762:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4449, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4459, "src": "10771:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4448, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10771:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4451, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4459, "src": "10780:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4450, "name": "address", "nodeType": "ElementaryTypeName", "src": "10780:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "10752:36:36" }, "returnParameters": { "id": 4453, "nodeType": "ParameterList", "parameters": [], "src": "10798:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4472, "nodeType": "FunctionDefinition", "src": "10875:86:36", "nodes": [], "body": { "id": 4471, "nodeType": "Block", "src": "10926:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4468, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "10946:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4467, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "10936:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4469, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10936:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4470, "nodeType": "ExpressionStatement", "src": "10936:18:36" }] }, "baseFunctions": [12098], "documentation": { "id": 4460, "nodeType": "StructuredDocumentation", "src": "10839:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "a22cb465", "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "10884:17:36", "parameters": { "id": 4465, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4462, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4472, "src": "10902:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4461, "name": "address", "nodeType": "ElementaryTypeName", "src": "10902:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4464, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4472, "src": "10911:4:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4463, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10911:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "10901:15:36" }, "returnParameters": { "id": 4466, "nodeType": "ParameterList", "parameters": [], "src": "10926:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4487, "nodeType": "FunctionDefinition", "src": "11003:92:36", "nodes": [], "body": { "id": 4486, "nodeType": "Block", "src": "11060:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4483, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "11080:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4482, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "11070:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11070:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4485, "nodeType": "ExpressionStatement", "src": "11070:18:36" }] }, "baseFunctions": [12078], "documentation": { "id": 4473, "nodeType": "StructuredDocumentation", "src": "10967:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "9cd241af", "implemented": true, "kind": "function", "modifiers": [], "name": "setApproval", "nameLocation": "11012:11:36", "parameters": { "id": 4480, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4475, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4487, "src": "11024:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4474, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11024:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4477, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4487, "src": "11033:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4476, "name": "address", "nodeType": "ElementaryTypeName", "src": "11033:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4479, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4487, "src": "11042:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4478, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11042:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "11023:27:36" }, "returnParameters": { "id": 4481, "nodeType": "ParameterList", "parameters": [], "src": "11060:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4506, "nodeType": "FunctionDefinition", "src": "11137:167:36", "nodes": [], "body": { "id": 4505, "nodeType": "Block", "src": "11269:35:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4502, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "11289:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4501, "name": "_delegate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4608, "src": "11279:9:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address) returns (bytes memory)" } }, "id": 4503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11279:18:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 4504, "nodeType": "ExpressionStatement", "src": "11279:18:36" }] }, "baseFunctions": [12112], "documentation": { "id": 4488, "nodeType": "StructuredDocumentation", "src": "11101:31:36", "text": "@inheritdoc IMultiTokenCore" }, "functionSelector": "17fad7fc", "implemented": true, "kind": "function", "modifiers": [], "name": "batchTransferFrom", "nameLocation": "11146:17:36", "parameters": { "id": 4499, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4490, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4506, "src": "11173:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4489, "name": "address", "nodeType": "ElementaryTypeName", "src": "11173:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4492, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4506, "src": "11190:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4491, "name": "address", "nodeType": "ElementaryTypeName", "src": "11190:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4495, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4506, "src": "11207:18:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 4493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11207:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 4494, "nodeType": "ArrayTypeName", "src": "11207:9:36", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }, { "constant": false, "id": 4498, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4506, "src": "11235:18:36", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 4496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11235:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 4497, "nodeType": "ArrayTypeName", "src": "11235:9:36", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }], "src": "11163:96:36" }, "returnParameters": { "id": 4500, "nodeType": "ParameterList", "parameters": [], "src": "11269:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4555, "nodeType": "FunctionDefinition", "src": "12469:869:36", "nodes": [], "body": { "id": 4554, "nodeType": "Block", "src": "12659:679:36", "nodes": [], "statements": [{ "assignments": [4525, 4527], "declarations": [{ "constant": false, "id": 4525, "mutability": "mutable", "name": "success", "nameLocation": "12675:7:36", "nodeType": "VariableDeclaration", "scope": 4554, "src": "12670:12:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4524, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12670:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 4527, "mutability": "mutable", "name": "result", "nameLocation": "12697:6:36", "nodeType": "VariableDeclaration", "scope": 4554, "src": "12684:19:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 4526, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12684:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "id": 4547, "initialValue": { "arguments": [{ "arguments": [{ "expression": { "id": 4532, "name": "HyperdriveTarget0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5409, "src": "12773:17:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_HyperdriveTarget0_$5409_$", "typeString": "type(contract HyperdriveTarget0)" } }, "id": 4533, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "12791:12:36", "memberName": "permitForAll", "nodeType": "MemberAccess", "referencedDeclaration": 4922, "src": "12773:30:36", "typeDescriptions": { "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$", "typeString": "function HyperdriveTarget0.permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)" } }, { "components": [{ "arguments": [], "expression": { "argumentTypes": [], "id": 4534, "name": "domainSeparator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4583, "src": "12843:15:36", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)" } }, "id": 4535, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12843:17:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4536, "name": "PERMIT_TYPEHASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4053, "src": "12882:15:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4537, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4509, "src": "12919:5:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4538, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4511, "src": "12946:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4539, "name": "_approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4513, "src": "12975:9:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "id": 4540, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4515, "src": "13006:8:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4541, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4517, "src": "13036:1:36", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, { "id": 4542, "name": "r", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4519, "src": "13059:1:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4543, "name": "s", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4521, "src": "13082:1:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }], "id": 4544, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12821:280:36", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$", "typeString": "function HyperdriveTarget0.permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)" }, { "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$", "typeString": "tuple(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)" }], "expression": { "id": 4530, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "12741:3:36", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4531, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "12745:10:36", "memberName": "encodeCall", "nodeType": "MemberAccess", "src": "12741:14:36", "typeDescriptions": { "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12741:374:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "id": 4528, "name": "target0", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4035, "src": "12707:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "12715:12:36", "memberName": "delegatecall", "nodeType": "MemberAccess", "src": "12707:20:36", "typeDescriptions": { "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) returns (bool,bytes memory)" } }, "id": 4546, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12707:418:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "nodeType": "VariableDeclarationStatement", "src": "12669:456:36" }, { "condition": { "id": 4549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "13139:8:36", "subExpression": { "id": 4548, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4525, "src": "13140:7:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 4552, "nodeType": "IfStatement", "src": "13135:117:36", "trueBody": { "id": 4551, "nodeType": "Block", "src": "13149:103:36", "statements": [{ "AST": { "nodeType": "YulBlock", "src": "13172:70:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "13201:6:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13209:2:36", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13197:3:36" }, "nodeType": "YulFunctionCall", "src": "13197:15:36" }, { "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "13220:6:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "13214:5:36" }, "nodeType": "YulFunctionCall", "src": "13214:13:36" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "13190:6:36" }, "nodeType": "YulFunctionCall", "src": "13190:38:36" }, "nodeType": "YulExpressionStatement", "src": "13190:38:36" }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4527, "isOffset": false, "isSlot": false, "src": "13201:6:36", "valueSize": 1 }, { "declaration": 4527, "isOffset": false, "isSlot": false, "src": "13220:6:36", "valueSize": 1 }], "id": 4550, "nodeType": "InlineAssembly", "src": "13163:79:36" }] } }, { "AST": { "nodeType": "YulBlock", "src": "13270:62:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "13295:6:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13303:2:36", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13291:3:36" }, "nodeType": "YulFunctionCall", "src": "13291:15:36" }, { "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "13314:6:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "13308:5:36" }, "nodeType": "YulFunctionCall", "src": "13308:13:36" }], "functionName": { "name": "return", "nodeType": "YulIdentifier", "src": "13284:6:36" }, "nodeType": "YulFunctionCall", "src": "13284:38:36" }, "nodeType": "YulExpressionStatement", "src": "13284:38:36" }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4527, "isOffset": false, "isSlot": false, "src": "13295:6:36", "valueSize": 1 }, { "declaration": 4527, "isOffset": false, "isSlot": false, "src": "13314:6:36", "valueSize": 1 }], "id": 4553, "nodeType": "InlineAssembly", "src": "13261:71:36" }] }, "baseFunctions": [12130], "documentation": { "id": 4507, "nodeType": "StructuredDocumentation", "src": "11310:1154:36", "text": "@notice Allows a caller who is not the owner of an account to execute the\n      functionality of 'approve' for all assets with the owners signature.\n @param owner The owner of the account which is having the new approval set.\n @param spender The address which will be allowed to spend owner's tokens.\n @param _approved A boolean of the approval status to set to.\n @param deadline The timestamp which the signature must be submitted by\n        to be valid.\n @param v Extra ECDSA data which allows public key recovery from\n        signature assumed to be 27 or 28.\n @param r The r component of the ECDSA signature.\n @param s The s component of the ECDSA signature.\n @dev The signature for this function follows EIP 712 standard and should\n      be generated with the eth_signTypedData JSON RPC call instead of\n      the eth_sign JSON RPC call. If using out of date parity signing\n      libraries the v component may need to be adjusted. Also it is very\n      rare but possible for v to be other values, those values are not\n      supported." }, "functionSelector": "9032c726", "implemented": true, "kind": "function", "modifiers": [], "name": "permitForAll", "nameLocation": "12478:12:36", "parameters": { "id": 4522, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4509, "mutability": "mutable", "name": "owner", "nameLocation": "12508:5:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12500:13:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4508, "name": "address", "nodeType": "ElementaryTypeName", "src": "12500:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4511, "mutability": "mutable", "name": "spender", "nameLocation": "12531:7:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12523:15:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4510, "name": "address", "nodeType": "ElementaryTypeName", "src": "12523:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4513, "mutability": "mutable", "name": "_approved", "nameLocation": "12553:9:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12548:14:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4512, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12548:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 4515, "mutability": "mutable", "name": "deadline", "nameLocation": "12580:8:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12572:16:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4514, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12572:7:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4517, "mutability": "mutable", "name": "v", "nameLocation": "12604:1:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12598:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 4516, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "12598:5:36", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "visibility": "internal" }, { "constant": false, "id": 4519, "mutability": "mutable", "name": "r", "nameLocation": "12623:1:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12615:9:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4518, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12615:7:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }, { "constant": false, "id": 4521, "mutability": "mutable", "name": "s", "nameLocation": "12642:1:36", "nodeType": "VariableDeclaration", "scope": 4555, "src": "12634:9:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4520, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12634:7:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "src": "12490:159:36" }, "returnParameters": { "id": 4523, "nodeType": "ParameterList", "parameters": [], "src": "12659:0:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4583, "nodeType": "FunctionDefinition", "src": "13619:426:36", "nodes": [], "body": { "id": 4582, "nodeType": "Block", "src": "13676:369:36", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "hexValue": "454950373132446f6d61696e28737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429", "id": 4565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13799:72:36", "typeDescriptions": { "typeIdentifier": "t_stringliteral_2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd", "typeString": "literal_string \"EIP712Domain(string version,uint256 chainId,address verifyingContract)\"" }, "value": "EIP712Domain(string version,uint256 chainId,address verifyingContract)" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd", "typeString": "literal_string \"EIP712Domain(string version,uint256 chainId,address verifyingContract)\"" }], "id": 4564, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "13764:9:36", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 4566, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13764:129:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "arguments": [{ "arguments": [{ "hexValue": "31", "id": 4570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13931:3:36", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\"" }, "value": "1" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\"" }], "id": 4569, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13925:5:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 4568, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "13925:5:36", "typeDescriptions": {} } }, "id": 4571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13925:10:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4567, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "13915:9:36", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 4572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13915:21:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "expression": { "id": 4573, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "13958:5:36", "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" } }, "id": 4574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "13964:7:36", "memberName": "chainid", "nodeType": "MemberAccess", "src": "13958:13:36", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "id": 4577, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "14001:4:36", "typeDescriptions": { "typeIdentifier": "t_contract$_Hyperdrive_$4609", "typeString": "contract Hyperdrive" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_Hyperdrive_$4609", "typeString": "contract Hyperdrive" }], "id": 4576, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13993:7:36", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 4575, "name": "address", "nodeType": "ElementaryTypeName", "src": "13993:7:36", "typeDescriptions": {} } }, "id": 4578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13993:13:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 4562, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "13732:3:36", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4563, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "13736:6:36", "memberName": "encode", "nodeType": "MemberAccess", "src": "13732:10:36", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13732:292:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4561, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "13705:9:36", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 4580, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13705:333:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "functionReturnParameters": 4560, "id": 4581, "nodeType": "Return", "src": "13686:352:36" }] }, "documentation": { "id": 4556, "nodeType": "StructuredDocumentation", "src": "13360:254:36", "text": "@notice Computes the EIP712 domain separator which prevents user signed\n         messages for this contract to be replayed in other contracts:\n         https://eips.ethereum.org/EIPS/eip-712.\n @return The EIP712 domain separator." }, "functionSelector": "f698da25", "implemented": true, "kind": "function", "modifiers": [], "name": "domainSeparator", "nameLocation": "13628:15:36", "parameters": { "id": 4557, "nodeType": "ParameterList", "parameters": [], "src": "13643:2:36" }, "returnParameters": { "id": 4560, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4559, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4583, "src": "13667:7:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4558, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13667:7:36", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "src": "13666:9:36" }, "scope": 4609, "stateMutability": "view", "virtual": false, "visibility": "public" }, { "id": 4608, "nodeType": "FunctionDefinition", "src": "14323:359:36", "nodes": [], "body": { "id": 4607, "nodeType": "Block", "src": "14391:291:36", "nodes": [], "statements": [{ "assignments": [4592, 4594], "declarations": [{ "constant": false, "id": 4592, "mutability": "mutable", "name": "success", "nameLocation": "14407:7:36", "nodeType": "VariableDeclaration", "scope": 4607, "src": "14402:12:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4591, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14402:4:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 4594, "mutability": "mutable", "name": "result", "nameLocation": "14429:6:36", "nodeType": "VariableDeclaration", "scope": 4607, "src": "14416:19:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 4593, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "14416:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "id": 4600, "initialValue": { "arguments": [{ "expression": { "id": 4597, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "14460:3:36", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 4598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "14464:4:36", "memberName": "data", "nodeType": "MemberAccess", "src": "14460:8:36", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" }], "expression": { "id": 4595, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4586, "src": "14439:7:36", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 4596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "14447:12:36", "memberName": "delegatecall", "nodeType": "MemberAccess", "src": "14439:20:36", "typeDescriptions": { "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) returns (bool,bytes memory)" } }, "id": 4599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14439:30:36", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "nodeType": "VariableDeclarationStatement", "src": "14401:68:36" }, { "condition": { "id": 4602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "14483:8:36", "subExpression": { "id": 4601, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4592, "src": "14484:7:36", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 4605, "nodeType": "IfStatement", "src": "14479:117:36", "trueBody": { "id": 4604, "nodeType": "Block", "src": "14493:103:36", "statements": [{ "AST": { "nodeType": "YulBlock", "src": "14516:70:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "14545:6:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14553:2:36", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14541:3:36" }, "nodeType": "YulFunctionCall", "src": "14541:15:36" }, { "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "14564:6:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "14558:5:36" }, "nodeType": "YulFunctionCall", "src": "14558:13:36" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "14534:6:36" }, "nodeType": "YulFunctionCall", "src": "14534:38:36" }, "nodeType": "YulExpressionStatement", "src": "14534:38:36" }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4594, "isOffset": false, "isSlot": false, "src": "14545:6:36", "valueSize": 1 }, { "declaration": 4594, "isOffset": false, "isSlot": false, "src": "14564:6:36", "valueSize": 1 }], "id": 4603, "nodeType": "InlineAssembly", "src": "14507:79:36" }] } }, { "AST": { "nodeType": "YulBlock", "src": "14614:62:36", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "14639:6:36" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14647:2:36", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14635:3:36" }, "nodeType": "YulFunctionCall", "src": "14635:15:36" }, { "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "14658:6:36" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "14652:5:36" }, "nodeType": "YulFunctionCall", "src": "14652:13:36" }], "functionName": { "name": "return", "nodeType": "YulIdentifier", "src": "14628:6:36" }, "nodeType": "YulFunctionCall", "src": "14628:38:36" }, "nodeType": "YulExpressionStatement", "src": "14628:38:36" }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 4594, "isOffset": false, "isSlot": false, "src": "14639:6:36", "valueSize": 1 }, { "declaration": 4594, "isOffset": false, "isSlot": false, "src": "14658:6:36", "valueSize": 1 }], "id": 4606, "nodeType": "InlineAssembly", "src": "14605:71:36" }] }, "documentation": { "id": 4584, "nodeType": "StructuredDocumentation", "src": "14072:246:36", "text": "@dev Makes a delegatecall to the extras contract with the provided\n      calldata. This will revert if the call is unsuccessful.\n @param _target The target of the delegatecall.\n @return The returndata of the delegatecall." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_delegate", "nameLocation": "14332:9:36", "parameters": { "id": 4587, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4586, "mutability": "mutable", "name": "_target", "nameLocation": "14350:7:36", "nodeType": "VariableDeclaration", "scope": 4608, "src": "14342:15:36", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4585, "name": "address", "nodeType": "ElementaryTypeName", "src": "14342:7:36", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "14341:17:36" }, "returnParameters": { "id": 4590, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4589, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4608, "src": "14377:12:36", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 4588, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "14377:5:36", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "14376:14:36" }, "scope": 4609, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }], "abstract": true, "baseContracts": [{ "baseName": { "id": 4021, "name": "IHyperdriveCore", "nameLocations": ["4185:15:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 11265, "src": "4185:15:36" }, "id": 4022, "nodeType": "InheritanceSpecifier", "src": "4185:15:36" }, { "baseName": { "id": 4023, "name": "HyperdriveAdmin", "nameLocations": ["4206:15:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 13205, "src": "4206:15:36" }, "id": 4024, "nodeType": "InheritanceSpecifier", "src": "4206:15:36" }, { "baseName": { "id": 4025, "name": "HyperdriveLP", "nameLocations": ["4227:12:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 15747, "src": "4227:12:36" }, "id": 4026, "nodeType": "InheritanceSpecifier", "src": "4227:12:36" }, { "baseName": { "id": 4027, "name": "HyperdriveLong", "nameLocations": ["4245:14:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 16681, "src": "4245:14:36" }, "id": 4028, "nodeType": "InheritanceSpecifier", "src": "4245:14:36" }, { "baseName": { "id": 4029, "name": "HyperdriveShort", "nameLocations": ["4265:15:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 18151, "src": "4265:15:36" }, "id": 4030, "nodeType": "InheritanceSpecifier", "src": "4265:15:36" }, { "baseName": { "id": 4031, "name": "HyperdriveCheckpoint", "nameLocations": ["4286:20:36"], "nodeType": "IdentifierPath", "referencedDeclaration": 14845, "src": "4286:20:36" }, "id": 4032, "nodeType": "InheritanceSpecifier", "src": "4286:20:36" }], "canonicalName": "Hyperdrive", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 4020, "nodeType": "StructuredDocumentation", "src": "859:3290:36", "text": "______  __                           _________      _____\n      ___  / / /____  ___________________________  /_________(_)__   ______\n      __  /_/ /__  / / /__  __ \\  _ \\_  ___/  __  /__  ___/_  /__ | / /  _ \\\n      _  __  / _  /_/ /__  /_/ /  __/  /   / /_/ / _  /   _  / __ |/ //  __/\n      /_/ /_/  _\\__, / _   ___/\\___//_/    \\__,_/  /_/    /_/  _____/ \\___/\n               /____/   /_/\n                     XXX          ++          ++          XXX\n     ############   XXXXX        ++0+        +0++        XXXXX   ###########\n   ##////////////########       ++00++      ++00++       ########///////////##\n  ##////////////##########      ++000++    ++000++      ##########///////////##\n  ##%%%%%%/////      ######     ++0000+    +0000++     ######     /////%%%%%%##\n    %%%%%%%%&&             ##   ++0000+    +0000++   ##           &&%%%%%%%%%\n         %&&&                ##  +o000+    +000o+  ##              &&&%\n                              ## ++00+-    -+00++ ##\n                               #% ++0+      +0++ %#\n                               ###-:Oo.++++.oO:-###\n                                ##: 00++++++00 :##\n                    #S###########* 0++00+++00++0 *##########S#\n                  #S               % $ 0+++0 $ %              S#\n                #S   ----------   %+++++:#:+++++%-----------    S#\n              #S   ------------- %++++: ### :++++%------------    S#\n             S    ---------------%++++*\\ | /*++++%-------------     S\n           #S     --------------- %++++ ~W~ ++++%666--o UUUU o-      S#\n         #S?      ---------------  %+++++~+++++%&&&8 o  \\  /  o       ?S#\n        ?*????**+++;::,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,::;+++**????*?\n      #?+////////////////////////////////////////////////////////////////+?#\n    #;;;;;//////////////////////////////////////////////////////////////;;;;;#\n  S;;;;;;;;;//////////////////////////////////////////////////////////;;;;;;;;;S\n /;;;;;;;;;;;///////////////////////////////////////////////////////;;;;;;;;;;;;\\\n |||OOOOOOOO||OOOOOOOO=========== __  ___        ===========OOOOOOOO||OOOOOOOO|||\n |||OOOOOOOO||OOOOOOOO===========|  \\[__ |   \\  /===========OOOOOOOO||OOOOOOOO|||\n |||OOOOOOOO||OOOOOOOO===========|__/[___|___ \\/ ===========OOOOOOOO||OOOOOOOO|||\n ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n |||////////000000000000\\\\\\\\\\\\\\\\|:::::::::::::::|////////00000000000\\\\\\\\\\\\\\\\\\\\|||\n SSS\\\\\\\\\\\\\\\\000000000000////////|:::::0x666:::::|\\\\\\\\\\\\\\\\00000000000//////////SSS\n SSS|||||||||||||||||||||||||||||:::::::::::::::||||||||||||||||||||||||||||||SSS\n SSSSSSSS|_______________|______________||_______________|______________|SSSSSSSS\n SSSSSSSS                                                                SSSSSSSS\n SSSSSSSS                                                                SSSSSSSS\n @author DELV\n @title Hyperdrive\n @notice A fixed-rate AMM that mints bonds on demand for longs and shorts.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance." }, "fullyImplemented": false, "linearizedBaseContracts": [4609, 14845, 18151, 16681, 15747, 17165, 13205, 14381, 18367, 72043, 11599, 12165, 11265, 12131], "name": "Hyperdrive", "nameLocation": "4167:10:36", "scope": 4610, "usedErrors": [11027, 71988], "usedEvents": [11419, 11434, 11453, 11468, 11485, 11504, 11523, 11544, 11557, 11564, 11569, 11574, 11579, 11586, 11591, 11598, 12146, 12155, 12164] }], "license": "Apache-2.0" }, "id": 36 };
