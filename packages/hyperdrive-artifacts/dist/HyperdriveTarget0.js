export const HyperdriveTarget0 = { "abi": [{ "type": "function", "name": "balanceOf", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }, { "name": "account", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "baseToken", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "address" }], "stateMutability": "view" }, { "type": "function", "name": "batchTransferFrom", "inputs": [{ "name": "from", "type": "address", "internalType": "address" }, { "name": "to", "type": "address", "internalType": "address" }, { "name": "ids", "type": "uint256[]", "internalType": "uint256[]" }, { "name": "values", "type": "uint256[]", "internalType": "uint256[]" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "collectGovernanceFee", "inputs": [{ "name": "_options", "type": "tuple", "internalType": "struct IHyperdrive.Options", "components": [{ "name": "destination", "type": "address", "internalType": "address" }, { "name": "asBase", "type": "bool", "internalType": "bool" }, { "name": "extraData", "type": "bytes", "internalType": "bytes" }] }], "outputs": [{ "name": "proceeds", "type": "uint256", "internalType": "uint256" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "decimals", "inputs": [], "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }], "stateMutability": "view" }, { "type": "function", "name": "getCheckpoint", "inputs": [{ "name": "_checkpointTime", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.Checkpoint", "components": [{ "name": "vaultSharePrice", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "getCheckpointExposure", "inputs": [{ "name": "_checkpointTime", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "int256", "internalType": "int256" }], "stateMutability": "view" }, { "type": "function", "name": "getMarketState", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.MarketState", "components": [{ "name": "shareReserves", "type": "uint128", "internalType": "uint128" }, { "name": "bondReserves", "type": "uint128", "internalType": "uint128" }, { "name": "longExposure", "type": "uint128", "internalType": "uint128" }, { "name": "longsOutstanding", "type": "uint128", "internalType": "uint128" }, { "name": "shareAdjustment", "type": "int128", "internalType": "int128" }, { "name": "shortsOutstanding", "type": "uint128", "internalType": "uint128" }, { "name": "longAverageMaturityTime", "type": "uint128", "internalType": "uint128" }, { "name": "shortAverageMaturityTime", "type": "uint128", "internalType": "uint128" }, { "name": "isInitialized", "type": "bool", "internalType": "bool" }, { "name": "isPaused", "type": "bool", "internalType": "bool" }, { "name": "zombieBaseProceeds", "type": "uint112", "internalType": "uint112" }, { "name": "zombieShareReserves", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "getPoolConfig", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.PoolConfig", "components": [{ "name": "baseToken", "type": "address", "internalType": "contract IERC20" }, { "name": "linkerFactory", "type": "address", "internalType": "address" }, { "name": "linkerCodeHash", "type": "bytes32", "internalType": "bytes32" }, { "name": "initialVaultSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "minimumShareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "minimumTransactionAmount", "type": "uint256", "internalType": "uint256" }, { "name": "positionDuration", "type": "uint256", "internalType": "uint256" }, { "name": "checkpointDuration", "type": "uint256", "internalType": "uint256" }, { "name": "timeStretch", "type": "uint256", "internalType": "uint256" }, { "name": "governance", "type": "address", "internalType": "address" }, { "name": "feeCollector", "type": "address", "internalType": "address" }, { "name": "sweepCollector", "type": "address", "internalType": "address" }, { "name": "fees", "type": "tuple", "internalType": "struct IHyperdrive.Fees", "components": [{ "name": "curve", "type": "uint256", "internalType": "uint256" }, { "name": "flat", "type": "uint256", "internalType": "uint256" }, { "name": "governanceLP", "type": "uint256", "internalType": "uint256" }, { "name": "governanceZombie", "type": "uint256", "internalType": "uint256" }] }] }], "stateMutability": "view" }, { "type": "function", "name": "getPoolInfo", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.PoolInfo", "components": [{ "name": "shareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "shareAdjustment", "type": "int256", "internalType": "int256" }, { "name": "zombieBaseProceeds", "type": "uint256", "internalType": "uint256" }, { "name": "zombieShareReserves", "type": "uint256", "internalType": "uint256" }, { "name": "bondReserves", "type": "uint256", "internalType": "uint256" }, { "name": "lpTotalSupply", "type": "uint256", "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "longsOutstanding", "type": "uint256", "internalType": "uint256" }, { "name": "longAverageMaturityTime", "type": "uint256", "internalType": "uint256" }, { "name": "shortsOutstanding", "type": "uint256", "internalType": "uint256" }, { "name": "shortAverageMaturityTime", "type": "uint256", "internalType": "uint256" }, { "name": "withdrawalSharesReadyToWithdraw", "type": "uint256", "internalType": "uint256" }, { "name": "withdrawalSharesProceeds", "type": "uint256", "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "internalType": "uint256" }, { "name": "longExposure", "type": "uint256", "internalType": "uint256" }] }], "stateMutability": "view" }, { "type": "function", "name": "getUncollectedGovernanceFees", "inputs": [], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "getWithdrawPool", "inputs": [], "outputs": [{ "name": "", "type": "tuple", "internalType": "struct IHyperdrive.WithdrawPool", "components": [{ "name": "readyToWithdraw", "type": "uint128", "internalType": "uint128" }, { "name": "proceeds", "type": "uint128", "internalType": "uint128" }] }], "stateMutability": "view" }, { "type": "function", "name": "isApprovedForAll", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }, { "name": "operator", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "isPauser", "inputs": [{ "name": "_account", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "view" }, { "type": "function", "name": "load", "inputs": [{ "name": "_slots", "type": "uint256[]", "internalType": "uint256[]" }], "outputs": [{ "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }], "stateMutability": "view" }, { "type": "function", "name": "name", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "pure" }, { "type": "function", "name": "nonces", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "pause", "inputs": [{ "name": "_status", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "perTokenApprovals", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }, { "name": "account", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "permitForAll", "inputs": [{ "name": "domainSeparator", "type": "bytes32", "internalType": "bytes32" }, { "name": "permitTypeHash", "type": "bytes32", "internalType": "bytes32" }, { "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }, { "name": "_approved", "type": "bool", "internalType": "bool" }, { "name": "deadline", "type": "uint256", "internalType": "uint256" }, { "name": "v", "type": "uint8", "internalType": "uint8" }, { "name": "r", "type": "bytes32", "internalType": "bytes32" }, { "name": "s", "type": "bytes32", "internalType": "bytes32" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApproval", "inputs": [{ "name": "tokenID", "type": "uint256", "internalType": "uint256" }, { "name": "operator", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApprovalBridge", "inputs": [{ "name": "tokenID", "type": "uint256", "internalType": "uint256" }, { "name": "operator", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }, { "name": "caller", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setApprovalForAll", "inputs": [{ "name": "operator", "type": "address", "internalType": "address" }, { "name": "approved", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setFeeCollector", "inputs": [{ "name": "_who", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setGovernance", "inputs": [{ "name": "_who", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setPauser", "inputs": [{ "name": "who", "type": "address", "internalType": "address" }, { "name": "status", "type": "bool", "internalType": "bool" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "setSweepCollector", "inputs": [{ "name": "_who", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "sweep", "inputs": [{ "name": "_target", "type": "address", "internalType": "contract IERC20" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "symbol", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "pure" }, { "type": "function", "name": "totalSupply", "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "transferFrom", "inputs": [{ "name": "tokenID", "type": "uint256", "internalType": "uint256" }, { "name": "from", "type": "address", "internalType": "address" }, { "name": "to", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "transferFromBridge", "inputs": [{ "name": "tokenID", "type": "uint256", "internalType": "uint256" }, { "name": "from", "type": "address", "internalType": "address" }, { "name": "to", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }, { "name": "caller", "type": "address", "internalType": "address" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "AddLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Approval", "inputs": [{ "name": "owner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "spender", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "ApprovalForAll", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "CloseLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CloseShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "basePayment", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CollectGovernanceFee", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "fees", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CreateCheckpoint", "inputs": [{ "name": "checkpointTime", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedShorts", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedLongs", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "FeeCollectorUpdated", "inputs": [{ "name": "newFeeCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "GovernanceUpdated", "inputs": [{ "name": "newGovernance", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Initialize", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "apr", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "baseProceeds", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "PauseStatusUpdated", "inputs": [{ "name": "isPaused", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "PauserUpdated", "inputs": [{ "name": "newPauser", "type": "address", "indexed": true, "internalType": "address" }, { "name": "status", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RedeemWithdrawalShares", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RemoveLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Sweep", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "target", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "SweepCollectorUpdated", "inputs": [{ "name": "newSweepCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "TransferSingle", "inputs": [{ "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "from", "type": "address", "indexed": true, "internalType": "address" }, { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "id", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "AddressEmptyCode", "inputs": [{ "name": "target", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "AddressInsufficientBalance", "inputs": [{ "name": "account", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "BatchInputLengthMismatch", "inputs": [] }, { "type": "error", "name": "ExpInvalidExponent", "inputs": [] }, { "type": "error", "name": "ExpiredDeadline", "inputs": [] }, { "type": "error", "name": "FailedInnerCall", "inputs": [] }, { "type": "error", "name": "InsufficientLiquidity", "inputs": [{ "name": "reason", "type": "uint8", "internalType": "enum IHyperdrive.InsufficientLiquidityReason" }] }, { "type": "error", "name": "InvalidERC20Bridge", "inputs": [] }, { "type": "error", "name": "InvalidFeeDestination", "inputs": [] }, { "type": "error", "name": "InvalidPresentValue", "inputs": [] }, { "type": "error", "name": "InvalidSignature", "inputs": [] }, { "type": "error", "name": "InvalidTimestamp", "inputs": [] }, { "type": "error", "name": "LnInvalidInput", "inputs": [] }, { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] }, { "type": "error", "name": "RestrictedZeroAddress", "inputs": [] }, { "type": "error", "name": "ReturnData", "inputs": [{ "name": "data", "type": "bytes", "internalType": "bytes" }] }, { "type": "error", "name": "SafeERC20FailedOperation", "inputs": [{ "name": "token", "type": "address", "internalType": "address" }] }, { "type": "error", "name": "SweepFailed", "inputs": [] }, { "type": "error", "name": "Unauthorized", "inputs": [] }, { "type": "error", "name": "UnsafeCastToInt256", "inputs": [] }], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "balanceOf(uint256,address)": "3656eec2", "baseToken()": "c55dae63", "batchTransferFrom(address,address,uint256[],uint256[])": "17fad7fc", "collectGovernanceFee((address,bool,bytes))": "3e691db9", "decimals()": "313ce567", "getCheckpoint(uint256)": "20fc4881", "getCheckpointExposure(uint256)": "cf210e65", "getMarketState()": "d8165743", "getPoolConfig()": "b0d96580", "getPoolInfo()": "60246c88", "getUncollectedGovernanceFees()": "c69e16ad", "getWithdrawPool()": "fba56008", "isApprovedForAll(address,address)": "e985e9c5", "isPauser(address)": "46fbf68e", "load(uint256[])": "becee9c3", "name(uint256)": "00ad800c", "nonces(address)": "7ecebe00", "pause(bool)": "02329a29", "perTokenApprovals(uint256,address,address)": "21ff32a9", "permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)": "14e5f07b", "setApproval(uint256,address,uint256)": "9cd241af", "setApprovalBridge(uint256,address,uint256,address)": "4ed2d6ac", "setApprovalForAll(address,bool)": "a22cb465", "setFeeCollector(address)": "a42dce80", "setGovernance(address)": "ab033ea9", "setPauser(address,bool)": "7180c8ca", "setSweepCollector(address)": "e4af29d1", "sweep(address)": "01681a62", "symbol(uint256)": "4e41a1fb", "totalSupply(uint256)": "bd85b039", "transferFrom(uint256,address,address,uint256)": "1c0f12b6", "transferFromBridge(uint256,address,address,uint256,address)": "e44808bc" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BatchInputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpInvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum IHyperdrive.InsufficientLiquidityReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC20Bridge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPresentValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LnInvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestrictedZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ReturnData\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SweepFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToInt256\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Sweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"collectGovernanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"vaultSharePrice\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpointExposure\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint112\"},{\"internalType\":\"uint128\",\"name\":\"zombieShareReserves\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zombieShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setSweepCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"account\":\"The account.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The balance.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"collectGovernanceFee((address,bool,bytes))\":{\"params\":{\"_options\":\"The options that configure how the fees are settled.\"},\"returns\":{\"proceeds\":\"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"constructor\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getCheckpointExposure(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint exposure.\"}},\"getMarketState()\":{\"returns\":{\"_0\":\"The market state.\"}},\"getPoolConfig()\":{\"details\":\"These parameters are immutable, so this should only need to be      called once.\",\"returns\":{\"_0\":\"The PoolConfig struct.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The pool info.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"Governance fees denominated in shares yet to be collected.\"}},\"getWithdrawPool()\":{\"returns\":{\"_0\":\"Hyperdrive's withdrawal pool information.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account.\",\"operator\":\"The operator.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"isPauser(address)\":{\"params\":{\"_account\":\"The account to check.\"},\"returns\":{\"_0\":\"The pauser status.\"}},\"load(uint256[])\":{\"params\":{\"_slots\":\"The storage slots the caller wants the data from.\"},\"returns\":{\"_0\":\"A raw array of loaded data.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The name.\"}},\"nonces(address)\":{\"params\":{\"account\":\"The account.\"},\"returns\":{\"_0\":\"The signature nonce.\"}},\"pause(bool)\":{\"params\":{\"_status\":\"True to pause all deposits and false to unpause them.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"account\":\"The account.\",\"spender\":\"The spender.\",\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The approval status.\"}},\"permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"domainSeparator\":\"The EIP712 domain separator of the contract.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"permitTypeHash\":\"The EIP712 domain separator of the contract.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"setFeeCollector(address)\":{\"params\":{\"_who\":\"The new fee collector address.\"}},\"setGovernance(address)\":{\"params\":{\"_who\":\"The new governance address.\"}},\"setPauser(address,bool)\":{\"params\":{\"status\":\"The new pauser status.\",\"who\":\"The address to change.\"}},\"setSweepCollector(address)\":{\"params\":{\"_who\":\"The new sweep collector address.\"}},\"sweep(address)\":{\"details\":\"WARN: It is unlikely but possible that there is a selector overlap      with 'transfer'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.\",\"params\":{\"_target\":\"The target token to sweep.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The symbol.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token id.\"},\"returns\":{\"_0\":\"The total supply.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender from the bridge.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}}},\"title\":\"HyperdriveTarget0\",\"version\":1},\"userdoc\":{\"errors\":{\"BatchInputLengthMismatch()\":[{\"notice\":\"Thrown when the inputs to a batch transfer don't match in         length.\"}],\"ExpInvalidExponent()\":[{\"notice\":\"Thrown when the exponent to `FixedPointMath.exp` would cause the         the result to be larger than the representable scale.\"}],\"ExpiredDeadline()\":[{\"notice\":\"Thrown when a permit signature is expired.\"}],\"InsufficientLiquidity(uint8)\":[{\"notice\":\"Thrown when the pool doesn't have sufficient liquidity to         complete the trade.\"}],\"InvalidERC20Bridge()\":[{\"notice\":\"Thrown when the caller of one of MultiToken's bridge-only         functions is not the corresponding bridge.\"}],\"InvalidFeeDestination()\":[{\"notice\":\"Thrown when a destination other than the fee collector is         specified in `collectGovernanceFee`.\"}],\"InvalidPresentValue()\":[{\"notice\":\"Thrown when the present value calculation fails.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when an invalid signature is used provide permit access         to the MultiToken. A signature is considered to be invalid if         it fails to recover to the owner's address.\"}],\"InvalidTimestamp()\":[{\"notice\":\"Thrown when the timestamp used to construct an asset ID exceeds         the uint248 scale.\"}],\"LnInvalidInput()\":[{\"notice\":\"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero.\"}],\"RestrictedZeroAddress()\":[{\"notice\":\"Thrown when the owner passed to permit is the zero address. This         prevents users from spending the funds in address zero by         sending an invalid signature to ecrecover.\"}],\"ReturnData(bytes)\":[{\"notice\":\"Thrown by a read-only function called by the proxy. Unlike a         normal error, this error actually indicates that a read-only         call succeeded. The data that it wraps is the return data from         the read-only call.\"}],\"SweepFailed()\":[{\"notice\":\"Thrown when an asset is swept from the pool and one of the         pool's depository assets changes.\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when an unauthorized user attempts to access admin         functionality.\"}],\"UnsafeCastToInt256()\":[{\"notice\":\"Thrown when casting a value to a int256 that is outside of the         int256 scale.\"}]},\"events\":{\"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when an LP adds liquidity to the Hyperdrive pool.\"},\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is closed.\"},\"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is closed.\"},\"CollectGovernanceFee(address,uint256)\":{\"notice\":\"Emitted when governance fees are collected.\"},\"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a checkpoint is created.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector address is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address is updated.\"},\"Initialize(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when the Hyperdrive pool is initialized.\"},\"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is opened.\"},\"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is opened.\"},\"PauseStatusUpdated(bool)\":{\"notice\":\"Emitted when the pause status is updated.\"},\"PauserUpdated(address,bool)\":{\"notice\":\"Emitted when a pauser is updated.\"},\"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Emitted when an LP redeems withdrawal shares.\"},\"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when an LP removes liquidity from the Hyperdrive pool.\"},\"Sweep(address,address)\":{\"notice\":\"Emitted when tokens are swept.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector address is updated.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets an account's balance of a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the base token.\"},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"collectGovernanceFee((address,bool,bytes))\":{\"notice\":\"This function collects the governance fees accrued by the pool.\"},\"constructor\":{\"notice\":\"Instantiates target0.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken. This is the same as the         decimals used by the base token.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets a specified checkpoint.\"},\"getCheckpointExposure(uint256)\":{\"notice\":\"Gets the checkpoint exposure at a specified time.\"},\"getMarketState()\":{\"notice\":\"Gets the market state.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets info about the fees presently accrued by the pool.\"},\"getWithdrawPool()\":{\"notice\":\"Gets information about the withdrawal pool.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"isPauser(address)\":{\"notice\":\"Gets the pauser status of an address.\"},\"load(uint256[])\":{\"notice\":\"Allows plugin data libs to provide getters or other complex         logic instead of the main.\"},\"name(uint256)\":{\"notice\":\"Gets the name of a sub-token.\"},\"nonces(address)\":{\"notice\":\"Gets the permitForAll signature nonce for an account.\"},\"pause(bool)\":{\"notice\":\"Allows an authorized address to pause this contract.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the approval status of an operator for an account.\"},\"permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute         the functionality of 'approve' for all assets with the owner's         signature.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"setFeeCollector(address)\":{\"notice\":\"Allows governance to change the fee collector.\"},\"setGovernance(address)\":{\"notice\":\"Allows governance to change governance.\"},\"setPauser(address,bool)\":{\"notice\":\"Allows governance to change the pauser status of an address.\"},\"setSweepCollector(address)\":{\"notice\":\"Allows governance to change the sweep collector.\"},\"sweep(address)\":{\"notice\":\"Transfers the contract's balance of a target token to the sweep         collector address.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of a sub-token.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of a sub-token.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"}},\"notice\":\"Hyperdrive's target 0 logic contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/external/HyperdriveTarget0.sol\":\"HyperdriveTarget0\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/external/HyperdriveTarget0.sol\":{\"keccak256\":\"0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597\",\"dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603\",\"dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6\",\"dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN\"]},\"contracts/src/internal/HyperdriveCheckpoint.sol\":{\"keccak256\":\"0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7\",\"dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd\"]},\"contracts/src/internal/HyperdriveLP.sol\":{\"keccak256\":\"0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2\",\"dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j\"]},\"contracts/src/internal/HyperdriveLong.sol\":{\"keccak256\":\"0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7\",\"dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm\"]},\"contracts/src/internal/HyperdriveMultiToken.sol\":{\"keccak256\":\"0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d\",\"dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG\"]},\"contracts/src/internal/HyperdriveShort.sol\":{\"keccak256\":\"0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006\",\"dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195\",\"dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002\",\"dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f\",\"dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [{ "internalType": "address", "name": "target", "type": "address" }], "type": "error", "name": "AddressEmptyCode" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "type": "error", "name": "AddressInsufficientBalance" }, { "inputs": [], "type": "error", "name": "BatchInputLengthMismatch" }, { "inputs": [], "type": "error", "name": "ExpInvalidExponent" }, { "inputs": [], "type": "error", "name": "ExpiredDeadline" }, { "inputs": [], "type": "error", "name": "FailedInnerCall" }, { "inputs": [{ "internalType": "enum IHyperdrive.InsufficientLiquidityReason", "name": "reason", "type": "uint8" }], "type": "error", "name": "InsufficientLiquidity" }, { "inputs": [], "type": "error", "name": "InvalidERC20Bridge" }, { "inputs": [], "type": "error", "name": "InvalidFeeDestination" }, { "inputs": [], "type": "error", "name": "InvalidPresentValue" }, { "inputs": [], "type": "error", "name": "InvalidSignature" }, { "inputs": [], "type": "error", "name": "InvalidTimestamp" }, { "inputs": [], "type": "error", "name": "LnInvalidInput" }, { "inputs": [], "type": "error", "name": "ReentrancyGuardReentrantCall" }, { "inputs": [], "type": "error", "name": "RestrictedZeroAddress" }, { "inputs": [{ "internalType": "bytes", "name": "data", "type": "bytes" }], "type": "error", "name": "ReturnData" }, { "inputs": [{ "internalType": "address", "name": "token", "type": "address" }], "type": "error", "name": "SafeERC20FailedOperation" }, { "inputs": [], "type": "error", "name": "SweepFailed" }, { "inputs": [], "type": "error", "name": "Unauthorized" }, { "inputs": [], "type": "error", "name": "UnsafeCastToInt256" }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "AddLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address", "indexed": true }, { "internalType": "address", "name": "spender", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Approval", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": true }, { "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }], "type": "event", "name": "ApprovalForAll", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "basePayment", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseShort", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "fees", "type": "uint256", "indexed": false }], "type": "event", "name": "CollectGovernanceFee", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "checkpointTime", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedShorts", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedLongs", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "CreateCheckpoint", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newFeeCollector", "type": "address", "indexed": true }], "type": "event", "name": "FeeCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newGovernance", "type": "address", "indexed": true }], "type": "event", "name": "GovernanceUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "apr", "type": "uint256", "indexed": false }], "type": "event", "name": "Initialize", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "baseProceeds", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenShort", "anonymous": false }, { "inputs": [{ "internalType": "bool", "name": "isPaused", "type": "bool", "indexed": false }], "type": "event", "name": "PauseStatusUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newPauser", "type": "address", "indexed": true }, { "internalType": "bool", "name": "status", "type": "bool", "indexed": false }], "type": "event", "name": "PauserUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }], "type": "event", "name": "RedeemWithdrawalShares", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "RemoveLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "address", "name": "target", "type": "address", "indexed": true }], "type": "event", "name": "Sweep", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newSweepCollector", "type": "address", "indexed": true }], "type": "event", "name": "SweepCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "address", "name": "from", "type": "address", "indexed": true }, { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "id", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "TransferSingle", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "account", "type": "address" }], "stateMutability": "view", "type": "function", "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "baseToken", "outputs": [{ "internalType": "address", "name": "", "type": "address" }] }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256[]", "name": "ids", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "values", "type": "uint256[]" }], "stateMutability": "nonpayable", "type": "function", "name": "batchTransferFrom" }, { "inputs": [{ "internalType": "struct IHyperdrive.Options", "name": "_options", "type": "tuple", "components": [{ "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "bool", "name": "asBase", "type": "bool" }, { "internalType": "bytes", "name": "extraData", "type": "bytes" }] }], "stateMutability": "nonpayable", "type": "function", "name": "collectGovernanceFee", "outputs": [{ "internalType": "uint256", "name": "proceeds", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }] }, { "inputs": [{ "internalType": "uint256", "name": "_checkpointTime", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "getCheckpoint", "outputs": [{ "internalType": "struct IHyperdrive.Checkpoint", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "vaultSharePrice", "type": "uint128" }] }] }, { "inputs": [{ "internalType": "uint256", "name": "_checkpointTime", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "getCheckpointExposure", "outputs": [{ "internalType": "int256", "name": "", "type": "int256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getMarketState", "outputs": [{ "internalType": "struct IHyperdrive.MarketState", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "shareReserves", "type": "uint128" }, { "internalType": "uint128", "name": "bondReserves", "type": "uint128" }, { "internalType": "uint128", "name": "longExposure", "type": "uint128" }, { "internalType": "uint128", "name": "longsOutstanding", "type": "uint128" }, { "internalType": "int128", "name": "shareAdjustment", "type": "int128" }, { "internalType": "uint128", "name": "shortsOutstanding", "type": "uint128" }, { "internalType": "uint128", "name": "longAverageMaturityTime", "type": "uint128" }, { "internalType": "uint128", "name": "shortAverageMaturityTime", "type": "uint128" }, { "internalType": "bool", "name": "isInitialized", "type": "bool" }, { "internalType": "bool", "name": "isPaused", "type": "bool" }, { "internalType": "uint112", "name": "zombieBaseProceeds", "type": "uint112" }, { "internalType": "uint128", "name": "zombieShareReserves", "type": "uint128" }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getPoolConfig", "outputs": [{ "internalType": "struct IHyperdrive.PoolConfig", "name": "", "type": "tuple", "components": [{ "internalType": "contract IERC20", "name": "baseToken", "type": "address" }, { "internalType": "address", "name": "linkerFactory", "type": "address" }, { "internalType": "bytes32", "name": "linkerCodeHash", "type": "bytes32" }, { "internalType": "uint256", "name": "initialVaultSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "minimumShareReserves", "type": "uint256" }, { "internalType": "uint256", "name": "minimumTransactionAmount", "type": "uint256" }, { "internalType": "uint256", "name": "positionDuration", "type": "uint256" }, { "internalType": "uint256", "name": "checkpointDuration", "type": "uint256" }, { "internalType": "uint256", "name": "timeStretch", "type": "uint256" }, { "internalType": "address", "name": "governance", "type": "address" }, { "internalType": "address", "name": "feeCollector", "type": "address" }, { "internalType": "address", "name": "sweepCollector", "type": "address" }, { "internalType": "struct IHyperdrive.Fees", "name": "fees", "type": "tuple", "components": [{ "internalType": "uint256", "name": "curve", "type": "uint256" }, { "internalType": "uint256", "name": "flat", "type": "uint256" }, { "internalType": "uint256", "name": "governanceLP", "type": "uint256" }, { "internalType": "uint256", "name": "governanceZombie", "type": "uint256" }] }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getPoolInfo", "outputs": [{ "internalType": "struct IHyperdrive.PoolInfo", "name": "", "type": "tuple", "components": [{ "internalType": "uint256", "name": "shareReserves", "type": "uint256" }, { "internalType": "int256", "name": "shareAdjustment", "type": "int256" }, { "internalType": "uint256", "name": "zombieBaseProceeds", "type": "uint256" }, { "internalType": "uint256", "name": "zombieShareReserves", "type": "uint256" }, { "internalType": "uint256", "name": "bondReserves", "type": "uint256" }, { "internalType": "uint256", "name": "lpTotalSupply", "type": "uint256" }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "longsOutstanding", "type": "uint256" }, { "internalType": "uint256", "name": "longAverageMaturityTime", "type": "uint256" }, { "internalType": "uint256", "name": "shortsOutstanding", "type": "uint256" }, { "internalType": "uint256", "name": "shortAverageMaturityTime", "type": "uint256" }, { "internalType": "uint256", "name": "withdrawalSharesReadyToWithdraw", "type": "uint256" }, { "internalType": "uint256", "name": "withdrawalSharesProceeds", "type": "uint256" }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256" }, { "internalType": "uint256", "name": "longExposure", "type": "uint256" }] }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getUncollectedGovernanceFees", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getWithdrawPool", "outputs": [{ "internalType": "struct IHyperdrive.WithdrawPool", "name": "", "type": "tuple", "components": [{ "internalType": "uint128", "name": "readyToWithdraw", "type": "uint128" }, { "internalType": "uint128", "name": "proceeds", "type": "uint128" }] }] }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "address", "name": "operator", "type": "address" }], "stateMutability": "view", "type": "function", "name": "isApprovedForAll", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "address", "name": "_account", "type": "address" }], "stateMutability": "view", "type": "function", "name": "isPauser", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "uint256[]", "name": "_slots", "type": "uint256[]" }], "stateMutability": "view", "type": "function", "name": "load", "outputs": [{ "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "pure", "type": "function", "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "stateMutability": "view", "type": "function", "name": "nonces", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "bool", "name": "_status", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "pause" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "address", "name": "account", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "stateMutability": "view", "type": "function", "name": "perTokenApprovals", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "bytes32", "name": "domainSeparator", "type": "bytes32" }, { "internalType": "bytes32", "name": "permitTypeHash", "type": "bytes32" }, { "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "bool", "name": "_approved", "type": "bool" }, { "internalType": "uint256", "name": "deadline", "type": "uint256" }, { "internalType": "uint8", "name": "v", "type": "uint8" }, { "internalType": "bytes32", "name": "r", "type": "bytes32" }, { "internalType": "bytes32", "name": "s", "type": "bytes32" }], "stateMutability": "nonpayable", "type": "function", "name": "permitForAll" }, { "inputs": [{ "internalType": "uint256", "name": "tokenID", "type": "uint256" }, { "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "setApproval" }, { "inputs": [{ "internalType": "uint256", "name": "tokenID", "type": "uint256" }, { "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "address", "name": "caller", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setApprovalBridge" }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }, { "internalType": "bool", "name": "approved", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "setApprovalForAll" }, { "inputs": [{ "internalType": "address", "name": "_who", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setFeeCollector" }, { "inputs": [{ "internalType": "address", "name": "_who", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setGovernance" }, { "inputs": [{ "internalType": "address", "name": "who", "type": "address" }, { "internalType": "bool", "name": "status", "type": "bool" }], "stateMutability": "nonpayable", "type": "function", "name": "setPauser" }, { "inputs": [{ "internalType": "address", "name": "_who", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "setSweepCollector" }, { "inputs": [{ "internalType": "contract IERC20", "name": "_target", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "sweep" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "pure", "type": "function", "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "stateMutability": "view", "type": "function", "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "uint256", "name": "tokenID", "type": "uint256" }, { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "transferFrom" }, { "inputs": [{ "internalType": "uint256", "name": "tokenID", "type": "uint256" }, { "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "address", "name": "caller", "type": "address" }], "stateMutability": "nonpayable", "type": "function", "name": "transferFromBridge" }], "devdoc": { "kind": "dev", "methods": { "balanceOf(uint256,address)": { "params": { "account": "The account.", "tokenId": "The sub-token id." }, "returns": { "_0": "The balance." } }, "baseToken()": { "returns": { "_0": "The base token." } }, "batchTransferFrom(address,address,uint256[],uint256[])": { "params": { "from": "The source account.", "ids": "The array of token ids of the asset to transfer.", "to": "The destination account.", "values": "The amount of each token to transfer." } }, "collectGovernanceFee((address,bool,bytes))": { "params": { "_options": "The options that configure how the fees are settled." }, "returns": { "proceeds": "The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`." } }, "constructor": { "params": { "_config": "The configuration of the Hyperdrive pool." } }, "decimals()": { "returns": { "_0": "The decimals of the MultiToken." } }, "getCheckpoint(uint256)": { "params": { "_checkpointTime": "The checkpoint time." }, "returns": { "_0": "The checkpoint." } }, "getCheckpointExposure(uint256)": { "params": { "_checkpointTime": "The checkpoint time." }, "returns": { "_0": "The checkpoint exposure." } }, "getMarketState()": { "returns": { "_0": "The market state." } }, "getPoolConfig()": { "details": "These parameters are immutable, so this should only need to be      called once.", "returns": { "_0": "The PoolConfig struct." } }, "getPoolInfo()": { "returns": { "_0": "The pool info." } }, "getUncollectedGovernanceFees()": { "returns": { "_0": "Governance fees denominated in shares yet to be collected." } }, "getWithdrawPool()": { "returns": { "_0": "Hyperdrive's withdrawal pool information." } }, "isApprovedForAll(address,address)": { "params": { "account": "The account.", "operator": "The operator." }, "returns": { "_0": "The approval status." } }, "isPauser(address)": { "params": { "_account": "The account to check." }, "returns": { "_0": "The pauser status." } }, "load(uint256[])": { "params": { "_slots": "The storage slots the caller wants the data from." }, "returns": { "_0": "A raw array of loaded data." } }, "name(uint256)": { "params": { "tokenId": "The sub-token id." }, "returns": { "_0": "The name." } }, "nonces(address)": { "params": { "account": "The account." }, "returns": { "_0": "The signature nonce." } }, "pause(bool)": { "params": { "_status": "True to pause all deposits and false to unpause them." } }, "perTokenApprovals(uint256,address,address)": { "params": { "account": "The account.", "spender": "The spender.", "tokenId": "The sub-token id." }, "returns": { "_0": "The approval status." } }, "permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)": { "details": "The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.", "params": { "_approved": "A boolean of the approval status to set to.", "deadline": "The timestamp which the signature must be submitted by        to be valid.", "domainSeparator": "The EIP712 domain separator of the contract.", "owner": "The owner of the account which is having the new approval set.", "permitTypeHash": "The EIP712 domain separator of the contract.", "r": "The r component of the ECDSA signature.", "s": "The s component of the ECDSA signature.", "spender": "The address which will be allowed to spend owner's tokens.", "v": "Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28." } }, "setApproval(uint256,address,uint256)": { "params": { "amount": "The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).", "operator": "The address who will be able to use the tokens.", "tokenID": "The asset to approve the use of." } }, "setApprovalBridge(uint256,address,uint256,address)": { "params": { "amount": "The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].", "caller": "The eth address which called the linking contract.", "operator": "The address who will be able to use the tokens.", "tokenID": "The asset to approve the use of." } }, "setApprovalForAll(address,bool)": { "params": { "approved": "True to approve, false to remove approval.", "operator": "The eth address which can access the caller's assets." } }, "setFeeCollector(address)": { "params": { "_who": "The new fee collector address." } }, "setGovernance(address)": { "params": { "_who": "The new governance address." } }, "setPauser(address,bool)": { "params": { "status": "The new pauser status.", "who": "The address to change." } }, "setSweepCollector(address)": { "params": { "_who": "The new sweep collector address." } }, "sweep(address)": { "details": "WARN: It is unlikely but possible that there is a selector overlap      with 'transfer'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.", "params": { "_target": "The target token to sweep." } }, "symbol(uint256)": { "params": { "tokenId": "The sub-token id." }, "returns": { "_0": "The symbol." } }, "totalSupply(uint256)": { "params": { "tokenId": "The sub-token id." }, "returns": { "_0": "The total supply." } }, "transferFrom(uint256,address,address,uint256)": { "params": { "amount": "The amount of token to move.", "from": "The address whose balance will be reduced.", "to": "The address whose balance will be increased.", "tokenID": "The token identifier." } }, "transferFromBridge(uint256,address,address,uint256,address)": { "params": { "amount": "The amount of token to move.", "caller": "The msg.sender from the bridge.", "from": "The address whose balance will be reduced.", "to": "The address whose balance will be increased.", "tokenID": "The token identifier." } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "balanceOf(uint256,address)": { "notice": "Gets an account's balance of a sub-token." }, "baseToken()": { "notice": "Gets the base token." }, "batchTransferFrom(address,address,uint256[],uint256[])": { "notice": "Transfers several assets from one account to another." }, "collectGovernanceFee((address,bool,bytes))": { "notice": "This function collects the governance fees accrued by the pool." }, "constructor": { "notice": "Instantiates target0." }, "decimals()": { "notice": "Gets the decimals of the MultiToken. This is the same as the         decimals used by the base token." }, "getCheckpoint(uint256)": { "notice": "Gets a specified checkpoint." }, "getCheckpointExposure(uint256)": { "notice": "Gets the checkpoint exposure at a specified time." }, "getMarketState()": { "notice": "Gets the market state." }, "getPoolConfig()": { "notice": "Gets the pool's configuration parameters." }, "getPoolInfo()": { "notice": "Gets info about the pool's reserves and other state that is         important to evaluate potential trades." }, "getUncollectedGovernanceFees()": { "notice": "Gets info about the fees presently accrued by the pool." }, "getWithdrawPool()": { "notice": "Gets information about the withdrawal pool." }, "isApprovedForAll(address,address)": { "notice": "Gets the approval status of an operator for an account." }, "isPauser(address)": { "notice": "Gets the pauser status of an address." }, "load(uint256[])": { "notice": "Allows plugin data libs to provide getters or other complex         logic instead of the main." }, "name(uint256)": { "notice": "Gets the name of a sub-token." }, "nonces(address)": { "notice": "Gets the permitForAll signature nonce for an account." }, "pause(bool)": { "notice": "Allows an authorized address to pause this contract." }, "perTokenApprovals(uint256,address,address)": { "notice": "Gets the approval status of an operator for an account." }, "permitForAll(bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)": { "notice": "Allows a caller who is not the owner of an account to execute         the functionality of 'approve' for all assets with the owner's         signature." }, "setApproval(uint256,address,uint256)": { "notice": "Allows a user to set an approval for an individual asset with         specific amount." }, "setApprovalBridge(uint256,address,uint256,address)": { "notice": "Allows the compatibility linking contract to forward calls to         set asset approvals." }, "setApprovalForAll(address,bool)": { "notice": "Allows a user to approve an operator to use all of their assets." }, "setFeeCollector(address)": { "notice": "Allows governance to change the fee collector." }, "setGovernance(address)": { "notice": "Allows governance to change governance." }, "setPauser(address,bool)": { "notice": "Allows governance to change the pauser status of an address." }, "setSweepCollector(address)": { "notice": "Allows governance to change the sweep collector." }, "sweep(address)": { "notice": "Transfers the contract's balance of a target token to the sweep         collector address." }, "symbol(uint256)": { "notice": "Gets the symbol of a sub-token." }, "totalSupply(uint256)": { "notice": "Gets the total supply of a sub-token." }, "transferFrom(uint256,address,address,uint256)": { "notice": "Transfers an amount of assets from the source to the destination." }, "transferFromBridge(uint256,address,address,uint256,address)": { "notice": "Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge." } }, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/external/HyperdriveTarget0.sol": "HyperdriveTarget0" }, "libraries": {} }, "sources": { "contracts/src/external/HyperdriveTarget0.sol": { "keccak256": "0x7336935ca8a1b3985f01f923c8444e0eaeffe1ce71ae2a84bf2514cc502b913d", "urls": ["bzz-raw://bd572503e6cc9f49d7cacef4242fa485035b7e46090c82bbfe2f4e9f9ed14597", "dweb:/ipfs/QmaXKWM58hzKtwtq7jn6pwY5UF7EtaL2sQW6mNXpaonckZ"], "license": "Apache-2.0" }, "contracts/src/interfaces/IERC20.sol": { "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9", "urls": ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952", "urls": ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e", "urls": ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0", "urls": ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55", "urls": ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501", "urls": ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb", "urls": ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca", "urls": ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0", "urls": ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveAdmin.sol": { "keccak256": "0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d", "urls": ["bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603", "dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveBase.sol": { "keccak256": "0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb", "urls": ["bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6", "dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveCheckpoint.sol": { "keccak256": "0x3514b829c99e0015385ff08dd1479e452529a6283e8b6800946542ff21dc9649", "urls": ["bzz-raw://37ffd17baea5080f4184372ac835bf60694760499756235a61e41a480f4ab3c7", "dweb:/ipfs/QmUzEnJhRhpW18MH7GyXsug9u5FLehNfgjR7RAhZizLLVd"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLP.sol": { "keccak256": "0x72410851e77940e66681e23b9d10f3c3de0e8c9a3e5b1cca627e93bba431775d", "urls": ["bzz-raw://82a9292f388b16572cc5c5e873d1ead666ddcc3e436cf5d7fb036fd6c63ee9a2", "dweb:/ipfs/Qmauzxkn46ACS4XV43m2MbDF91KYP4ExYwSxL3cm1SDL6j"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveLong.sol": { "keccak256": "0xe791adb5c58a73ff2c978fcc79153f9042702e2c4fc5d71f60534323d5ba4832", "urls": ["bzz-raw://7ec4adf40e5f90574c7484ddeeed41cbe1f60b29847b18b169aa3130b8882aa7", "dweb:/ipfs/QmeY9y922jhcLzGw9d4VUNNoDkUeFhTJ8ZVThrvqzcGGjm"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveMultiToken.sol": { "keccak256": "0x21a9aafb8e23a22c77111e13538fa8f709446e4f3a64ef84b2eebc2aa9d04373", "urls": ["bzz-raw://41517912353540de5b430587ca8220f9d34d4432d3c723951d5fb618d5907b5d", "dweb:/ipfs/QmU3cTCrAq94digVS97s5af1Pu86uGBpmpus6w7828fUbG"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveShort.sol": { "keccak256": "0xc42b5a9ee5eee3cb9177b136eb9f4b81a4b51d9468f8faa97309934b6b371bc5", "urls": ["bzz-raw://b9291237fcdbb8ff97517acd19499cfa4afc6d670a89fd5cc0309a201a7b1006", "dweb:/ipfs/QmfQmUwvGhJgPFyNaHvur8AViePBzvSBNAdaZJBwMkY5Je"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveStorage.sol": { "keccak256": "0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a", "urls": ["bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195", "dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N"], "license": "Apache-2.0" }, "contracts/src/libraries/AssetId.sol": { "keccak256": "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b", "urls": ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"], "license": "Apache-2.0" }, "contracts/src/libraries/Errors.sol": { "keccak256": "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0", "urls": ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"], "license": "Apache-2.0" }, "contracts/src/libraries/FixedPointMath.sol": { "keccak256": "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076", "urls": ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"], "license": "Apache-2.0" }, "contracts/src/libraries/HyperdriveMath.sol": { "keccak256": "0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab", "urls": ["bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002", "dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY"], "license": "Apache-2.0" }, "contracts/src/libraries/LPMath.sol": { "keccak256": "0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067", "urls": ["bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f", "dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ"], "license": "Apache-2.0" }, "contracts/src/libraries/SafeCast.sol": { "keccak256": "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148", "urls": ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"], "license": "Apache-2.0" }, "contracts/src/libraries/YieldSpaceMath.sol": { "keccak256": "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891", "urls": ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"], "license": "Apache-2.0" }, "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": { "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7", "urls": ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80", "urls": ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": { "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70", "urls": ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": { "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2", "urls": ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": { "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff", "urls": ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": { "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386", "urls": ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Address.sol": { "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721", "urls": ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Context.sol": { "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2", "urls": ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": { "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236", "urls": ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"], "license": "MIT" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/external/HyperdriveTarget0.sol", "id": 5410, "exportedSymbols": { "AssetId": [18642], "FixedPointMath": [19442], "HyperdriveAdmin": [13205], "HyperdriveCheckpoint": [14845], "HyperdriveLP": [15747], "HyperdriveLong": [16681], "HyperdriveMultiToken": [17165], "HyperdriveShort": [18151], "HyperdriveStorage": [18367], "HyperdriveTarget0": [5409], "IERC20": [10358], "IHyperdrive": [11076], "IHyperdriveRead": [11913], "LPMath": [22134] }, "nodeType": "SourceUnit", "src": "39:18101:37", "nodes": [{ "id": 4611, "nodeType": "PragmaDirective", "src": "39:23:37", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 4613, "nodeType": "ImportDirective", "src": "64:50:37", "nodes": [], "absolutePath": "contracts/src/interfaces/IERC20.sol", "file": "../interfaces/IERC20.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 10359, "symbolAliases": [{ "foreign": { "id": 4612, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10358, "src": "73:6:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4615, "nodeType": "ImportDirective", "src": "115:60:37", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "../interfaces/IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 11077, "symbolAliases": [{ "foreign": { "id": 4614, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "124:11:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4617, "nodeType": "ImportDirective", "src": "176:68:37", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdriveRead.sol", "file": "../interfaces/IHyperdriveRead.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 11914, "symbolAliases": [{ "foreign": { "id": 4616, "name": "IHyperdriveRead", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11913, "src": "185:15:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4619, "nodeType": "ImportDirective", "src": "245:66:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveAdmin.sol", "file": "../internal/HyperdriveAdmin.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 13206, "symbolAliases": [{ "foreign": { "id": 4618, "name": "HyperdriveAdmin", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13205, "src": "254:15:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4621, "nodeType": "ImportDirective", "src": "312:76:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveCheckpoint.sol", "file": "../internal/HyperdriveCheckpoint.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 14846, "symbolAliases": [{ "foreign": { "id": 4620, "name": "HyperdriveCheckpoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14845, "src": "321:20:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4623, "nodeType": "ImportDirective", "src": "389:64:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLong.sol", "file": "../internal/HyperdriveLong.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 16682, "symbolAliases": [{ "foreign": { "id": 4622, "name": "HyperdriveLong", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16681, "src": "398:14:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4625, "nodeType": "ImportDirective", "src": "454:60:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveLP.sol", "file": "../internal/HyperdriveLP.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 15748, "symbolAliases": [{ "foreign": { "id": 4624, "name": "HyperdriveLP", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15747, "src": "463:12:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4627, "nodeType": "ImportDirective", "src": "515:76:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveMultiToken.sol", "file": "../internal/HyperdriveMultiToken.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 17166, "symbolAliases": [{ "foreign": { "id": 4626, "name": "HyperdriveMultiToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17165, "src": "524:20:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4629, "nodeType": "ImportDirective", "src": "592:66:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveShort.sol", "file": "../internal/HyperdriveShort.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 18152, "symbolAliases": [{ "foreign": { "id": 4628, "name": "HyperdriveShort", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18151, "src": "601:15:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4631, "nodeType": "ImportDirective", "src": "659:70:37", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveStorage.sol", "file": "../internal/HyperdriveStorage.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 18368, "symbolAliases": [{ "foreign": { "id": 4630, "name": "HyperdriveStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18367, "src": "668:17:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4633, "nodeType": "ImportDirective", "src": "730:51:37", "nodes": [], "absolutePath": "contracts/src/libraries/AssetId.sol", "file": "../libraries/AssetId.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 18643, "symbolAliases": [{ "foreign": { "id": 4632, "name": "AssetId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18642, "src": "739:7:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4635, "nodeType": "ImportDirective", "src": "782:65:37", "nodes": [], "absolutePath": "contracts/src/libraries/FixedPointMath.sol", "file": "../libraries/FixedPointMath.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 19443, "symbolAliases": [{ "foreign": { "id": 4634, "name": "FixedPointMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19442, "src": "791:14:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 4637, "nodeType": "ImportDirective", "src": "848:49:37", "nodes": [], "absolutePath": "contracts/src/libraries/LPMath.sol", "file": "../libraries/LPMath.sol", "nameLocation": "-1:-1:-1", "scope": 5410, "sourceUnit": 22135, "symbolAliases": [{ "foreign": { "id": 4636, "name": "LPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22134, "src": "857:6:37", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 5409, "nodeType": "ContractDefinition", "src": "1219:16920:37", "nodes": [{ "id": 4655, "nodeType": "UsingForDirective", "src": "1416:33:37", "nodes": [], "global": false, "libraryName": { "id": 4653, "name": "FixedPointMath", "nameLocations": ["1422:14:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 19442, "src": "1422:14:37" }, "typeName": { "id": 4654, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1441:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } } }, { "id": 4666, "nodeType": "FunctionDefinition", "src": "1558:94:37", "nodes": [], "body": { "id": 4665, "nodeType": "Block", "src": "1650:2:37", "nodes": [], "statements": [] }, "documentation": { "id": 4656, "nodeType": "StructuredDocumentation", "src": "1455:98:37", "text": "@notice Instantiates target0.\n @param _config The configuration of the Hyperdrive pool." }, "implemented": true, "kind": "constructor", "modifiers": [{ "arguments": [{ "id": 4662, "name": "_config", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4659, "src": "1641:7:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig memory" } }], "id": 4663, "kind": "baseConstructorSpecifier", "modifierName": { "id": 4661, "name": "HyperdriveStorage", "nameLocations": ["1623:17:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 18367, "src": "1623:17:37" }, "nodeType": "ModifierInvocation", "src": "1623:26:37" }], "name": "", "nameLocation": "-1:-1:-1", "parameters": { "id": 4660, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4659, "mutability": "mutable", "name": "_config", "nameLocation": "1609:7:37", "nodeType": "VariableDeclaration", "scope": 4666, "src": "1579:37:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig" }, "typeName": { "id": 4658, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4657, "name": "IHyperdrive.PoolConfig", "nameLocations": ["1579:11:37", "1591:10:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10867, "src": "1579:22:37" }, "referencedDeclaration": 10867, "src": "1579:22:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_storage_ptr", "typeString": "struct IHyperdrive.PoolConfig" } }, "visibility": "internal" }], "src": "1569:53:37" }, "returnParameters": { "id": 4664, "nodeType": "ParameterList", "parameters": [], "src": "1650:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 4680, "nodeType": "FunctionDefinition", "src": "2027:174:37", "nodes": [], "body": { "id": 4679, "nodeType": "Block", "src": "2146:55:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4676, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4670, "src": "2185:8:37", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" }], "id": 4675, "name": "_collectGovernanceFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12979, "src": "2163:21:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Options_$10923_calldata_ptr_$returns$_t_uint256_$", "typeString": "function (struct IHyperdrive.Options calldata) returns (uint256)" } }, "id": 4677, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2163:31:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 4674, "id": 4678, "nodeType": "Return", "src": "2156:38:37" }] }, "documentation": { "id": 4667, "nodeType": "StructuredDocumentation", "src": "1677:345:37", "text": "@notice This function collects the governance fees accrued by the pool.\n @param _options The options that configure how the fees are settled.\n @return proceeds The governance fees collected. The units of this\n         quantity are either base or vault shares, depending on the value\n         of `_options.asBase`." }, "functionSelector": "3e691db9", "implemented": true, "kind": "function", "modifiers": [], "name": "collectGovernanceFee", "nameLocation": "2036:20:37", "parameters": { "id": 4671, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4670, "mutability": "mutable", "name": "_options", "nameLocation": "2095:8:37", "nodeType": "VariableDeclaration", "scope": 4680, "src": "2066:37:37", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 4669, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4668, "name": "IHyperdrive.Options", "nameLocations": ["2066:11:37", "2078:7:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10923, "src": "2066:19:37" }, "referencedDeclaration": 10923, "src": "2066:19:37", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10923_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "2056:53:37" }, "returnParameters": { "id": 4674, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4673, "mutability": "mutable", "name": "proceeds", "nameLocation": "2136:8:37", "nodeType": "VariableDeclaration", "scope": 4680, "src": "2128:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4672, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2128:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "2127:18:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4691, "nodeType": "FunctionDefinition", "src": "2353:70:37", "nodes": [], "body": { "id": 4690, "nodeType": "Block", "src": "2391:32:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4687, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4683, "src": "2408:7:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 4686, "name": "_pause", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13008, "src": "2401:6:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)" } }, "id": 4688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2401:15:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4689, "nodeType": "ExpressionStatement", "src": "2401:15:37" }] }, "documentation": { "id": 4681, "nodeType": "StructuredDocumentation", "src": "2207:141:37", "text": "@notice Allows an authorized address to pause this contract.\n @param _status True to pause all deposits and false to unpause them." }, "functionSelector": "02329a29", "implemented": true, "kind": "function", "modifiers": [], "name": "pause", "nameLocation": "2362:5:37", "parameters": { "id": 4684, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4683, "mutability": "mutable", "name": "_status", "nameLocation": "2373:7:37", "nodeType": "VariableDeclaration", "scope": 4691, "src": "2368:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4682, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2368:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "2367:14:37" }, "returnParameters": { "id": 4685, "nodeType": "ParameterList", "parameters": [], "src": "2391:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4702, "nodeType": "FunctionDefinition", "src": "2543:87:37", "nodes": [], "body": { "id": 4701, "nodeType": "Block", "src": "2591:39:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4698, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4694, "src": "2618:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4697, "name": "_setFeeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13034, "src": "2601:16:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 4699, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2601:22:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4700, "nodeType": "ExpressionStatement", "src": "2601:22:37" }] }, "documentation": { "id": 4692, "nodeType": "StructuredDocumentation", "src": "2429:109:37", "text": "@notice Allows governance to change the fee collector.\n @param _who The new fee collector address." }, "functionSelector": "a42dce80", "implemented": true, "kind": "function", "modifiers": [], "name": "setFeeCollector", "nameLocation": "2552:15:37", "parameters": { "id": 4695, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4694, "mutability": "mutable", "name": "_who", "nameLocation": "2576:4:37", "nodeType": "VariableDeclaration", "scope": 4702, "src": "2568:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4693, "name": "address", "nodeType": "ElementaryTypeName", "src": "2568:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2567:14:37" }, "returnParameters": { "id": 4696, "nodeType": "ParameterList", "parameters": [], "src": "2591:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4713, "nodeType": "FunctionDefinition", "src": "2754:91:37", "nodes": [], "body": { "id": 4712, "nodeType": "Block", "src": "2804:41:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4709, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4705, "src": "2833:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4708, "name": "_setSweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13060, "src": "2814:18:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 4710, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2814:24:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4711, "nodeType": "ExpressionStatement", "src": "2814:24:37" }] }, "documentation": { "id": 4703, "nodeType": "StructuredDocumentation", "src": "2636:113:37", "text": "@notice Allows governance to change the sweep collector.\n @param _who The new sweep collector address." }, "functionSelector": "e4af29d1", "implemented": true, "kind": "function", "modifiers": [], "name": "setSweepCollector", "nameLocation": "2763:17:37", "parameters": { "id": 4706, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4705, "mutability": "mutable", "name": "_who", "nameLocation": "2789:4:37", "nodeType": "VariableDeclaration", "scope": 4713, "src": "2781:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4704, "name": "address", "nodeType": "ElementaryTypeName", "src": "2781:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2780:14:37" }, "returnParameters": { "id": 4707, "nodeType": "ParameterList", "parameters": [], "src": "2804:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4724, "nodeType": "FunctionDefinition", "src": "2955:83:37", "nodes": [], "body": { "id": 4723, "nodeType": "Block", "src": "3001:37:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4720, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4716, "src": "3026:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 4719, "name": "_setGovernance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13086, "src": "3011:14:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 4721, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3011:20:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4722, "nodeType": "ExpressionStatement", "src": "3011:20:37" }] }, "documentation": { "id": 4714, "nodeType": "StructuredDocumentation", "src": "2851:99:37", "text": "@notice Allows governance to change governance.\n @param _who The new governance address." }, "functionSelector": "ab033ea9", "implemented": true, "kind": "function", "modifiers": [], "name": "setGovernance", "nameLocation": "2964:13:37", "parameters": { "id": 4717, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4716, "mutability": "mutable", "name": "_who", "nameLocation": "2986:4:37", "nodeType": "VariableDeclaration", "scope": 4724, "src": "2978:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4715, "name": "address", "nodeType": "ElementaryTypeName", "src": "2978:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "2977:14:37" }, "returnParameters": { "id": 4718, "nodeType": "ParameterList", "parameters": [], "src": "3001:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4738, "nodeType": "FunctionDefinition", "src": "3208:94:37", "nodes": [], "body": { "id": 4737, "nodeType": "Block", "src": "3262:40:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4733, "name": "who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4727, "src": "3283:3:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4734, "name": "status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4729, "src": "3288:6:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 4732, "name": "_setPauser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13117, "src": "3272:10:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,bool)" } }, "id": 4735, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3272:23:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4736, "nodeType": "ExpressionStatement", "src": "3272:23:37" }] }, "documentation": { "id": 4725, "nodeType": "StructuredDocumentation", "src": "3044:159:37", "text": "@notice Allows governance to change the pauser status of an address.\n @param who The address to change.\n @param status The new pauser status." }, "functionSelector": "7180c8ca", "implemented": true, "kind": "function", "modifiers": [], "name": "setPauser", "nameLocation": "3217:9:37", "parameters": { "id": 4730, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4727, "mutability": "mutable", "name": "who", "nameLocation": "3235:3:37", "nodeType": "VariableDeclaration", "scope": 4738, "src": "3227:11:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4726, "name": "address", "nodeType": "ElementaryTypeName", "src": "3227:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4729, "mutability": "mutable", "name": "status", "nameLocation": "3245:6:37", "nodeType": "VariableDeclaration", "scope": 4738, "src": "3240:11:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4728, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3240:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "3226:26:37" }, "returnParameters": { "id": 4731, "nodeType": "ParameterList", "parameters": [], "src": "3262:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4750, "nodeType": "FunctionDefinition", "src": "3708:72:37", "nodes": [], "body": { "id": 4749, "nodeType": "Block", "src": "3748:32:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4746, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4742, "src": "3765:7:37", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" }], "id": 4745, "name": "_sweep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13204, "src": "3758:6:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10358_$returns$__$", "typeString": "function (contract IERC20)" } }, "id": 4747, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3758:15:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4748, "nodeType": "ExpressionStatement", "src": "3758:15:37" }] }, "documentation": { "id": 4739, "nodeType": "StructuredDocumentation", "src": "3308:395:37", "text": "@notice Transfers the contract's balance of a target token to the sweep\n         collector address.\n @dev WARN: It is unlikely but possible that there is a selector overlap\n      with 'transfer'. Any integrating contracts should be checked\n      for that, as it may result in an unexpected call from this address.\n @param _target The target token to sweep." }, "functionSelector": "01681a62", "implemented": true, "kind": "function", "modifiers": [], "name": "sweep", "nameLocation": "3717:5:37", "parameters": { "id": 4743, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4742, "mutability": "mutable", "name": "_target", "nameLocation": "3730:7:37", "nodeType": "VariableDeclaration", "scope": 4750, "src": "3723:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" }, "typeName": { "id": 4741, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4740, "name": "IERC20", "nameLocations": ["3723:6:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10358, "src": "3723:6:37" }, "referencedDeclaration": 10358, "src": "3723:6:37", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }, "visibility": "internal" }], "src": "3722:16:37" }, "returnParameters": { "id": 4744, "nodeType": "ParameterList", "parameters": [], "src": "3748:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4772, "nodeType": "FunctionDefinition", "src": "4114:240:37", "nodes": [], "body": { "id": 4771, "nodeType": "Block", "src": "4242:112:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4763, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4753, "src": "4309:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4764, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4755, "src": "4318:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4765, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4757, "src": "4324:2:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4766, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4759, "src": "4328:6:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 4767, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4336:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 4768, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4340:6:37", "memberName": "sender", "nodeType": "MemberAccess", "src": "4336:10:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 4762, "name": "_transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16889, "src": "4295:13:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,address,uint256,address)" } }, "id": 4769, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4295:52:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4770, "nodeType": "ExpressionStatement", "src": "4295:52:37" }] }, "documentation": { "id": 4751, "nodeType": "StructuredDocumentation", "src": "3810:299:37", "text": "@notice Transfers an amount of assets from the source to the destination.\n @param tokenID The token identifier.\n @param from The address whose balance will be reduced.\n @param to The address whose balance will be increased.\n @param amount The amount of token to move." }, "functionSelector": "1c0f12b6", "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "4123:12:37", "parameters": { "id": 4760, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4753, "mutability": "mutable", "name": "tokenID", "nameLocation": "4153:7:37", "nodeType": "VariableDeclaration", "scope": 4772, "src": "4145:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4752, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4145:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4755, "mutability": "mutable", "name": "from", "nameLocation": "4178:4:37", "nodeType": "VariableDeclaration", "scope": 4772, "src": "4170:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4754, "name": "address", "nodeType": "ElementaryTypeName", "src": "4170:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4757, "mutability": "mutable", "name": "to", "nameLocation": "4200:2:37", "nodeType": "VariableDeclaration", "scope": 4772, "src": "4192:10:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4756, "name": "address", "nodeType": "ElementaryTypeName", "src": "4192:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4759, "mutability": "mutable", "name": "amount", "nameLocation": "4220:6:37", "nodeType": "VariableDeclaration", "scope": 4772, "src": "4212:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4758, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4212:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4135:97:37" }, "returnParameters": { "id": 4761, "nodeType": "ParameterList", "parameters": [], "src": "4242:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4798, "nodeType": "FunctionDefinition", "src": "4759:285:37", "nodes": [], "body": { "id": 4797, "nodeType": "Block", "src": "4937:107:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4790, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4775, "src": "5003:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4791, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4777, "src": "5012:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4792, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4779, "src": "5018:2:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4793, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4781, "src": "5022:6:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4794, "name": "caller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4783, "src": "5030:6:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 4789, "name": "_transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16889, "src": "4989:13:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,address,uint256,address)" } }, "id": 4795, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4989:48:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4796, "nodeType": "ExpressionStatement", "src": "4989:48:37" }] }, "documentation": { "id": 4773, "nodeType": "StructuredDocumentation", "src": "4360:394:37", "text": "@notice Permissioned transfer for the bridge to access, only callable by\n         the ERC20 linking bridge.\n @param tokenID The token identifier.\n @param from The address whose balance will be reduced.\n @param to The address whose balance will be increased.\n @param amount The amount of token to move.\n @param caller The msg.sender from the bridge." }, "functionSelector": "e44808bc", "implemented": true, "kind": "function", "modifiers": [{ "arguments": [{ "id": 4786, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4775, "src": "4928:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 4787, "kind": "modifierInvocation", "modifierName": { "id": 4785, "name": "onlyLinker", "nameLocations": ["4917:10:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 16714, "src": "4917:10:37" }, "nodeType": "ModifierInvocation", "src": "4917:19:37" }], "name": "transferFromBridge", "nameLocation": "4768:18:37", "parameters": { "id": 4784, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4775, "mutability": "mutable", "name": "tokenID", "nameLocation": "4804:7:37", "nodeType": "VariableDeclaration", "scope": 4798, "src": "4796:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4774, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4796:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4777, "mutability": "mutable", "name": "from", "nameLocation": "4829:4:37", "nodeType": "VariableDeclaration", "scope": 4798, "src": "4821:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4776, "name": "address", "nodeType": "ElementaryTypeName", "src": "4821:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4779, "mutability": "mutable", "name": "to", "nameLocation": "4851:2:37", "nodeType": "VariableDeclaration", "scope": 4798, "src": "4843:10:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4778, "name": "address", "nodeType": "ElementaryTypeName", "src": "4843:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4781, "mutability": "mutable", "name": "amount", "nameLocation": "4871:6:37", "nodeType": "VariableDeclaration", "scope": 4798, "src": "4863:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4780, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4863:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4783, "mutability": "mutable", "name": "caller", "nameLocation": "4895:6:37", "nodeType": "VariableDeclaration", "scope": 4798, "src": "4887:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4782, "name": "address", "nodeType": "ElementaryTypeName", "src": "4887:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4786:121:37" }, "returnParameters": { "id": 4788, "nodeType": "ParameterList", "parameters": [], "src": "4937:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4821, "nodeType": "FunctionDefinition", "src": "5551:225:37", "nodes": [], "body": { "id": 4820, "nodeType": "Block", "src": "5712:64:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4814, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4801, "src": "5735:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4815, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4803, "src": "5744:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4816, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4805, "src": "5754:6:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4817, "name": "caller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4807, "src": "5762:6:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 4813, "name": "_setApproval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "5722:12:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,uint256,address)" } }, "id": 4818, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5722:47:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4819, "nodeType": "ExpressionStatement", "src": "5722:47:37" }] }, "documentation": { "id": 4799, "nodeType": "StructuredDocumentation", "src": "5050:496:37", "text": "@notice Allows the compatibility linking contract to forward calls to\n         set asset approvals.\n @param tokenID The asset to approve the use of.\n @param operator The address who will be able to use the tokens.\n @param amount The max tokens the approved person can use, setting to\n        uint256.max will cause the value to never decrement [saving gas\n        on transfer].\n @param caller The eth address which called the linking contract." }, "functionSelector": "4ed2d6ac", "implemented": true, "kind": "function", "modifiers": [{ "arguments": [{ "id": 4810, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4801, "src": "5703:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 4811, "kind": "modifierInvocation", "modifierName": { "id": 4809, "name": "onlyLinker", "nameLocations": ["5692:10:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 16714, "src": "5692:10:37" }, "nodeType": "ModifierInvocation", "src": "5692:19:37" }], "name": "setApprovalBridge", "nameLocation": "5560:17:37", "parameters": { "id": 4808, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4801, "mutability": "mutable", "name": "tokenID", "nameLocation": "5595:7:37", "nodeType": "VariableDeclaration", "scope": 4821, "src": "5587:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4800, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5587:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4803, "mutability": "mutable", "name": "operator", "nameLocation": "5620:8:37", "nodeType": "VariableDeclaration", "scope": 4821, "src": "5612:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4802, "name": "address", "nodeType": "ElementaryTypeName", "src": "5612:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4805, "mutability": "mutable", "name": "amount", "nameLocation": "5646:6:37", "nodeType": "VariableDeclaration", "scope": 4821, "src": "5638:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4804, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5638:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4807, "mutability": "mutable", "name": "caller", "nameLocation": "5670:6:37", "nodeType": "VariableDeclaration", "scope": 4821, "src": "5662:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4806, "name": "address", "nodeType": "ElementaryTypeName", "src": "5662:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "5577:105:37" }, "returnParameters": { "id": 4812, "nodeType": "ParameterList", "parameters": [], "src": "5712:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4846, "nodeType": "FunctionDefinition", "src": "6008:277:37", "nodes": [], "body": { "id": 4845, "nodeType": "Block", "src": "6077:208:37", "nodes": [], "statements": [{ "expression": { "id": 4836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "baseExpression": { "id": 4829, "name": "_isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18260, "src": "6124:17:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" } }, "id": 4833, "indexExpression": { "expression": { "id": 4830, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6142:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 4831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6146:6:37", "memberName": "sender", "nodeType": "MemberAccess", "src": "6142:10:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6124:29:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 4834, "indexExpression": { "id": 4832, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4824, "src": "6154:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6124:39:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 4835, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4826, "src": "6166:8:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "6124:50:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 4837, "nodeType": "ExpressionStatement", "src": "6124:50:37" }, { "eventCall": { "arguments": [{ "expression": { "id": 4839, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6247:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 4840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6251:6:37", "memberName": "sender", "nodeType": "MemberAccess", "src": "6247:10:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4841, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4824, "src": "6259:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4842, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4826, "src": "6269:8:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 4838, "name": "ApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12164, "src": "6232:14:37", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)" } }, "id": 4843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6232:46:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4844, "nodeType": "EmitStatement", "src": "6227:51:37" }] }, "documentation": { "id": 4822, "nodeType": "StructuredDocumentation", "src": "5782:221:37", "text": "@notice Allows a user to approve an operator to use all of their assets.\n @param operator The eth address which can access the caller's assets.\n @param approved True to approve, false to remove approval." }, "functionSelector": "a22cb465", "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "6017:17:37", "parameters": { "id": 4827, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4824, "mutability": "mutable", "name": "operator", "nameLocation": "6043:8:37", "nodeType": "VariableDeclaration", "scope": 4846, "src": "6035:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4823, "name": "address", "nodeType": "ElementaryTypeName", "src": "6035:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4826, "mutability": "mutable", "name": "approved", "nameLocation": "6058:8:37", "nodeType": "VariableDeclaration", "scope": 4846, "src": "6053:13:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4825, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6053:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "6034:33:37" }, "returnParameters": { "id": 4828, "nodeType": "ParameterList", "parameters": [], "src": "6077:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4865, "nodeType": "FunctionDefinition", "src": "6715:179:37", "nodes": [], "body": { "id": 4864, "nodeType": "Block", "src": "6826:68:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4857, "name": "tokenID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4849, "src": "6849:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4858, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4851, "src": "6858:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4859, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4853, "src": "6868:6:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 4860, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6876:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 4861, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6880:6:37", "memberName": "sender", "nodeType": "MemberAccess", "src": "6876:10:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 4856, "name": "_setApproval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16918, "src": "6836:12:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,uint256,address)" } }, "id": 4862, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6836:51:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4863, "nodeType": "ExpressionStatement", "src": "6836:51:37" }] }, "documentation": { "id": 4847, "nodeType": "StructuredDocumentation", "src": "6291:419:37", "text": "@notice Allows a user to set an approval for an individual asset with\n         specific amount.\n @param tokenID The asset to approve the use of.\n @param operator The address who will be able to use the tokens.\n @param amount The max tokens the approved person can use, setting to\n        uint256.max will cause the value to never decrement (saving gas\n        on transfer)." }, "functionSelector": "9cd241af", "implemented": true, "kind": "function", "modifiers": [], "name": "setApproval", "nameLocation": "6724:11:37", "parameters": { "id": 4854, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4849, "mutability": "mutable", "name": "tokenID", "nameLocation": "6753:7:37", "nodeType": "VariableDeclaration", "scope": 4865, "src": "6745:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6745:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4851, "mutability": "mutable", "name": "operator", "nameLocation": "6778:8:37", "nodeType": "VariableDeclaration", "scope": 4865, "src": "6770:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4850, "name": "address", "nodeType": "ElementaryTypeName", "src": "6770:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4853, "mutability": "mutable", "name": "amount", "nameLocation": "6804:6:37", "nodeType": "VariableDeclaration", "scope": 4865, "src": "6796:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6796:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "6735:81:37" }, "returnParameters": { "id": 4855, "nodeType": "ParameterList", "parameters": [], "src": "6826:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4887, "nodeType": "FunctionDefinition", "src": "7181:209:37", "nodes": [], "body": { "id": 4886, "nodeType": "Block", "src": "7332:58:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4880, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4868, "src": "7361:4:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4881, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4870, "src": "7367:2:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4882, "name": "ids", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4873, "src": "7371:3:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" } }, { "id": 4883, "name": "values", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4876, "src": "7376:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" }, { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" }], "id": 4879, "name": "_batchTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16788, "src": "7342:18:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$", "typeString": "function (address,address,uint256[] calldata,uint256[] calldata)" } }, "id": 4884, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7342:41:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4885, "nodeType": "ExpressionStatement", "src": "7342:41:37" }] }, "documentation": { "id": 4866, "nodeType": "StructuredDocumentation", "src": "6900:276:37", "text": "@notice Transfers several assets from one account to another.\n @param from The source account.\n @param to The destination account.\n @param ids The array of token ids of the asset to transfer.\n @param values The amount of each token to transfer." }, "functionSelector": "17fad7fc", "implemented": true, "kind": "function", "modifiers": [], "name": "batchTransferFrom", "nameLocation": "7190:17:37", "parameters": { "id": 4877, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4868, "mutability": "mutable", "name": "from", "nameLocation": "7225:4:37", "nodeType": "VariableDeclaration", "scope": 4887, "src": "7217:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4867, "name": "address", "nodeType": "ElementaryTypeName", "src": "7217:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4870, "mutability": "mutable", "name": "to", "nameLocation": "7247:2:37", "nodeType": "VariableDeclaration", "scope": 4887, "src": "7239:10:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4869, "name": "address", "nodeType": "ElementaryTypeName", "src": "7239:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4873, "mutability": "mutable", "name": "ids", "nameLocation": "7278:3:37", "nodeType": "VariableDeclaration", "scope": 4887, "src": "7259:22:37", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 4871, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7259:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 4872, "nodeType": "ArrayTypeName", "src": "7259:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }, { "constant": false, "id": 4876, "mutability": "mutable", "name": "values", "nameLocation": "7310:6:37", "nodeType": "VariableDeclaration", "scope": 4887, "src": "7291:25:37", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 4874, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7291:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 4875, "nodeType": "ArrayTypeName", "src": "7291:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }], "src": "7207:115:37" }, "returnParameters": { "id": 4878, "nodeType": "ParameterList", "parameters": [], "src": "7332:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4922, "nodeType": "FunctionDefinition", "src": "8726:482:37", "nodes": [], "body": { "id": 4921, "nodeType": "Block", "src": "8981:227:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 4910, "name": "domainSeparator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4890, "src": "9018:15:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4911, "name": "permitTypeHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4892, "src": "9047:14:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4912, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "9075:5:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4913, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4896, "src": "9094:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 4914, "name": "_approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4898, "src": "9115:9:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "id": 4915, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4900, "src": "9138:8:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 4916, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4902, "src": "9160:1:37", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, { "id": 4917, "name": "r", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4904, "src": "9175:1:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 4918, "name": "s", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4906, "src": "9190:1:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint8", "typeString": "uint8" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }], "id": 4909, "name": "_permitForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17116, "src": "8991:13:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$", "typeString": "function (bytes32,bytes32,address,address,bool,uint256,uint8,bytes32,bytes32)" } }, "id": 4919, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "8991:210:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4920, "nodeType": "ExpressionStatement", "src": "8991:210:37" }] }, "documentation": { "id": 4888, "nodeType": "StructuredDocumentation", "src": "7396:1325:37", "text": "@notice Allows a caller who is not the owner of an account to execute\n         the functionality of 'approve' for all assets with the owner's\n         signature.\n @param domainSeparator The EIP712 domain separator of the contract.\n @param permitTypeHash The EIP712 domain separator of the contract.\n @param owner The owner of the account which is having the new approval set.\n @param spender The address which will be allowed to spend owner's tokens.\n @param _approved A boolean of the approval status to set to.\n @param deadline The timestamp which the signature must be submitted by\n        to be valid.\n @param v Extra ECDSA data which allows public key recovery from\n        signature assumed to be 27 or 28.\n @param r The r component of the ECDSA signature.\n @param s The s component of the ECDSA signature.\n @dev The signature for this function follows EIP 712 standard and should\n      be generated with the eth_signTypedData JSON RPC call instead of\n      the eth_sign JSON RPC call. If using out of date parity signing\n      libraries the v component may need to be adjusted. Also it is very\n      rare but possible for v to be other values, those values are not\n      supported." }, "functionSelector": "14e5f07b", "implemented": true, "kind": "function", "modifiers": [], "name": "permitForAll", "nameLocation": "8735:12:37", "parameters": { "id": 4907, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4890, "mutability": "mutable", "name": "domainSeparator", "nameLocation": "8765:15:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8757:23:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4889, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8757:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }, { "constant": false, "id": 4892, "mutability": "mutable", "name": "permitTypeHash", "nameLocation": "8798:14:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8790:22:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4891, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8790:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }, { "constant": false, "id": 4894, "mutability": "mutable", "name": "owner", "nameLocation": "8830:5:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8822:13:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4893, "name": "address", "nodeType": "ElementaryTypeName", "src": "8822:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4896, "mutability": "mutable", "name": "spender", "nameLocation": "8853:7:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8845:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4895, "name": "address", "nodeType": "ElementaryTypeName", "src": "8845:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 4898, "mutability": "mutable", "name": "_approved", "nameLocation": "8875:9:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8870:14:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4897, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8870:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 4900, "mutability": "mutable", "name": "deadline", "nameLocation": "8902:8:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8894:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4899, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8894:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 4902, "mutability": "mutable", "name": "v", "nameLocation": "8926:1:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8920:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 4901, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "8920:5:37", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "visibility": "internal" }, { "constant": false, "id": 4904, "mutability": "mutable", "name": "r", "nameLocation": "8945:1:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8937:9:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4903, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8937:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }, { "constant": false, "id": 4906, "mutability": "mutable", "name": "s", "nameLocation": "8964:1:37", "nodeType": "VariableDeclaration", "scope": 4922, "src": "8956:9:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 4905, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8956:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "src": "8747:224:37" }, "returnParameters": { "id": 4908, "nodeType": "ParameterList", "parameters": [], "src": "8981:0:37" }, "scope": 5409, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 4940, "nodeType": "FunctionDefinition", "src": "9370:121:37", "nodes": [], "body": { "id": 4939, "nodeType": "Block", "src": "9435:56:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "id": 4933, "name": "_pausers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18235, "src": "9464:8:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 4935, "indexExpression": { "id": 4934, "name": "_account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4925, "src": "9473:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9464:18:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }], "expression": { "id": 4931, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9453:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4932, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "9457:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "9453:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4936, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9453:30:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4930, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "9445:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 4937, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9445:39:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4938, "nodeType": "ExpressionStatement", "src": "9445:39:37" }] }, "baseFunctions": [11902], "documentation": { "id": 4923, "nodeType": "StructuredDocumentation", "src": "9235:130:37", "text": "@notice Gets the pauser status of an address.\n @param _account The account to check.\n @return The pauser status." }, "functionSelector": "46fbf68e", "implemented": true, "kind": "function", "modifiers": [], "name": "isPauser", "nameLocation": "9379:8:37", "parameters": { "id": 4926, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4925, "mutability": "mutable", "name": "_account", "nameLocation": "9396:8:37", "nodeType": "VariableDeclaration", "scope": 4940, "src": "9388:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4924, "name": "address", "nodeType": "ElementaryTypeName", "src": "9388:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "9387:18:37" }, "returnParameters": { "id": 4929, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4928, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4940, "src": "9429:4:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 4927, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9429:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "9428:6:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 4954, "nodeType": "FunctionDefinition", "src": "9566:101:37", "nodes": [], "body": { "id": 4953, "nodeType": "Block", "src": "9619:48:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "id": 4949, "name": "_baseToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18174, "src": "9648:10:37", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" }], "expression": { "id": 4947, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9637:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4948, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "9641:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "9637:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9637:22:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4946, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "9629:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 4951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9629:31:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4952, "nodeType": "ExpressionStatement", "src": "9629:31:37" }] }, "baseFunctions": [11843], "documentation": { "id": 4941, "nodeType": "StructuredDocumentation", "src": "9497:64:37", "text": "@notice Gets the base token.\n @return The base token." }, "functionSelector": "c55dae63", "implemented": true, "kind": "function", "modifiers": [], "name": "baseToken", "nameLocation": "9575:9:37", "parameters": { "id": 4942, "nodeType": "ParameterList", "parameters": [], "src": "9584:2:37" }, "returnParameters": { "id": 4945, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4944, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4954, "src": "9610:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 4943, "name": "address", "nodeType": "ElementaryTypeName", "src": "9610:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "9609:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 4973, "nodeType": "FunctionDefinition", "src": "9802:183:37", "nodes": [], "body": { "id": 4972, "nodeType": "Block", "src": "9918:67:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "id": 4966, "name": "_checkpoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18218, "src": "9947:12:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Checkpoint_$10766_storage_$", "typeString": "mapping(uint256 => struct IHyperdrive.Checkpoint storage ref)" } }, "id": 4968, "indexExpression": { "id": 4967, "name": "_checkpointTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4957, "src": "9960:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9947:29:37", "typeDescriptions": { "typeIdentifier": "t_struct$_Checkpoint_$10766_storage", "typeString": "struct IHyperdrive.Checkpoint storage ref" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_Checkpoint_$10766_storage", "typeString": "struct IHyperdrive.Checkpoint storage ref" }], "expression": { "id": 4964, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9936:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4965, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "9940:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "9936:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4969, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9936:41:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4963, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "9928:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 4970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9928:50:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4971, "nodeType": "ExpressionStatement", "src": "9928:50:37" }] }, "baseFunctions": [11852], "documentation": { "id": 4955, "nodeType": "StructuredDocumentation", "src": "9673:124:37", "text": "@notice Gets a specified checkpoint.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint." }, "functionSelector": "20fc4881", "implemented": true, "kind": "function", "modifiers": [], "name": "getCheckpoint", "nameLocation": "9811:13:37", "parameters": { "id": 4958, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4957, "mutability": "mutable", "name": "_checkpointTime", "nameLocation": "9842:15:37", "nodeType": "VariableDeclaration", "scope": 4973, "src": "9834:23:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4956, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9834:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "9824:39:37" }, "returnParameters": { "id": 4962, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4961, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4973, "src": "9887:29:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_Checkpoint_$10766_memory_ptr", "typeString": "struct IHyperdrive.Checkpoint" }, "typeName": { "id": 4960, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4959, "name": "IHyperdrive.Checkpoint", "nameLocations": ["9887:11:37", "9899:10:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10766, "src": "9887:22:37" }, "referencedDeclaration": 10766, "src": "9887:22:37", "typeDescriptions": { "typeIdentifier": "t_struct$_Checkpoint_$10766_storage_ptr", "typeString": "struct IHyperdrive.Checkpoint" } }, "visibility": "internal" }], "src": "9886:31:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 4993, "nodeType": "FunctionDefinition", "src": "10150:213:37", "nodes": [], "body": { "id": 4992, "nodeType": "Block", "src": "10251:112:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 4987, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 4985, "name": "_checkpointTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4976, "src": "10309:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "id": 4986, "name": "_positionDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18180, "src": "10327:17:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10309:35:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 4984, "name": "_nonNettedLongs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13654, "src": "10293:15:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256) view returns (int256)" } }, "id": 4988, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10293:52:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_int256", "typeString": "int256" }], "expression": { "id": 4982, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "10282:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 4983, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "10286:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "10282:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 4989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10282:64:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 4981, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "10261:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 4990, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10261:95:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 4991, "nodeType": "ExpressionStatement", "src": "10261:95:37" }] }, "baseFunctions": [11860], "documentation": { "id": 4974, "nodeType": "StructuredDocumentation", "src": "9991:154:37", "text": "@notice Gets the checkpoint exposure at a specified time.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint exposure." }, "functionSelector": "cf210e65", "implemented": true, "kind": "function", "modifiers": [], "name": "getCheckpointExposure", "nameLocation": "10159:21:37", "parameters": { "id": 4977, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4976, "mutability": "mutable", "name": "_checkpointTime", "nameLocation": "10198:15:37", "nodeType": "VariableDeclaration", "scope": 4993, "src": "10190:23:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 4975, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10190:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "10180:39:37" }, "returnParameters": { "id": 4980, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4979, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4993, "src": "10243:6:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" }, "typeName": { "id": 4978, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10243:6:37", "typeDescriptions": { "typeIdentifier": "t_int256", "typeString": "int256" } }, "visibility": "internal" }], "src": "10242:8:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5029, "nodeType": "FunctionDefinition", "src": "10568:1128:37", "nodes": [], "body": { "id": 5028, "nodeType": "Block", "src": "10675:1021:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "id": 5005, "name": "_baseToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18174, "src": "10790:10:37", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }, { "id": 5006, "name": "_linkerFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18238, "src": "10837:14:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 5007, "name": "_linkerCodeHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18241, "src": "10889:15:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 5008, "name": "_initialVaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18198, "src": "10950:23:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5009, "name": "_minimumShareReserves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18201, "src": "11017:21:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5010, "name": "_minimumTransactionAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18204, "src": "11086:25:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5011, "name": "_positionDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18180, "src": "11151:17:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5012, "name": "_checkpointDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18177, "src": "11210:19:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5013, "name": "_timeStretch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18183, "src": "11264:12:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5014, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18227, "src": "11310:11:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 5015, "name": "_feeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18221, "src": "11357:13:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 5016, "name": "_sweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18224, "src": "11408:15:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 5019, "name": "_curveFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18186, "src": "11493:9:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5020, "name": "_flatFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18189, "src": "11528:8:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5021, "name": "_governanceLPFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18192, "src": "11562:16:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 5022, "name": "_governanceZombieFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18195, "src": "11604:20:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5017, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "11451:11:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 5018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "11463:4:37", "memberName": "Fees", "nodeType": "MemberAccess", "referencedDeclaration": 10786, "src": "11451:16:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_struct$_Fees_$10786_storage_ptr_$", "typeString": "type(struct IHyperdrive.Fees storage pointer)" } }, "id": 5023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11451:195:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_Fees_$10786_memory_ptr", "typeString": "struct IHyperdrive.Fees memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_struct$_Fees_$10786_memory_ptr", "typeString": "struct IHyperdrive.Fees memory" }], "expression": { "id": 5003, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "10734:11:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 5004, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "10746:10:37", "memberName": "PoolConfig", "nodeType": "MemberAccess", "referencedDeclaration": 10867, "src": "10734:22:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_struct$_PoolConfig_$10867_storage_ptr_$", "typeString": "type(struct IHyperdrive.PoolConfig storage pointer)" } }, "id": 5024, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": ["10779:9:37", "10822:13:37", "10873:14:37", "10926:22:37", "10995:20:37", "11060:24:37", "11133:16:37", "11190:18:37", "11251:11:37", "11298:10:37", "11343:12:37", "11392:14:37", "11445:4:37"], "names": ["baseToken", "linkerFactory", "linkerCodeHash", "initialVaultSharePrice", "minimumShareReserves", "minimumTransactionAmount", "positionDuration", "checkpointDuration", "timeStretch", "governance", "feeCollector", "sweepCollector", "fees"], "nodeType": "FunctionCall", "src": "10734:931:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig memory" }], "expression": { "id": 5001, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "10706:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5002, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "10710:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "10706:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10706:973:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5000, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "10685:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5026, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10685:1004:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5027, "nodeType": "ExpressionStatement", "src": "10685:1004:37" }] }, "baseFunctions": [11874], "documentation": { "id": 4994, "nodeType": "StructuredDocumentation", "src": "10369:194:37", "text": "@notice Gets the pool's configuration parameters.\n @dev These parameters are immutable, so this should only need to be\n      called once.\n @return The PoolConfig struct." }, "functionSelector": "b0d96580", "implemented": true, "kind": "function", "modifiers": [], "name": "getPoolConfig", "nameLocation": "10577:13:37", "parameters": { "id": 4995, "nodeType": "ParameterList", "parameters": [], "src": "10590:2:37" }, "returnParameters": { "id": 4999, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 4998, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5029, "src": "10640:29:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_memory_ptr", "typeString": "struct IHyperdrive.PoolConfig" }, "typeName": { "id": 4997, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 4996, "name": "IHyperdrive.PoolConfig", "nameLocations": ["10640:11:37", "10652:10:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10867, "src": "10640:22:37" }, "referencedDeclaration": 10867, "src": "10640:22:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolConfig_$10867_storage_ptr", "typeString": "struct IHyperdrive.PoolConfig" } }, "visibility": "internal" }], "src": "10639:31:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5125, "nodeType": "FunctionDefinition", "src": "11865:1619:37", "nodes": [], "body": { "id": 5124, "nodeType": "Block", "src": "11940:1544:37", "nodes": [], "statements": [{ "assignments": [5037], "declarations": [{ "constant": false, "id": 5037, "mutability": "mutable", "name": "vaultSharePrice", "nameLocation": "11958:15:37", "nodeType": "VariableDeclaration", "scope": 5124, "src": "11950:23:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5036, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11950:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 5040, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 5038, "name": "_pricePerVaultShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13400, "src": "11976:19:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 5039, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "11976:21:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "11950:47:37" }, { "assignments": [5042], "declarations": [{ "constant": false, "id": 5042, "mutability": "mutable", "name": "lpTotalSupply", "nameLocation": "12015:13:37", "nodeType": "VariableDeclaration", "scope": 5124, "src": "12007:21:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5041, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12007:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 5055, "initialValue": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 5054, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 5051, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "baseExpression": { "id": 5043, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18253, "src": "12031:12:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)" } }, "id": 5046, "indexExpression": { "expression": { "id": 5044, "name": "AssetId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18642, "src": "12044:7:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_AssetId_$18642_$", "typeString": "type(library AssetId)" } }, "id": 5045, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "12052:12:37", "memberName": "_LP_ASSET_ID", "nodeType": "MemberAccess", "referencedDeclaration": 18375, "src": "12044:20:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12031:34:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "baseExpression": { "id": 5047, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18253, "src": "12080:12:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)" } }, "id": 5050, "indexExpression": { "expression": { "id": 5048, "name": "AssetId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18642, "src": "12093:7:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_AssetId_$18642_$", "typeString": "type(library AssetId)" } }, "id": 5049, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "12101:26:37", "memberName": "_WITHDRAWAL_SHARE_ASSET_ID", "nodeType": "MemberAccess", "referencedDeclaration": 18384, "src": "12093:34:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12080:48:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "12031:97:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": { "expression": { "id": 5052, "name": "_withdrawPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18212, "src": "12143:13:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage", "typeString": "struct IHyperdrive.WithdrawPool storage ref" } }, "id": 5053, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12157:15:37", "memberName": "readyToWithdraw", "nodeType": "MemberAccess", "referencedDeclaration": 10769, "src": "12143:29:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, "src": "12031:141:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "12007:165:37" }, { "assignments": [5057], "declarations": [{ "constant": false, "id": 5057, "mutability": "mutable", "name": "presentValue", "nameLocation": "12190:12:37", "nodeType": "VariableDeclaration", "scope": 5124, "src": "12182:20:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5056, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12182:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 5072, "initialValue": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 5060, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 5058, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5037, "src": "12205:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 5059, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12223:1:37", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "12205:19:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "hexValue": "30", "id": 5070, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12382:1:37", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "id": 5071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "12205:178:37", "trueExpression": { "arguments": [{ "id": 5068, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5037, "src": "12351:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "arguments": [{ "id": 5064, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5037, "src": "12308:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 5063, "name": "_getPresentValueParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13783, "src": "12285:22:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_PresentValueParams_$20442_memory_ptr_$", "typeString": "function (uint256) view returns (struct LPMath.PresentValueParams memory)" } }, "id": 5065, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12285:39:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_PresentValueParams_$20442_memory_ptr", "typeString": "struct LPMath.PresentValueParams memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_PresentValueParams_$20442_memory_ptr", "typeString": "struct LPMath.PresentValueParams memory" }], "expression": { "id": 5061, "name": "LPMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22134, "src": "12239:6:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_LPMath_$22134_$", "typeString": "type(library LPMath)" } }, "id": 5062, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "12263:21:37", "memberName": "calculatePresentValue", "nodeType": "MemberAccess", "referencedDeclaration": 20471, "src": "12239:45:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_struct$_PresentValueParams_$20442_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct LPMath.PresentValueParams memory) pure returns (uint256)" } }, "id": 5066, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12239:86:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 5067, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "12343:7:37", "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 18722, "src": "12239:111:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)" } }, "id": 5069, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "12239:128:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "12182:201:37" }, { "assignments": [5077], "declarations": [{ "constant": false, "id": 5077, "mutability": "mutable", "name": "poolInfo", "nameLocation": "12421:8:37", "nodeType": "VariableDeclaration", "scope": 5124, "src": "12393:36:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo" }, "typeName": { "id": 5076, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 5075, "name": "IHyperdrive.PoolInfo", "nameLocations": ["12393:11:37", "12405:8:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10913, "src": "12393:20:37" }, "referencedDeclaration": 10913, "src": "12393:20:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_storage_ptr", "typeString": "struct IHyperdrive.PoolInfo" } }, "visibility": "internal" }], "id": 5116, "initialValue": { "arguments": [{ "expression": { "id": 5080, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12482:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5081, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12495:13:37", "memberName": "shareReserves", "nodeType": "MemberAccess", "referencedDeclaration": 10728, "src": "12482:26:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5082, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12539:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5083, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12552:15:37", "memberName": "shareAdjustment", "nodeType": "MemberAccess", "referencedDeclaration": 10740, "src": "12539:28:37", "typeDescriptions": { "typeIdentifier": "t_int128", "typeString": "int128" } }, { "expression": { "id": 5084, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12601:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5085, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12614:18:37", "memberName": "zombieBaseProceeds", "nodeType": "MemberAccess", "referencedDeclaration": 10758, "src": "12601:31:37", "typeDescriptions": { "typeIdentifier": "t_uint112", "typeString": "uint112" } }, { "expression": { "id": 5086, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12667:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5087, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12680:19:37", "memberName": "zombieShareReserves", "nodeType": "MemberAccess", "referencedDeclaration": 10761, "src": "12667:32:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5088, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12727:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5089, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12740:12:37", "memberName": "bondReserves", "nodeType": "MemberAccess", "referencedDeclaration": 10731, "src": "12727:25:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "id": 5090, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5037, "src": "12783:15:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 5091, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12830:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5092, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12843:16:37", "memberName": "longsOutstanding", "nodeType": "MemberAccess", "referencedDeclaration": 10737, "src": "12830:29:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5093, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12898:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5094, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12911:23:37", "memberName": "longAverageMaturityTime", "nodeType": "MemberAccess", "referencedDeclaration": 10746, "src": "12898:36:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5095, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "12967:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5096, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "12980:17:37", "memberName": "shortsOutstanding", "nodeType": "MemberAccess", "referencedDeclaration": 10743, "src": "12967:30:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5097, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "13037:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5098, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13050:24:37", "memberName": "shortAverageMaturityTime", "nodeType": "MemberAccess", "referencedDeclaration": 10749, "src": "13037:37:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "id": 5099, "name": "lpTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5042, "src": "13103:13:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 5102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 5100, "name": "lpTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5042, "src": "13144:13:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "hexValue": "30", "id": 5101, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13161:1:37", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "13144:18:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "arguments": [{ "id": 5106, "name": "lpTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5042, "src": "13222:13:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5104, "name": "presentValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5057, "src": "13201:12:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 5105, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "13214:7:37", "memberName": "divDown", "nodeType": "MemberAccess", "referencedDeclaration": 18740, "src": "13201:20:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)" } }, "id": 5107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13201:35:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 5108, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "13144:92:37", "trueExpression": { "hexValue": "30", "id": 5103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13181:1:37", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 5109, "name": "_withdrawPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18212, "src": "13283:13:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage", "typeString": "struct IHyperdrive.WithdrawPool storage ref" } }, "id": 5110, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13297:15:37", "memberName": "readyToWithdraw", "nodeType": "MemberAccess", "referencedDeclaration": 10769, "src": "13283:29:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5111, "name": "_withdrawPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18212, "src": "13352:13:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage", "typeString": "struct IHyperdrive.WithdrawPool storage ref" } }, "id": 5112, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13366:8:37", "memberName": "proceeds", "nodeType": "MemberAccess", "referencedDeclaration": 10772, "src": "13352:22:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5113, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "13402:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 5114, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13415:12:37", "memberName": "longExposure", "nodeType": "MemberAccess", "referencedDeclaration": 10734, "src": "13402:25:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_int128", "typeString": "int128" }, { "typeIdentifier": "t_uint112", "typeString": "uint112" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }], "expression": { "id": 5078, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "12432:11:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 5079, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "12444:8:37", "memberName": "PoolInfo", "nodeType": "MemberAccess", "referencedDeclaration": 10913, "src": "12432:20:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_struct$_PoolInfo_$10913_storage_ptr_$", "typeString": "type(struct IHyperdrive.PoolInfo storage pointer)" } }, "id": 5115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": ["12467:13:37", "12522:15:37", "12581:18:37", "12646:19:37", "12713:12:37", "12766:15:37", "12812:16:37", "12873:23:37", "12948:17:37", "13011:24:37", "13088:13:37", "13130:12:37", "13250:31:37", "13326:24:37", "13388:12:37"], "names": ["shareReserves", "shareAdjustment", "zombieBaseProceeds", "zombieShareReserves", "bondReserves", "vaultSharePrice", "longsOutstanding", "longAverageMaturityTime", "shortsOutstanding", "shortAverageMaturityTime", "lpTotalSupply", "lpSharePrice", "withdrawalSharesReadyToWithdraw", "withdrawalSharesProceeds", "longExposure"], "nodeType": "FunctionCall", "src": "12432:1006:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo memory" } }, "nodeType": "VariableDeclarationStatement", "src": "12393:1045:37" }, { "expression": { "arguments": [{ "arguments": [{ "id": 5120, "name": "poolInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5077, "src": "13467:8:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo memory" }], "expression": { "id": 5118, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "13456:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5119, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "13460:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "13456:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13456:20:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5117, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "13448:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5122, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13448:29:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5123, "nodeType": "ExpressionStatement", "src": "13448:29:37" }] }, "baseFunctions": [11881], "documentation": { "id": 5030, "nodeType": "StructuredDocumentation", "src": "11702:158:37", "text": "@notice Gets info about the pool's reserves and other state that is\n         important to evaluate potential trades.\n @return The pool info." }, "functionSelector": "60246c88", "implemented": true, "kind": "function", "modifiers": [], "name": "getPoolInfo", "nameLocation": "11874:11:37", "parameters": { "id": 5031, "nodeType": "ParameterList", "parameters": [], "src": "11885:2:37" }, "returnParameters": { "id": 5035, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5034, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5125, "src": "11911:27:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_memory_ptr", "typeString": "struct IHyperdrive.PoolInfo" }, "typeName": { "id": 5033, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 5032, "name": "IHyperdrive.PoolInfo", "nameLocations": ["11911:11:37", "11923:8:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10913, "src": "11911:20:37" }, "referencedDeclaration": 10913, "src": "11911:20:37", "typeDescriptions": { "typeIdentifier": "t_struct$_PoolInfo_$10913_storage_ptr", "typeString": "struct IHyperdrive.PoolInfo" } }, "visibility": "internal" }], "src": "11910:29:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5146, "nodeType": "FunctionDefinition", "src": "13608:367:37", "nodes": [], "body": { "id": 5145, "nodeType": "Block", "src": "13719:256:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "expression": { "id": 5137, "name": "_withdrawPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18212, "src": "13842:13:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage", "typeString": "struct IHyperdrive.WithdrawPool storage ref" } }, "id": 5138, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13856:15:37", "memberName": "readyToWithdraw", "nodeType": "MemberAccess", "referencedDeclaration": 10769, "src": "13842:29:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }, { "expression": { "id": 5139, "name": "_withdrawPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18212, "src": "13903:13:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage", "typeString": "struct IHyperdrive.WithdrawPool storage ref" } }, "id": 5140, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "13917:8:37", "memberName": "proceeds", "nodeType": "MemberAccess", "referencedDeclaration": 10772, "src": "13903:22:37", "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint128", "typeString": "uint128" }, { "typeIdentifier": "t_uint128", "typeString": "uint128" }], "expression": { "id": 5135, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "13778:11:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 5136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "13790:12:37", "memberName": "WithdrawPool", "nodeType": "MemberAccess", "referencedDeclaration": 10773, "src": "13778:24:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_struct$_WithdrawPool_$10773_storage_ptr_$", "typeString": "type(struct IHyperdrive.WithdrawPool storage pointer)" } }, "id": 5141, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "nameLocations": ["13825:15:37", "13893:8:37"], "names": ["readyToWithdraw", "proceeds"], "nodeType": "FunctionCall", "src": "13778:166:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_memory_ptr", "typeString": "struct IHyperdrive.WithdrawPool memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_WithdrawPool_$10773_memory_ptr", "typeString": "struct IHyperdrive.WithdrawPool memory" }], "expression": { "id": 5133, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "13750:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5134, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "13754:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "13750:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5142, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13750:208:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5132, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "13729:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5143, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "13729:239:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5144, "nodeType": "ExpressionStatement", "src": "13729:239:37" }] }, "baseFunctions": [11894], "documentation": { "id": 5126, "nodeType": "StructuredDocumentation", "src": "13490:113:37", "text": "@notice Gets information about the withdrawal pool.\n @return Hyperdrive's withdrawal pool information." }, "functionSelector": "fba56008", "implemented": true, "kind": "function", "modifiers": [], "name": "getWithdrawPool", "nameLocation": "13617:15:37", "parameters": { "id": 5127, "nodeType": "ParameterList", "parameters": [], "src": "13632:2:37" }, "returnParameters": { "id": 5131, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5130, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5146, "src": "13682:31:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_memory_ptr", "typeString": "struct IHyperdrive.WithdrawPool" }, "typeName": { "id": 5129, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 5128, "name": "IHyperdrive.WithdrawPool", "nameLocations": ["13682:11:37", "13694:12:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10773, "src": "13682:24:37" }, "referencedDeclaration": 10773, "src": "13682:24:37", "typeDescriptions": { "typeIdentifier": "t_struct$_WithdrawPool_$10773_storage_ptr", "typeString": "struct IHyperdrive.WithdrawPool" } }, "visibility": "internal" }], "src": "13681:33:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5160, "nodeType": "FunctionDefinition", "src": "14128:132:37", "nodes": [], "body": { "id": 5159, "nodeType": "Block", "src": "14200:60:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "id": 5155, "name": "_governanceFeesAccrued", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18230, "src": "14229:22:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5153, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "14218:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5154, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "14222:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "14218:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5156, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14218:34:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5152, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "14210:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5157, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14210:43:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5158, "nodeType": "ExpressionStatement", "src": "14210:43:37" }] }, "baseFunctions": [11887], "documentation": { "id": 5147, "nodeType": "StructuredDocumentation", "src": "13981:142:37", "text": "@notice Gets info about the fees presently accrued by the pool.\n @return Governance fees denominated in shares yet to be collected." }, "functionSelector": "c69e16ad", "implemented": true, "kind": "function", "modifiers": [], "name": "getUncollectedGovernanceFees", "nameLocation": "14137:28:37", "parameters": { "id": 5148, "nodeType": "ParameterList", "parameters": [], "src": "14165:2:37" }, "returnParameters": { "id": 5151, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5150, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5160, "src": "14191:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14191:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "14190:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5175, "nodeType": "FunctionDefinition", "src": "14339:159:37", "nodes": [], "body": { "id": 5174, "nodeType": "Block", "src": "14448:50:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "id": 5170, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18208, "src": "14477:12:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_MarketState_$10762_storage", "typeString": "struct IHyperdrive.MarketState storage ref" }], "expression": { "id": 5168, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "14466:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5169, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "14470:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "14466:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14466:24:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5167, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "14458:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5172, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14458:33:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5173, "nodeType": "ExpressionStatement", "src": "14458:33:37" }] }, "baseFunctions": [11867], "documentation": { "id": 5161, "nodeType": "StructuredDocumentation", "src": "14266:68:37", "text": "@notice Gets the market state.\n @return The market state." }, "functionSelector": "d8165743", "implemented": true, "kind": "function", "modifiers": [], "name": "getMarketState", "nameLocation": "14348:14:37", "parameters": { "id": 5162, "nodeType": "ParameterList", "parameters": [], "src": "14362:2:37" }, "returnParameters": { "id": 5166, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5165, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5175, "src": "14412:30:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_memory_ptr", "typeString": "struct IHyperdrive.MarketState" }, "typeName": { "id": 5164, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 5163, "name": "IHyperdrive.MarketState", "nameLocations": ["14412:11:37", "14424:11:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 10762, "src": "14412:23:37" }, "referencedDeclaration": 10762, "src": "14412:23:37", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10762_storage_ptr", "typeString": "struct IHyperdrive.MarketState" } }, "visibility": "internal" }], "src": "14411:32:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5235, "nodeType": "FunctionDefinition", "src": "14739:565:37", "nodes": [], "body": { "id": 5234, "nodeType": "Block", "src": "14835:469:37", "nodes": [], "statements": [{ "assignments": [5189], "declarations": [{ "constant": false, "id": 5189, "mutability": "mutable", "name": "loaded", "nameLocation": "14862:6:37", "nodeType": "VariableDeclaration", "scope": 5234, "src": "14845:23:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]" }, "typeName": { "baseType": { "id": 5187, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14845:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "id": 5188, "nodeType": "ArrayTypeName", "src": "14845:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]" } }, "visibility": "internal" }], "id": 5196, "initialValue": { "arguments": [{ "expression": { "id": 5193, "name": "_slots", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5179, "src": "14885:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" } }, "id": 5194, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "14892:6:37", "memberName": "length", "nodeType": "MemberAccess", "src": "14885:13:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 5192, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "14871:13:37", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes32[] memory)" }, "typeName": { "baseType": { "id": 5190, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14875:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "id": 5191, "nodeType": "ArrayTypeName", "src": "14875:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]" } } }, "id": 5195, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "14871:28:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory" } }, "nodeType": "VariableDeclarationStatement", "src": "14845:54:37" }, { "body": { "id": 5225, "nodeType": "Block", "src": "15007:253:37", "statements": [{ "assignments": [5206], "declarations": [{ "constant": false, "id": 5206, "mutability": "mutable", "name": "slot", "nameLocation": "15029:4:37", "nodeType": "VariableDeclaration", "scope": 5225, "src": "15021:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5205, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15021:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 5210, "initialValue": { "baseExpression": { "id": 5207, "name": "_slots", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5179, "src": "15036:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" } }, "id": 5209, "indexExpression": { "id": 5208, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "15043:1:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15036:9:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "15021:24:37" }, { "assignments": [5212], "declarations": [{ "constant": false, "id": 5212, "mutability": "mutable", "name": "data", "nameLocation": "15067:4:37", "nodeType": "VariableDeclaration", "scope": 5225, "src": "15059:12:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 5211, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "15059:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "id": 5213, "nodeType": "VariableDeclarationStatement", "src": "15059:12:37" }, { "AST": { "nodeType": "YulBlock", "src": "15110:51:37", "statements": [{ "nodeType": "YulAssignment", "src": "15128:19:37", "value": { "arguments": [{ "name": "slot", "nodeType": "YulIdentifier", "src": "15142:4:37" }], "functionName": { "name": "sload", "nodeType": "YulIdentifier", "src": "15136:5:37" }, "nodeType": "YulFunctionCall", "src": "15136:11:37" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "15128:4:37" }] }] }, "evmVersion": "paris", "externalReferences": [{ "declaration": 5212, "isOffset": false, "isSlot": false, "src": "15128:4:37", "valueSize": 1 }, { "declaration": 5206, "isOffset": false, "isSlot": false, "src": "15142:4:37", "valueSize": 1 }], "flags": ["memory-safe"], "id": 5214, "nodeType": "InlineAssembly", "src": "15085:76:37" }, { "expression": { "id": 5219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 5215, "name": "loaded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5189, "src": "15174:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory" } }, "id": 5217, "indexExpression": { "id": 5216, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "15181:1:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15174:9:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 5218, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5212, "src": "15186:4:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "src": "15174:16:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "id": 5220, "nodeType": "ExpressionStatement", "src": "15174:16:37" }, { "id": 5224, "nodeType": "UncheckedBlock", "src": "15204:46:37", "statements": [{ "expression": { "id": 5222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "15232:3:37", "subExpression": { "id": 5221, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "15234:1:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 5223, "nodeType": "ExpressionStatement", "src": "15232:3:37" }] }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 5204, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 5201, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5198, "src": "14986:1:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "expression": { "id": 5202, "name": "_slots", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5179, "src": "14990:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[] calldata" } }, "id": 5203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "14997:6:37", "memberName": "length", "nodeType": "MemberAccess", "src": "14990:13:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "14986:17:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 5226, "initializationExpression": { "assignments": [5198], "declarations": [{ "constant": false, "id": 5198, "mutability": "mutable", "name": "i", "nameLocation": "14979:1:37", "nodeType": "VariableDeclaration", "scope": 5226, "src": "14971:9:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5197, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14971:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 5200, "initialValue": { "hexValue": "30", "id": 5199, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14983:1:37", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "14971:13:37" }, "nodeType": "ForStatement", "src": "14966:294:37" }, { "expression": { "arguments": [{ "arguments": [{ "id": 5230, "name": "loaded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5189, "src": "15289:6:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory" }], "expression": { "id": 5228, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "15278:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5229, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "15282:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "15278:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5231, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15278:18:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5227, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "15270:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15270:27:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5233, "nodeType": "ExpressionStatement", "src": "15270:27:37" }] }, "baseFunctions": [11912], "documentation": { "id": 5176, "nodeType": "StructuredDocumentation", "src": "14504:230:37", "text": "@notice Allows plugin data libs to provide getters or other complex\n         logic instead of the main.\n @param _slots The storage slots the caller wants the data from.\n @return A raw array of loaded data." }, "functionSelector": "becee9c3", "implemented": true, "kind": "function", "modifiers": [], "name": "load", "nameLocation": "14748:4:37", "parameters": { "id": 5180, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5179, "mutability": "mutable", "name": "_slots", "nameLocation": "14781:6:37", "nodeType": "VariableDeclaration", "scope": 5235, "src": "14762:25:37", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr", "typeString": "uint256[]" }, "typeName": { "baseType": { "id": 5177, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14762:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 5178, "nodeType": "ArrayTypeName", "src": "14762:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]" } }, "visibility": "internal" }], "src": "14752:41:37" }, "returnParameters": { "id": 5184, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5183, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5235, "src": "14817:16:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]" }, "typeName": { "baseType": { "id": 5181, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14817:7:37", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "id": 5182, "nodeType": "ArrayTypeName", "src": "14817:9:37", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]" } }, "visibility": "internal" }], "src": "14816:18:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5257, "nodeType": "FunctionDefinition", "src": "15474:173:37", "nodes": [], "body": { "id": 5256, "nodeType": "Block", "src": "15581:66:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "baseExpression": { "id": 5248, "name": "_balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18248, "src": "15610:10:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(uint256 => mapping(address => uint256))" } }, "id": 5250, "indexExpression": { "id": 5249, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5238, "src": "15621:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15610:19:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 5252, "indexExpression": { "id": 5251, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5240, "src": "15630:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15610:28:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5246, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "15599:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5247, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "15603:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "15599:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5253, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15599:40:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5245, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "15591:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15591:49:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5255, "nodeType": "ExpressionStatement", "src": "15591:49:37" }] }, "baseFunctions": [12244], "documentation": { "id": 5236, "nodeType": "StructuredDocumentation", "src": "15310:159:37", "text": "@notice Gets an account's balance of a sub-token.\n @param tokenId The sub-token id.\n @param account The account.\n @return The balance." }, "functionSelector": "3656eec2", "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "15483:9:37", "parameters": { "id": 5241, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5238, "mutability": "mutable", "name": "tokenId", "nameLocation": "15510:7:37", "nodeType": "VariableDeclaration", "scope": 5257, "src": "15502:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15502:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 5240, "mutability": "mutable", "name": "account", "nameLocation": "15535:7:37", "nodeType": "VariableDeclaration", "scope": 5257, "src": "15527:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5239, "name": "address", "nodeType": "ElementaryTypeName", "src": "15527:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "15492:56:37" }, "returnParameters": { "id": 5244, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5243, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5257, "src": "15572:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5242, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15572:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "15571:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5275, "nodeType": "FunctionDefinition", "src": "15782:129:37", "nodes": [], "body": { "id": 5274, "nodeType": "Block", "src": "15852:59:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "id": 5268, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18253, "src": "15881:12:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)" } }, "id": 5270, "indexExpression": { "id": 5269, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5260, "src": "15894:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15881:21:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5266, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "15870:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5267, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "15874:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "15870:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15870:33:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5265, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "15862:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "15862:42:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5273, "nodeType": "ExpressionStatement", "src": "15862:42:37" }] }, "baseFunctions": [12212], "documentation": { "id": 5258, "nodeType": "StructuredDocumentation", "src": "15653:124:37", "text": "@notice Gets the total supply of a sub-token.\n @param tokenId The sub-token id.\n @return The total supply." }, "functionSelector": "bd85b039", "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "15791:11:37", "parameters": { "id": 5261, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5260, "mutability": "mutable", "name": "tokenId", "nameLocation": "15811:7:37", "nodeType": "VariableDeclaration", "scope": 5275, "src": "15803:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15803:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "15802:17:37" }, "returnParameters": { "id": 5264, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5263, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5275, "src": "15843:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5262, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15843:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "15842:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5297, "nodeType": "FunctionDefinition", "src": "16100:186:37", "nodes": [], "body": { "id": 5296, "nodeType": "Block", "src": "16212:74:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "baseExpression": { "id": 5288, "name": "_isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18260, "src": "16241:17:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))" } }, "id": 5290, "indexExpression": { "id": 5289, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5278, "src": "16259:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16241:26:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 5292, "indexExpression": { "id": 5291, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5280, "src": "16268:8:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16241:36:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }], "expression": { "id": 5286, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "16230:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5287, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "16234:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "16230:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5293, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16230:48:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5285, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "16222:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5294, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16222:57:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5295, "nodeType": "ExpressionStatement", "src": "16222:57:37" }] }, "baseFunctions": [12222], "documentation": { "id": 5276, "nodeType": "StructuredDocumentation", "src": "15917:178:37", "text": "@notice Gets the approval status of an operator for an account.\n @param account The account.\n @param operator The operator.\n @return The approval status." }, "functionSelector": "e985e9c5", "implemented": true, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "16109:16:37", "parameters": { "id": 5281, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5278, "mutability": "mutable", "name": "account", "nameLocation": "16143:7:37", "nodeType": "VariableDeclaration", "scope": 5297, "src": "16135:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5277, "name": "address", "nodeType": "ElementaryTypeName", "src": "16135:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 5280, "mutability": "mutable", "name": "operator", "nameLocation": "16168:8:37", "nodeType": "VariableDeclaration", "scope": 5297, "src": "16160:16:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5279, "name": "address", "nodeType": "ElementaryTypeName", "src": "16160:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "16125:57:37" }, "returnParameters": { "id": 5284, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5283, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5297, "src": "16206:4:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 5282, "name": "bool", "nodeType": "ElementaryTypeName", "src": "16206:4:37", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "16205:6:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5323, "nodeType": "FunctionDefinition", "src": "16514:223:37", "nodes": [], "body": { "id": 5322, "nodeType": "Block", "src": "16654:83:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "baseExpression": { "baseExpression": { "id": 5312, "name": "_perTokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18269, "src": "16683:18:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$", "typeString": "mapping(uint256 => mapping(address => mapping(address => uint256)))" } }, "id": 5314, "indexExpression": { "id": 5313, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5300, "src": "16702:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16683:27:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))" } }, "id": 5316, "indexExpression": { "id": 5315, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5302, "src": "16711:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16683:36:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 5318, "indexExpression": { "id": 5317, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5304, "src": "16720:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16683:45:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5310, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "16672:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5311, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "16676:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "16672:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16672:57:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5309, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "16664:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16664:66:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5321, "nodeType": "ExpressionStatement", "src": "16664:66:37" }] }, "baseFunctions": [12234], "documentation": { "id": 5298, "nodeType": "StructuredDocumentation", "src": "16292:217:37", "text": "@notice Gets the approval status of an operator for an account.\n @param tokenId The sub-token id.\n @param account The account.\n @param spender The spender.\n @return The approval status." }, "functionSelector": "21ff32a9", "implemented": true, "kind": "function", "modifiers": [], "name": "perTokenApprovals", "nameLocation": "16523:17:37", "parameters": { "id": 5305, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5300, "mutability": "mutable", "name": "tokenId", "nameLocation": "16558:7:37", "nodeType": "VariableDeclaration", "scope": 5323, "src": "16550:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5299, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16550:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 5302, "mutability": "mutable", "name": "account", "nameLocation": "16583:7:37", "nodeType": "VariableDeclaration", "scope": 5323, "src": "16575:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5301, "name": "address", "nodeType": "ElementaryTypeName", "src": "16575:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 5304, "mutability": "mutable", "name": "spender", "nameLocation": "16608:7:37", "nodeType": "VariableDeclaration", "scope": 5323, "src": "16600:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5303, "name": "address", "nodeType": "ElementaryTypeName", "src": "16600:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "16540:81:37" }, "returnParameters": { "id": 5308, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5307, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5323, "src": "16645:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16645:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "16644:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5339, "nodeType": "FunctionDefinition", "src": "16917:117:37", "nodes": [], "body": { "id": 5338, "nodeType": "Block", "src": "16975:59:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 5332, "name": "_baseToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18174, "src": "17004:10:37", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10358", "typeString": "contract IERC20" } }, "id": 5333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17015:8:37", "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 10333, "src": "17004:19:37", "typeDescriptions": { "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)" } }, "id": 5334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17004:21:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint8", "typeString": "uint8" }], "expression": { "id": 5330, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "16993:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5331, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "16997:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "16993:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5335, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16993:33:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5329, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "16985:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "16985:42:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5337, "nodeType": "ExpressionStatement", "src": "16985:42:37" }] }, "baseFunctions": [12188], "documentation": { "id": 5324, "nodeType": "StructuredDocumentation", "src": "16743:169:37", "text": "@notice Gets the decimals of the MultiToken. This is the same as the\n         decimals used by the base token.\n @return The decimals of the MultiToken." }, "functionSelector": "313ce567", "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "16926:8:37", "parameters": { "id": 5325, "nodeType": "ParameterList", "parameters": [], "src": "16934:2:37" }, "returnParameters": { "id": 5328, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5327, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5339, "src": "16968:5:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 5326, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "16968:5:37", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "visibility": "internal" }], "src": "16967:7:37" }, "scope": 5409, "stateMutability": "view", "virtual": true, "visibility": "external" }, { "id": 5358, "nodeType": "FunctionDefinition", "src": "17153:137:37", "nodes": [], "body": { "id": 5357, "nodeType": "Block", "src": "17222:68:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "id": 5352, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5342, "src": "17273:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5350, "name": "AssetId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18642, "src": "17251:7:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_AssetId_$18642_$", "typeString": "type(library AssetId)" } }, "id": 5351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17259:13:37", "memberName": "assetIdToName", "nodeType": "MemberAccess", "referencedDeclaration": 18503, "src": "17251:21:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) pure returns (string memory)" } }, "id": 5353, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17251:30:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "expression": { "id": 5348, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "17240:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5349, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "17244:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "17240:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5354, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17240:42:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5347, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "17232:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5355, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17232:51:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5356, "nodeType": "ExpressionStatement", "src": "17232:51:37" }] }, "baseFunctions": [12196], "documentation": { "id": 5340, "nodeType": "StructuredDocumentation", "src": "17040:108:37", "text": "@notice Gets the name of a sub-token.\n @param tokenId The sub-token id.\n @return The name." }, "functionSelector": "00ad800c", "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "17162:4:37", "parameters": { "id": 5343, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5342, "mutability": "mutable", "name": "tokenId", "nameLocation": "17175:7:37", "nodeType": "VariableDeclaration", "scope": 5358, "src": "17167:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5341, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17167:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "17166:17:37" }, "returnParameters": { "id": 5346, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5345, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5358, "src": "17207:13:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 5344, "name": "string", "nodeType": "ElementaryTypeName", "src": "17207:6:37", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "17206:15:37" }, "scope": 5409, "stateMutability": "pure", "virtual": false, "visibility": "external" }, { "id": 5377, "nodeType": "FunctionDefinition", "src": "17413:141:37", "nodes": [], "body": { "id": 5376, "nodeType": "Block", "src": "17484:70:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "id": 5371, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5361, "src": "17537:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5369, "name": "AssetId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18642, "src": "17513:7:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_AssetId_$18642_$", "typeString": "type(library AssetId)" } }, "id": 5370, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "17521:15:37", "memberName": "assetIdToSymbol", "nodeType": "MemberAccess", "referencedDeclaration": 18581, "src": "17513:23:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) pure returns (string memory)" } }, "id": 5372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17513:32:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "expression": { "id": 5367, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "17502:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5368, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "17506:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "17502:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17502:44:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5366, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "17494:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17494:53:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5375, "nodeType": "ExpressionStatement", "src": "17494:53:37" }] }, "baseFunctions": [12204], "documentation": { "id": 5359, "nodeType": "StructuredDocumentation", "src": "17296:112:37", "text": "@notice Gets the symbol of a sub-token.\n @param tokenId The sub-token id.\n @return The symbol." }, "functionSelector": "4e41a1fb", "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "17422:6:37", "parameters": { "id": 5362, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5361, "mutability": "mutable", "name": "tokenId", "nameLocation": "17437:7:37", "nodeType": "VariableDeclaration", "scope": 5377, "src": "17429:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5360, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17429:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "17428:17:37" }, "returnParameters": { "id": 5365, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5364, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5377, "src": "17469:13:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 5363, "name": "string", "nodeType": "ElementaryTypeName", "src": "17469:6:37", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "17468:15:37" }, "scope": 5409, "stateMutability": "pure", "virtual": false, "visibility": "external" }, { "id": 5395, "nodeType": "FunctionDefinition", "src": "17703:119:37", "nodes": [], "body": { "id": 5394, "nodeType": "Block", "src": "17768:54:37", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "baseExpression": { "id": 5388, "name": "_nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18274, "src": "17797:7:37", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 5390, "indexExpression": { "id": 5389, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5380, "src": "17805:7:37", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17797:16:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 5386, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "17786:3:37", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 5387, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "17790:6:37", "memberName": "encode", "nodeType": "MemberAccess", "src": "17786:10:37", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 5391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17786:28:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 5385, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5408, "src": "17778:7:37", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5392, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "17778:37:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5393, "nodeType": "ExpressionStatement", "src": "17778:37:37" }] }, "baseFunctions": [12252], "documentation": { "id": 5378, "nodeType": "StructuredDocumentation", "src": "17560:138:37", "text": "@notice Gets the permitForAll signature nonce for an account.\n @param account The account.\n @return The signature nonce." }, "functionSelector": "7ecebe00", "implemented": true, "kind": "function", "modifiers": [], "name": "nonces", "nameLocation": "17712:6:37", "parameters": { "id": 5381, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5380, "mutability": "mutable", "name": "account", "nameLocation": "17727:7:37", "nodeType": "VariableDeclaration", "scope": 5395, "src": "17719:15:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 5379, "name": "address", "nodeType": "ElementaryTypeName", "src": "17719:7:37", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "17718:17:37" }, "returnParameters": { "id": 5384, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5383, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5395, "src": "17759:7:37", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 5382, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17759:7:37", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "17758:9:37" }, "scope": 5409, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 5408, "nodeType": "FunctionDefinition", "src": "18031:106:37", "nodes": [], "body": { "id": 5407, "nodeType": "Block", "src": "18083:54:37", "nodes": [], "statements": [{ "errorCall": { "arguments": [{ "id": 5404, "name": "_bytes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5398, "src": "18123:6:37", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "id": 5401, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11076, "src": "18100:11:37", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11076_$", "typeString": "type(contract IHyperdrive)" } }, "id": 5403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "18112:10:37", "memberName": "ReturnData", "nodeType": "MemberAccess", "referencedDeclaration": 11012, "src": "18100:22:37", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (bytes memory) pure" } }, "id": 5405, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "18100:30:37", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 5406, "nodeType": "RevertStatement", "src": "18093:37:37" }] }, "documentation": { "id": 5396, "nodeType": "StructuredDocumentation", "src": "17849:177:37", "text": "@dev Reverts with the provided bytes. This is useful in getters used\n      with the force-revert delegatecall pattern.\n @param _bytes The bytes to revert with." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_revert", "nameLocation": "18040:7:37", "parameters": { "id": 5399, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 5398, "mutability": "mutable", "name": "_bytes", "nameLocation": "18061:6:37", "nodeType": "VariableDeclaration", "scope": 5408, "src": "18048:19:37", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 5397, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "18048:5:37", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "src": "18047:21:37" }, "returnParameters": { "id": 5400, "nodeType": "ParameterList", "parameters": [], "src": "18083:0:37" }, "scope": 5409, "stateMutability": "pure", "virtual": false, "visibility": "internal" }], "abstract": true, "baseContracts": [{ "baseName": { "id": 4639, "name": "IHyperdriveRead", "nameLocations": ["1262:15:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 11913, "src": "1262:15:37" }, "id": 4640, "nodeType": "InheritanceSpecifier", "src": "1262:15:37" }, { "baseName": { "id": 4641, "name": "HyperdriveAdmin", "nameLocations": ["1283:15:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 13205, "src": "1283:15:37" }, "id": 4642, "nodeType": "InheritanceSpecifier", "src": "1283:15:37" }, { "baseName": { "id": 4643, "name": "HyperdriveMultiToken", "nameLocations": ["1304:20:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 17165, "src": "1304:20:37" }, "id": 4644, "nodeType": "InheritanceSpecifier", "src": "1304:20:37" }, { "baseName": { "id": 4645, "name": "HyperdriveLP", "nameLocations": ["1330:12:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 15747, "src": "1330:12:37" }, "id": 4646, "nodeType": "InheritanceSpecifier", "src": "1330:12:37" }, { "baseName": { "id": 4647, "name": "HyperdriveLong", "nameLocations": ["1348:14:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 16681, "src": "1348:14:37" }, "id": 4648, "nodeType": "InheritanceSpecifier", "src": "1348:14:37" }, { "baseName": { "id": 4649, "name": "HyperdriveShort", "nameLocations": ["1368:15:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 18151, "src": "1368:15:37" }, "id": 4650, "nodeType": "InheritanceSpecifier", "src": "1368:15:37" }, { "baseName": { "id": 4651, "name": "HyperdriveCheckpoint", "nameLocations": ["1389:20:37"], "nodeType": "IdentifierPath", "referencedDeclaration": 14845, "src": "1389:20:37" }, "id": 4652, "nodeType": "InheritanceSpecifier", "src": "1389:20:37" }], "canonicalName": "HyperdriveTarget0", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 4638, "nodeType": "StructuredDocumentation", "src": "899:320:37", "text": "@author DELV\n @title HyperdriveTarget0\n @notice Hyperdrive's target 0 logic contract.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance." }, "fullyImplemented": false, "linearizedBaseContracts": [5409, 14845, 18151, 16681, 15747, 17165, 13205, 14381, 18367, 72043, 11599, 12165, 11913, 12253], "name": "HyperdriveTarget0", "nameLocation": "1237:17:37", "scope": 5410, "usedErrors": [10932, 10938, 10941, 10950, 10962, 10965, 10974, 10977, 10980, 10983, 11007, 11012, 11015, 11024, 11039, 71418, 71699, 71704, 71707, 71988], "usedEvents": [11419, 11434, 11453, 11468, 11485, 11504, 11523, 11544, 11557, 11564, 11569, 11574, 11579, 11586, 11591, 11598, 12146, 12155, 12164] }], "license": "Apache-2.0" }, "id": 37 };
