export const LPMath = {
  name: 'LPMath' as const,
  abi: [
  {
    "type": "function",
    "name": "calculateDistributeExcessIdle",
    "inputs": [
      {
        "name": "_params",
        "type": "tuple",
        "internalType": "struct LPMath.DistributeExcessIdleParams",
        "components": [
          {
            "name": "presentValueParams",
            "type": "tuple",
            "internalType": "struct LPMath.PresentValueParams",
            "components": [
              {
                "name": "shareReserves",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "shareAdjustment",
                "type": "int256",
                "internalType": "int256"
              },
              {
                "name": "bondReserves",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "vaultSharePrice",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "initialVaultSharePrice",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "minimumShareReserves",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "minimumTransactionAmount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "timeStretch",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "longsOutstanding",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "longAverageTimeRemaining",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "shortsOutstanding",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "shortAverageTimeRemaining",
                "type": "uint256",
                "internalType": "uint256"
              }
            ]
          },
          {
            "name": "startingPresentValue",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "activeLpTotalSupply",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "withdrawalSharesTotalSupply",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "idle",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "netCurveTrade",
            "type": "int256",
            "internalType": "int256"
          },
          {
            "name": "originalShareReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "originalShareAdjustment",
            "type": "int256",
            "internalType": "int256"
          },
          {
            "name": "originalBondReserves",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "name": "_maxIterations",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "calculateInitialReserves",
    "inputs": [
      {
        "name": "_shareAmount",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_vaultSharePrice",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_initialVaultSharePrice",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_targetApr",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_positionDuration",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_timeStretch",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "shareReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "shareAdjustment",
        "type": "int256",
        "internalType": "int256"
      },
      {
        "name": "bondReserves",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "calculatePresentValue",
    "inputs": [
      {
        "name": "_params",
        "type": "tuple",
        "internalType": "struct LPMath.PresentValueParams",
        "components": [
          {
            "name": "shareReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shareAdjustment",
            "type": "int256",
            "internalType": "int256"
          },
          {
            "name": "bondReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "vaultSharePrice",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "initialVaultSharePrice",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minimumShareReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minimumTransactionAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeStretch",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "longsOutstanding",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "longAverageTimeRemaining",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shortsOutstanding",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shortAverageTimeRemaining",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "calculatePresentValueSafe",
    "inputs": [
      {
        "name": "_params",
        "type": "tuple",
        "internalType": "struct LPMath.PresentValueParams",
        "components": [
          {
            "name": "shareReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shareAdjustment",
            "type": "int256",
            "internalType": "int256"
          },
          {
            "name": "bondReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "vaultSharePrice",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "initialVaultSharePrice",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minimumShareReserves",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "minimumTransactionAmount",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeStretch",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "longsOutstanding",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "longAverageTimeRemaining",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shortsOutstanding",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "shortAverageTimeRemaining",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "function",
    "name": "calculateUpdateLiquiditySafe",
    "inputs": [
      {
        "name": "_shareReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_shareAdjustment",
        "type": "int256",
        "internalType": "int256"
      },
      {
        "name": "_bondReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_minimumShareReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_shareReservesDelta",
        "type": "int256",
        "internalType": "int256"
      }
    ],
    "outputs": [
      {
        "name": "shareReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "shareAdjustment",
        "type": "int256",
        "internalType": "int256"
      },
      {
        "name": "bondReserves",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "pure"
  },
  {
    "type": "error",
    "name": "ExpInvalidExponent",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidPresentValue",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LnInvalidInput",
    "inputs": []
  },
  {
    "type": "error",
    "name": "UnsafeCastToInt256",
    "inputs": []
  }
] as const,
  bytecode: '0x612046610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c80632c03ef68146100645780635a1b419e14610091578063b29e1d1e146100b9578063bf3aa156146100e7578063d0b457ce14610108575b5f80fd5b610077610072366004611e11565b61013d565b604080519283526020830191909152015b60405180910390f35b6100a461009f366004611ead565b610223565b60408051928352901515602083015201610088565b6100cc6100c7366004611ec8565b6102a9565b60408051938452602084019290925290820152606001610088565b6100fa6100f5366004611ead565b61035d565b604051908152602001610088565b61011b610116366004611f07565b610392565b6040805194855260208501939093529183015215156060820152608001610088565b5f805f806101538660c001518760e001516104a2565b9150915080610169575f8093509350505061021c565b5f61017487846104da565b92509050811580610183575080155b15610196575f809450945050505061021c565b5f6101a188836105e1565b9050805f036101b9575f80955095505050505061021c565b876060015181116101d0579450925061021c915050565b5060608701515f6101e38986858b6106b1565b9050805f036101fc575f8096509650505050505061021c565b828110610213575f8096509650505050505061021c565b90955093505050505b9250929050565b5f805f805f61023186610bac565b915091508061024757505f958695509350505050565b6102548660a00151610ec3565b61025d87610ef0565b8361026a895f0151610ec3565b6102749190611f52565b61027e9190611f52565b6102889190611f79565b925050505f81121561029f57505f93849350915050565b9360019350915050565b5f8080806102bb866301e13380610f5d565b90505f6102ec6102cb8984610f78565b6102dd90670de0b6b3a7640000611f98565b670de0b6b3a764000090610f8c565b8b955090506103406102fe8b87610f78565b6103088b84610fa0565b61032e610327610320670de0b6b3a76400008c610f5d565b8690610fb4565b8e90610fa0565b6103389190611f98565b8b9190611019565b925061034d83828c611019565b9350505096509650969350505050565b5f805f61036984610223565b915091508061038b57604051635516328b60e11b815260040160405180910390fd5b5092915050565b5f805f80845f036103ae57508792508691508590506001610496565b5f856103b98b610ec3565b6103c39190611f52565b90506103ce87610ec3565b8112156103e7575f805f80945094509450945050610496565b8094505f891261040b576104046103ff868b8d611019565b610ec3565b935061042e565b6104226103ff61041a8b611fab565b87908d611034565b61042b90611fab565b93505b5f8061043a8c8c6104a2565b9150915080610457575f805f809650965096509650505050610496565b5f61046288886104a2565b9250905081610480575f805f80975097509750975050505050610496565b61048b8b8285611019565b955060019450505050505b95509550955095915050565b5f805f836104af86610ec3565b6104b99190611f79565b90505f8112156104cf575f80925092505061021c565b946001945092505050565b5f805f8460a00151126104f55750506080820151600161021c565b5f8460a0015161050490611fab565b90505f61053e85876101000151885f015160e00151670de0b6b3a764000061052c9190611fc5565b89516060810151608090910151611057565b9350905082158061054d575080155b1561055f575f8093509350505061021c565b5f61056a8383610f8c565b9050670de0b6b3a764000081116105a65780670de0b6b3a764000003945061059f8760c0015186610f7890919063ffffffff16565b94506105b4565b5f809450945050505061021c565b86608001518511156105d357866080015160019450945050505061021c565b506001925050509250929050565b5f806106108460c001518560e00151866101000151875f015160a0015161060788610ec3565b61011690611fab565b87516040810192909252602082019290925291909152905080610636575f9150506106ab565b5f610643855f0151610223565b9250905081610656575f925050506106ab565b8460200151811061066b575f925050506106ab565b5f856060015186604001516106809190611f98565b905061069b828760200151836110199092919063ffffffff16565b6106a59082611fc5565b93505050505b92915050565b5f80856060015186604001516106c79190611f98565b602087015160608801519192505f916106e09184611019565b90508660a001515f036106f6579150610ba49050565b5f808089600488101561070857600497505b5f5b88811015610a535761071c868b611106565b95505f6107438360c001518460e00151856101000151865f015160a001516106078c610ec3565b86516040810192909252602082019290925291909152905080610770575f98505050505050505050610ba4565b5f61077d8e5f0151610223565b9250905081610797575f9950505050505050505050610ba4565b6107a284828b61111a565b156107b857879950505050505050505050610ba4565b5f8460a00151131561091a57835180516020820151604083015160a084015160e0909401515f9461080a949392916107f890670de0b6b3a7640000611fc5565b8a516060810151608090910151611185565b9350905082610825575f9a5050505050505050505050610ba4565b808560a00151106109185761083985611288565b909950925082610855575f9a5050505050505050505050610ba4565b6108798560c001518660e00151876101000151885f015160a001516106078e610ec3565b885160408101929092526020820192909252919091529250826108a8575f9a5050505050505050505050610ba4565b845180516020820151604083015160a084015160e0909401516108d894906107f890670de0b6b3a7640000611fc5565b93509050826108f3575f9a5050505050505050505050610ba4565b8e60a00151811161091057889a5050505050505050505050610ba4565b505050610a4b565b505b5f61092a858f8760a00151611355565b935090508215806109435750670de0b6b3a76400008110155b1561095a575f9a5050505050505050505050610ba4565b80670de0b6b3a76400000390505f6109866103ff87604001518860200151610fa090919063ffffffff16565b6109936103ff858e610f78565b61099d9190611f79565b90508815806109bb57506109b0896116a0565b6109b9826116a0565b105b156109ca578098508997508296505b5f8113156109f7576109e68b6109e08385610f5d565b90610f5d565b6109f0908b611f98565b9950610a46565b5f811215610a3d575f610a0f8c6109e0858186611fab565b90508a811015610a2357808b039a50610a37565b5f9c50505050505050505050505050610ba4565b50610a46565b50505050610a53565b505050505b60010161070a565b505f610a798260c001518360e00151846101000151855f015160a001516106078b610ec3565b85516040810192909252602082019290925291909152905080610aa5575f975050505050505050610ba4565b5f610ab2835f015161035d565b90505f610ad36103ff85604001518660200151610fa090919063ffffffff16565b610ae06103ff848c610f78565b610aea9190611f79565b9050610af5876116a0565b610afe826116a0565b1015610b0b578795508194505b610b32610b26655af3107a4000670de0b6b3a7640000611fc5565b6020860151908b611034565b6040850151610b42908790610f5d565b1080610b825750610b70610b64655af3107a4000670de0b6b3a7640000611f98565b6020860151908b611019565b6040850151610b80908790610f8c565b115b15610b98575f9950505050505050505050610ba4565b50939750505050505050505b949350505050565b5f805f610bcf6103ff856101600151866101400151610f7890919063ffffffff16565b610bef6103ff866101200151876101000151610fa090919063ffffffff16565b610bf99190611f79565b90505f80610c0e865f015187602001516104a2565b9150915080610c2457505f958695509350505050565b5f831315610d6b575f8390505f610c6e885f015189602001518a604001518b60a001518c60e00151670de0b6b3a7640000610c5f9190611fc5565b8d606001518e60800151611185565b9350905082610c8657505f9788975095505050505050565b818110610d21575f610cbf858a60400151858c60e00151670de0b6b3a7640000610cb09190611fc5565b8d606001518e608001516116b1565b9450905083158015610cd457508860c0015183105b15610cea57505f98600198509650505050505050565b83610cff57505f988998509650505050505050565b610d0881610ec3565b610d1190611fab565b9960019950975050505050505050565b5f886020015112610d5757610d3f8860a00151856103ff9190611fc5565b610d4890611fab565b98600198509650505050505050565b60a08801518851610d3f916103ff91611fc5565b5f831215610eb5575f610d7d84611fab565b90505f610db08489604001518a60e00151670de0b6b3a7640000610da19190611fc5565b8b606001518c60800151611057565b9350905082610dc857505f9788975095505050505050565b818110610e4a575f610e01858a60400151858c60e00151670de0b6b3a7640000610df29190611fc5565b8d606001518e60800151611770565b9450905083158015610e1657508860c0015183105b15610e2c57505f98600198509650505050505050565b83610e4157505f988998509650505050505050565b610d1181610ec3565b5f610e7b858a604001518b60e00151670de0b6b3a7640000610e6c9190611fc5565b8c606001518d60800151611842565b9450905083610e9457505f988998509650505050505050565b610d11610eab8a6060015184866109e09190611fc5565b6103ff9083611f98565b505f95600195509350505050565b5f6001600160ff1b03821115610eec5760405163396ea70160e11b815260040160405180910390fd5b5090565b5f610f226103ff836101200151670de0b6b3a7640000610f109190611fc5565b60608501516101008601519190611034565b610f536103ff846101600151670de0b6b3a7640000610f419190611fc5565b60608601516101408701519190611019565b6106ab9190611f79565b5f610f7183670de0b6b3a764000084611019565b9392505050565b5f610f718383670de0b6b3a7640000611019565b5f610f7183670de0b6b3a764000084611034565b5f610f718383670de0b6b3a7640000611034565b5f815f03610fcb5750670de0b6b3a76400006106ab565b825f03610fd957505f6106ab565b5f610fe383610ec3565b90505f610ff7610ff286610ec3565b6118f4565b905081810261100e670de0b6b3a764000082611fd8565b90506106a581611b22565b5f825f19048411830215820261102d575f80fd5b5091020490565b5f825f190484118302158202611048575f80fd5b50910281810615159190040190565b5f805f6110678888888888611cbe565b90505f611091670de0b6b3a76400006110808888610f5d565b61108a9190611f98565b8390610f8c565b9050670de0b6b3a764000081106110c5576110be6110b7670de0b6b3a764000089610f8c565b8290610fb4565b90506110dd565b6110da6110b7670de0b6b3a764000089610f5d565b90505b808810156110f2575f809350935050506110fc565b8703925060019150505b9550959350505050565b5f8183116111145782610f71565b50919050565b60208301515f9061112b9084610f8c565b604085015161113b908490610f5d565b10158015610ba45750602084015161116b9084611164633b9aca00670de0b6b3a7640000611f98565b9190611019565b604085015161117b908490610f8c565b1115949350505050565b5f805f8812156111a55761119888611fab565b6111a29087611f98565b95505b5f806111b18b8b6104a2565b91509150806111c7575f8093509350505061127c565b5f6111d5838b8a8a8a611cec565b90505f6111f76111ef8a6111e98a8e610fa0565b90610fb4565b899089611034565b905080821015611210575f80955095505050505061127c565b808203670de0b6b3a7640000811061123e576112376110b7670de0b6b3a76400008c610f5d565b9050611256565b6112536110b7670de0b6b3a76400008c610f8c565b90505b8b81101561126e575f8096509650505050505061127c565b8b9003955060019450505050505b97509795505050505050565b5f805f8360e001511361129f57505f928392509050565b5f6112ac845f0151610ef0565b90505f6112d78560400151866060015187604001516112cb9190611f98565b60208801519190611034565b90505f82126112fc57808210156112f057819003611312565b505f9485945092505050565b61130582611fab565b61130f9082611f98565b90505b60e085015160c0860151611327918390611034565b9050808560c00151101561134157505f9485945092505050565b808560c00151036001935093505050915091565b5f805f80841261137757855160400151611370908590611f98565b90506113b0565b5f61138185611fab565b8751604001519091508110156113a15786516040015181900391506113ae565b5f80935093505050611698565b505b855180516020909101515f9182916113c891906104a2565b91509150806113df575f8094509450505050611698565b875160e08101516040909101515f9161141391611407916114009190610fb4565b8a90610f78565b6101008b015190610f8c565b895160e081015160809091015161143e91611432916111e99088610f78565b8b516060015190610f8c565b6114489190611f98565b90505f61147e61147261146b8c5f015160e0015188610fb490919063ffffffff16565b8b90610fa0565b6101008c015190610f5d565b905080821015611498575f80965096505050505050611698565b80820391505f6114d7858c5f0151604001518d5f015160e00151670de0b6b3a76400006114c59190611fc5565b8e516060810151608090910151611cbe565b90505f6114ff8c5f015160e00151670de0b6b3a76400006114f89190611fc5565b8890610fb4565b90508082101561151b575f809850985050505050505050611698565b8b51608081015160609091015191830391611537918391611034565b9050670de0b6b3a7640000811061157b578b5160e00151611574906110b79061156890670de0b6b3a7640000611fc5565b8e5160e0015190610f8c565b90506115aa565b8b5160e001516115a7906110b79061159b90670de0b6b3a7640000611fc5565b8e5160e0015190610f5d565b90505b8b51606001516115bd9085908390611034565b935083670de0b6b3a764000011156115e15783670de0b6b3a76400000393506115f4565b5f60019850985050505050505050611698565b5f8c60e00151126116555760c08c015160e08d015161161291610f8c565b9250670de0b6b3a7640000831115611636575f809850985050505050505050611698565b670de0b6b3a7640000929092039161164e8484610f78565b935061168a565b61168761166e8d60c001518e60e001516109e090611fab565b61168090670de0b6b3a7640000611f98565b8590610f78565b93505b509196506001955050505050505b935093915050565b5f80821215610eec57815f036106ab565b5f805f6116c18989888888611cbe565b90506116d1866111e9898b611f98565b9750878110156116e7575f809250925050611765565b8781036116f5818688611034565b9050670de0b6b3a764000081106117225761171b6110b7670de0b6b3a764000089610f8c565b905061173a565b6117376110b7670de0b6b3a764000089610f5d565b90505b6117448186610f8c565b9050808a101561175b575f80935093505050611765565b8903925060019150505b965096945050505050565b5f805f6117808989888888611cbe565b905086881015611796575f809250925050611765565b96869003966117a58887610fb4565b9750878110156117bb575f809250925050611765565b8781036117c9818688611034565b9050670de0b6b3a764000081106117f6576117ef6110b7670de0b6b3a764000089610f8c565b905061180e565b61180b6110b7670de0b6b3a764000089610f5d565b90505b6118188186610f8c565b90508981101561182f575f80935093505050611765565b9890980398600198509650505050505050565b5f805f6118528888888888611cec565b90505f61187c670de0b6b3a764000061186b8888610f8c565b6118759190611f98565b8390610f5d565b9050670de0b6b3a764000081106118a9576118a26110b7670de0b6b3a764000089610f5d565b90506118c1565b6118be6110b7670de0b6b3a764000089610f8c565b90505b6118cb8186610f5d565b9050888110156118e2575f809350935050506110fc565b97909703976001975095505050505050565b5f8082136119155760405163e61b497560e01b815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906119a19084901c610ec3565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b5f680248ce36a70cb26b3e198213611b3b57505f919050565b680755bf798b4a1bf1e58212611b64576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b0591505f60606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190611cb474029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c610ec3565b9695505050505050565b5f611cc98585610fb4565b611ce2611cda866111e9868b610fa0565b859085611034565b611cb49190611f98565b5f611cf78585610fb4565b611ce2611d08866111e9868b610f78565b859085611019565b604051610180810167ffffffffffffffff81118282101715611d4057634e487b7160e01b5f52604160045260245ffd5b60405290565b604051610120810167ffffffffffffffff81118282101715611d4057634e487b7160e01b5f52604160045260245ffd5b5f6101808284031215611d87575f80fd5b611d8f611d10565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b5f808284036102a0811215611e24575f80fd5b61028080821215611e33575f80fd5b611e3b611d46565b9150611e478686611d76565b825261018085013560208301526101a085013560408301526101c085013560608301526101e0850135608083015261020085013560a083015261022085013560c083015261024085013560e0830152610260850135610100830152909593013593505050565b5f6101808284031215611ebe575f80fd5b610f718383611d76565b5f805f805f8060c08789031215611edd575f80fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b5f805f805f60a08688031215611f1b575f80fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b5f52601160045260245ffd5b8082018281125f831280158216821582161715611f7157611f71611f3e565b505092915050565b8181035f83128015838313168383128216171561038b5761038b611f3e565b808201808211156106ab576106ab611f3e565b5f600160ff1b8201611fbf57611fbf611f3e565b505f0390565b818103818111156106ab576106ab611f3e565b5f82611ff257634e487b7160e01b5f52601260045260245ffd5b600160ff1b82145f198414161561200b5761200b611f3e565b50059056fea26469706673582212207d30891a36a0c36041d9662f91afa37ca8b7d83beba8fda2cbd821e451bebe4564736f6c63430008160033' as `0x${string}`,
  methodIdentifiers: {
  "calculateDistributeExcessIdle(LPMath.DistributeExcessIdleParams,uint256)": "2c03ef68",
  "calculateInitialReserves(uint256,uint256,uint256,uint256,uint256,uint256)": "b29e1d1e",
  "calculatePresentValue(LPMath.PresentValueParams)": "bf3aa156",
  "calculatePresentValueSafe(LPMath.PresentValueParams)": "5a1b419e",
  "calculateUpdateLiquiditySafe(uint256,int256,uint256,uint256,int256)": "d0b457ce"
} as const
};
